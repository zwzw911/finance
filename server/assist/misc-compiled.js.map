{"version":3,"sources":["misc.js"],"names":[],"mappings":"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","file":"misc-compiled.js","sourcesContent":["/**\r\n * Created by Ada on 2016/11/9.\r\n * 非validate相关的函数\r\n */\r\n'use strict'\r\nrequire(\"babel-polyfill\");\r\nrequire(\"babel-core/register\")\r\n\r\nvar miscError=require('../define/error/nodeError').nodeError.assistError.misc\r\nvar gmError=require('../define/error/nodeError').nodeError.assistError.gmImage\r\nvar regex=require('../define/regex/regex').regex\r\nvar randomStringType=require('../define/enum/node').node.randomStringType\r\nvar userStateEnum=require('../define/enum/node').node.userState\r\nvar LuaSHA=require('../define/Lua/LuaSHA').LuaSHA\r\nvar redisError=require('../define/error/redisError').redisError\r\nvar ioredisClient=require('../model/redis/connection/redis_connection').ioredisClient\r\nvar intervalCheck=require('../config/global/defaultGlobalSetting').intervalCheck\r\n\r\nvar mongooseErrorHandler=require('../define/error/mongoError').mongooseErrorHandler\r\nvar execSHALua=require(\"./component/shaLua\").execSHALua\r\n\r\nasync function checkInterval(req){\r\n    //return new Promise(function(resolve,reject){\r\n    var appSetting=require('../config/global/appSetting')\r\n    let identify\r\n\r\n\r\n    if(req.session && req.session.id){\r\n        if(!regex.sessionId.test(req.session.id)){\r\n            return miscError.checkInterval.sessionIdWrong\r\n        }\r\n        identify=req.session.id\r\n    }else{\r\n        if(true===appSetting['trust proxy']){\r\n            //req.ip和req.ips，只有在设置了trust proxy之后才能生效，否则一直是undefined\r\n            if(req.ips && req.ips[0]){\r\n                identify= req.ips[0]\r\n            }\r\n        }else{\r\n            identify=req.connection.remoteAddress\r\n        }\r\n\r\n        if (identify && identify.substr(0, 7) == \"::ffff:\") {\r\n            identify = identify.substr(7)\r\n            if(!regex.ip.test(identify)){\r\n                return miscError.checkInterval.IPWrong\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if(undefined===identify){\r\n        return miscError.checkInterval.unknownRequestIdentify\r\n        //return cb(null,)\r\n    }\r\n\r\n\r\n    //console.log(`trust proxy false ${identify}`)\r\n\r\n\r\n    let params={}\r\n    params.setting=intervalCheck\r\n    params.currentTime=new Date().getTime()\r\n    params.id=identify\r\n\r\n    let result=await execSHALua(LuaSHA.Lua_check_interval,params)\r\n    //console.log(result.rc)\r\n    //result=JSON.parse(result)\r\n    switch (result['rc']) {\r\n        case 0:\r\n            return result\r\n        case 10:\r\n            let rc = {}\r\n            rc['rc'] = miscError.checkInterval.tooMuchReq.rc\r\n            rc['msg'] = `${miscError.checkInterval.forbiddenReq.msg.client}，请在${result['msg']}秒后重试`\r\n            //console.log(rc)\r\n            return  rc\r\n        case 11:\r\n            //console.log(intervalCheckBaseIPNodeError.between2ReqCheckFail)\r\n            return  miscError.checkInterval.between2ReqCheckFail\r\n            break;\r\n        case 12:\r\n            //console.log(intervalCheckBaseIPNodeError.exceedMaxTimesInDuration)\r\n            return miscError.checkInterval.exceedMaxTimesInDuration\r\n            break;\r\n        default:\r\n    }\r\n\r\n}\r\n\r\n//len:产生字符串的长度\r\n//type: basic(0-9A-Z)；normal(0-9A-Za-z); complicated(normal+特殊字符)\r\nfunction generateRandomString(len=4,type=randomStringType.normal){\r\n    /*    if(undefined===len || false===dataTypeCheck.isInt(len)){\r\n     len=4\r\n     }*/\r\n    /*    strict= strict ? true:false\r\n     let validString='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n     let result=''\r\n     if(true===strict){validString+=`${validString}!@#$%^&*()+={}[]|\\?/><`}*/\r\n    let validString\r\n    let basicString='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n    switch (type){\r\n        case randomStringType.basic:\r\n            validString=basicString\r\n            break;\r\n        case randomStringType.normal:\r\n            validString=`${basicString}abcdefghijklmnopqrstuvwxyz`\r\n            break;\r\n        case randomStringType.complicated:\r\n            validString=basicString+'abcdefghijklmnopqrstuvwxyz'+\"`\"+`!@#%&)(_=}{:\"><,;'[]\\^$*+|?.-`\r\n            break;\r\n    }\r\n    //console.log(validString)\r\n    let validStringLen=validString.length\r\n    let result='';\r\n    for(let i=0;i<len;i++){\r\n        result+=validString.substr(parseInt(Math.random()*validStringLen,10),1);\r\n    }\r\n\r\n    return result\r\n}\r\n\r\n//计算当天剩下的毫秒数\r\nvar restMSInDay=function(){\r\n    let day=new Date().toLocaleDateString()\r\n    let endTime='23:59:59'\r\n    //毫秒\r\n    //let ttlTime=parseInt(new Date(`${day} ${endTime}`).getTime())-parseInt(new Date().getTime())\r\n    let ttlTime=new Date(`${day} ${endTime}`).getTime()-new Date().getTime()\r\n    //console.log(ttlTime)\r\n    return ttlTime\r\n}\r\n\r\nvar restSecondInDay=function(){\r\n    //console.log(leftMSInDay)\r\n    return Math.round(parseInt(restMSInDay())/1000)\r\n}\r\n\r\n\r\n\r\n    //解析GM返回的文件大小，返回数值和单位（GM返回Ki，Mi，Gi.没有单位，是Byte。除了Byte，其他都只保留1位小数，并且四舍五入。例如：1.75Ki=1.8Ki）\r\n//1.8Ki，返回1.8和“ki”；900，返回900\r\n//解析失败，或者单位是Gi，返回对应的错误\r\n//{ rc: 0, msg: { sizeNum: '200', sizeUnit: 'Ki' } }\r\n    function parseGmFileSize(fileSize){\r\n        var p=/(\\d{1,}(\\.\\d{1,})?)([KkMmGg]i)?/ //1.8Ki\r\n        var parseResult=fileSize.match(p)\r\n        if(null===parseResult){\r\n            return gmError.cantParseGmFileSize\r\n        }\r\n        if(parseResult[0]!==fileSize ){\r\n            return gmError.cantParseGmFileSize\r\n        }\r\n        var fileSizeNum=parseFloat(parseResult[1])\r\n        if(isNaN(fileSizeNum)){\r\n            return  gmError.cantParseGmFileSizeNum\r\n        }\r\n        //单位是Gi，直接返回大小超限\r\n        if('Gi'===parseResult[3]){ //正则中的第二个子表达式只是用来把小数及之后的数字 放在一起做判断，而无需取出使用\r\n            return gmError.exceedMaxSize\r\n        }\r\n        return {rc:0,msg:{sizeNum:parseResult[1],sizeUnit:parseResult[3]}}\r\n    }\r\n\r\n//把GM返回的fileSize转换成Byte，以便比较\r\n//{ rc: 0, msg: 204800 }\r\n    function convertImageFileSizeToByte(fileSizeNum,fileSizeUnit){\r\n        var imageFileSizeInByte,imageFileSizeNum //最终以byte为单位的大小； GM得到的size的数值部分\r\n        if(undefined===fileSizeUnit ){\r\n            imageFileSizeInByte=parseInt(fileSizeNum)\r\n            if(isNaN(imageFileSizeInByte)){\r\n                return gmError.cantParseGmFileSizeNum\r\n            }\r\n            if(imageFileSizeInByte>1024 || imageFileSizeInByte<0){\r\n                return gmError.invalidFileSizeInByte\r\n            }\r\n            return isNaN(imageFileSizeInByte) ?  gmError.fileSizeEmpty:{rc:0,msg:imageFileSizeInByte}\r\n        }\r\n        if('Ki'===fileSizeUnit){\r\n//console.log('k')\r\n            imageFileSizeNum =parseFloat(fileSizeNum)\r\n            return isNaN(imageFileSizeNum) ? gmError.cantParseGmFileSizeNum:{rc:0,msg:parseInt(fileSizeNum*1024)}\r\n        }\r\n        if('Mi'===fileSizeUnit){\r\n            imageFileSizeNum=parseFloat(fileSizeNum)\r\n            return isNaN(imageFileSizeNum) ? gmError.cantParseGmFileSizeNum:{rc:0,msg:parseInt(fileSizeNum*1024*1024)}\r\n        }\r\n        if('Gi'===fileSizeUnit){\r\n            imageFileSizeNum=parseFloat(fileSizeNum)\r\n            return isNaN(imageFileSizeNum) ? gmError.cantParseGmFileSizeNum:{rc:0,msg:parseInt(fileSizeNum*1024*1024*1024)}\r\n        }\r\n\r\n        return gmError.invalidSizeUnit\r\n    }\r\n\r\n    function getPemFile(pemPath){\r\n        for(var i= 0,n=pemPath.length;i<n;i++){\r\n            if(true===fileExist(pemPath[i])){\r\n                //console.log(pemPath[i])\r\n                return pemPath[i]\r\n\r\n                //break\r\n            }\r\n        }\r\n        return\r\n    }\r\n\r\n//获得当前用户的信息，以便在toolbar上显示对应的信息\r\nvar getUserInfo=function(req){\r\n    return req.session.userName\r\n    /*    var result\r\n     if(req.session.state===userStateEnum.login){\r\n     result=req.session.userName\r\n     //result.userId=req.session.userId\r\n     }\r\n     //console.log(result)\r\n     return result*/\r\n}\r\n\r\n\r\n//返回enum 状态（noSess/notLogin/Login）\r\nvar checkUserState=function(req){\r\n    //如果是非GET的req，返回noSess说明是黑客攻击\r\n    if(undefined===req.session){\r\n        return userStateEnum.noSess\r\n    }\r\n    //已经在get方法中获得sess\r\n    if(undefined===req.session.userName){\r\n        return userStateEnum.notLogin\r\n    }\r\n\r\n    return userStateEnum.login\r\n    //需要检测状态,如果不是1或者2,就没有session,后续的代码也就不必执行\r\n    /*    if(userStateEnum.notLogin!=req.session.state && userStateEnum.login!=req.session.state){\r\n     return miscError.user.notLogin\r\n     }\r\n     return rightResult*/\r\n}\r\n\r\n\r\n// 检查\r\n// 1. 用户是否通过get获得页面(req.session.state=1 or 2)\r\n// 2. 根据user是否已经登陆，决定是否检查用户session中的用户id是否正确\r\n// 3. 检查interval\r\n// forceCheckUserLogin:true：强制检查用户已经登录； false：不检查用户是否已经登录\r\nvar preCheck=function(req, forceCheckUserLogin){\r\n    var result=checkUserStateNormal(req)\r\n    if(result.rc>0){\r\n        return result\r\n    }\r\n\r\n    if(true===forceCheckUserLogin){\r\n        if(userStateEnum.login!==req.session.state){\r\n            return miscError.user.notLogin\r\n        }\r\n    }\r\n\r\n    if(1===req.session.state){\r\n        result=regex.objectId.test(req.session.userId)\r\n        if(result.rc>0){\r\n            return miscError.user.userIdFormatWrong\r\n        }\r\n    }\r\n    return checkInterval(req)\r\n}\r\n\r\nvar encodeHtml = function(s){\r\n    if(undefined===s){return \"\";}\r\n    if('string'!=typeof(s)){s= s.toString();};\r\n    if(0=== s.length){return \"\";};\r\n    var returnHtml='';\r\n\r\n    return s.replace(regex.encodeHtmlChar,function(char){\r\n        var c=char.charCodeAt(0),r='&#';\r\n        c=(32===c) ? 160 : c;\r\n        return r+c+';';\r\n    })\r\n    /*    s = (s != undefined) ? s : s.toString();\r\n     return (typeof(s) != \"string\") ? s :\r\n     s.replace(this.REGX_HTML_ENCODE,\r\n     function($0){\r\n     var c = $0.charCodeAt(0), r = [\"&#\"];\r\n     c = (c == 0x20) ? 0xA0 : c;\r\n     r.push(c); r.push(\";\");\r\n     return r.join(\"\");\r\n     });*/\r\n};\r\n\r\nvar populateSingleDoc=function(singleDoc,populateOpt,populatedFields){\r\n    return new Promise(function(resolve,reject){\r\n        let populateFlag=false\r\n        // let createdResult=singleDoc\r\n        for(let singlePopulatedField of populatedFields){\r\n            if(singleDoc[singlePopulatedField]){\r\n                populateFlag=true\r\n                break;\r\n            }\r\n        }\r\n        // console.log(`department insert result is ${JSON.stringify(result)}`)\r\n        if(populateFlag){\r\n            singleDoc.populate(populateOpt,function(populateErr,populateResult){\r\n                //console.log('create populate')\r\n                if(populateErr){\r\n                    //console.log(`department create fail: ${JSON.stringify(populateErr)}`)\r\n                    resolve( mongooseErrorHandler(populateErr))\r\n                }\r\n                resolve({rc:0,msg:populateResult})\r\n            })\r\n        }else{\r\n            resolve({rc:0,msg:singleDoc})\r\n        }\r\n    })\r\n\r\n}\r\n\r\n//将server返回的rc格式化成client能接受的格式\r\n//server可能是{rc:xxxx,msg:{client:'yyy',server:'zzz'}======>client  {rc:xxx,msg:yyy}\r\nvar  formatRc=function(rc,clientFlag=true){\r\n// console.log(`original rc is ${JSON.stringify(rc)}`)\r\n    if(rc.msg && (rc.msg.client || rc.msg.server)){\r\n        let result={}\r\n        result['rc']=rc['rc']\r\n        if(clientFlag){\r\n            result['msg']=rc.msg.client\r\n        }else{\r\n            result['msg']=rc.msg.server\r\n        }\r\n        return result\r\n    }\r\n    //其他格式的rc（正确结果，或者已经是{rc:xxx,msg:'yyy'}），直接返回\r\n    return rc\r\n    /*    //已经是{rc:xxx,msg:'yyy'}的格式，直接返回输入值\r\n     if(rc.msg && undefined===rc.msg.client &&  undefined===rc.msg.server){\r\n     return rc\r\n     }\r\n\r\n     return miscError.validate.rcFormatWrong*/\r\n\r\n}\r\n\r\n//1. 搜索字符串中的+转换成空格\r\n//2. 截取规定的字符数量\r\nvar convertURLSearchString=function(searchString,cb){\r\n    var tmpStr=searchString.split('+');\r\n    //console.log(tmpStr)\r\n    CRUDGlobalSetting.getSingleSetting('search','totalKeyLen',function(err,totalLen){\r\n        if(0<totalLen.rc){\r\n            return cb(null,totalLen)\r\n        }\r\n        var strNum=tmpStr.length\r\n        var curStrLen=0;//计算当前处理的字符长度\r\n        var curStr='';//转换后的搜索字符串（使用空格分隔）\r\n        for(var i=0;i<strNum;i++){\r\n            //第一个key就超长，直接截取20个字符\r\n            if(0===i && tmpStr[0].length>totalLen){\r\n                curStr=tmpStr[0].substring(0,totalLen)\r\n                return cb(null,{rc:0,msg:curStr.trim()})\r\n            }\r\n            //如果当前已经处理的字符串+下一个要处理的字符串的长度超出，返回当前已经处理的字符串，舍弃之后的字符串\r\n            //-i:忽略空格的长度\r\n            if(curStr.length+tmpStr[i].length-i>totalLen){\r\n                return cb(null,{rc:0,msg:curStr.trim()})\r\n            }\r\n            curStr+=tmpStr[i]\r\n            curStr+=' ';\r\n\r\n        }\r\n        return cb(null,{rc:0,msg:curStr.trim()})\r\n    })\r\n}\r\nmodule.exports={\r\n    checkInterval,\r\n    generateRandomString,\r\n    restMSInDay,\r\n    restSecondInDay,\r\n\r\n    parseGmFileSize,\r\n    convertImageFileSizeToByte,\r\n    getPemFile,\r\n\r\n    getUserInfo,\r\n    checkUserState,\r\n    preCheck,\r\n\r\n    encodeHtml,\r\n\r\n    populateSingleDoc,\r\n    formatRc,\r\n\r\n    convertURLSearchString,\r\n}"]}