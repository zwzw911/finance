{"version":3,"sources":["cookieSession.js"],"names":[],"mappings":";;AAAA;;;AAGI;;;;AAIJ,IAAI,kBAAgB,QAAQ,uBAAR,EAAiC,QAArD;AACA,IAAI,iBAAe,QAAQ,iBAAR,CAAnB;AACA,IAAI,eAAa,QAAQ,eAAR,EAAyB,cAAzB,CAAjB;AACA,IAAI,gBAAc,QAAQ,0CAAR,EAAoD,OAAtE;;AAEA;;;;;;;;;;;;AAYA,IAAI,iBAAe,cAAc,OAAjC,C,CAA4C;AAC5C,IAAI,QAAM,IAAI,YAAJ,CAAiB,cAAc,YAAd,CAA2B,KAA5C,CAAV,C,CAAgE;AAChE,eAAe,MAAf,GAAsB,cAAc,MAApC,C,CAA4C;AAC5C,eAAe,KAAf,GAAqB,KAArB,C,CAA6B;AAC7B;;;;AAKA;;;;;;;;AAQA,QAAQ,OAAR,GAAgB,eAAe,cAAf,CAAhB,C,CAAoD;AACpD,QAAQ,KAAR,GAAc,KAAd,C,CAAwB;AACxB;AACA","file":"cookieSession-compiled.js","sourcesContent":["/**\r\n * Created by ada on 2015/5/15.\r\n */\r\n    /*\r\n    set cookie and express-session main\r\n    for session, reuse mongodb connection\r\n    */\r\nvar mongooseConnect=require('../model/dbConnection').mongoose;\r\nvar expressSession=require('express-session');\r\nvar sessionStore=require('connect-redis')(expressSession);\r\nvar sessionConfig=require('../../config/global/defaultGlobalSetting').session\r\n\r\n/*//maxAge:ms;  负数（-1）：临时cookie，关闭网页就删除cookie；0：立刻删除；正整数：多少毫秒后失效\r\n// secure:false, cookie是否只能在https上传输。false，可在http上传\r\n//path: URL必须符合才能使用cookie。例如，如果设置path为/test/,则URL必须为/test才能使用。设为/，所有URL均可使用。\r\n//domain：域名，必须以.作为开头（或者直接就是IP？？），则所有以此设置为结尾的URL都可使用cookie。domian_path限定了访问cookie的路径\r\n/!*为了简单起见，所有cookie的配置都放在文件中（require命令会把内容存入内存）*!/\r\nvar cookieOptions={path:'/',domain:sessionConfig.domain,maxAge:sessionConfig.maxAge,secure:false,httpOnly:true};\r\n//secret:digest session id\r\n// resave/rolling: when false, only when sesssion expire or session content changed, will save session to store/send cookie to cilent\r\n//saveUninitialized: when false, if session id created but no any content, will not save session to store\r\nvar sessionOptions={secret:'suibian',resave:false,rolling:false,saveUninitialized:false};\r\nvar sessionStoreInst=new sessionStore({mongooseConnection:mongooseConnect.connection});*/\r\n\r\nvar sessionOptions=sessionConfig.session    //session中除了cookie和store的其他option\r\nvar store=new sessionStore(sessionConfig.storeOptions.redis)    //单独赋值，以便可以export。因为store可以在server侧做些操作\r\nsessionOptions.cookie=sessionConfig.cookie  //设置session中cookie相关属性（主要对client起作用）\r\nsessionOptions.store=store   //设置session中store的相关属性（主要是server端）\r\n/*var store=\r\nsessionOptions.cookie=cookieOptions;\r\nsessionOptions.store=sessionStoreInst;*/\r\n\r\n\r\n/*var cookieSetDefault=function(){\r\n    cookieOptions={path:'/',domain:'localhost',maxAge:900000,secure:false,httpOnly:true}\r\n}\r\n\r\nvar setCookieMaxAge=function(duration){\r\n    cookieOptions.maxAge=duration*1000;\r\n}*/\r\n\r\nexports.session=expressSession(sessionOptions);     //app.js中用作中间件\r\nexports.store=store     //提供接口，以便执行store.touch等操作\r\n// exports.cookieOptions=cookieOptions;\r\n//exports.setCookie={cookieSetDefault:cookieSetDefault,setCookieMaxAge:setCookieMaxAge}"]}