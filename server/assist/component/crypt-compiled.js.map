{"version":3,"sources":["crypt.js"],"names":[],"mappings":"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","file":"crypt-compiled.js","sourcesContent":["/** Created by ada on 2015/6/13.\r\n */\r\n'use strict'\r\nvar crypto=require('crypto');\r\nvar fs=require('fs');\r\n\r\nvar error=require('../../define/error/nodeError').nodeError.assistError.crypt\r\n\r\n//var async=require=('async');\r\n\r\nvar validHashType=['md5','sha1','sha256','sha512','ripemd160'];\r\n\r\nvar validCryptType=['blowfish','aes192'];\r\n//hashType放在string后（因为string是必填，而hashTye是可选）\r\nvar hash=function(string,hashType){\r\n    if ('undefined'===typeof (string) || string.length>255){return false}\r\n\r\n    if (validHashType.indexOf(hashType)===-1 || hashType===null || hashType===undefined){\r\n        hashType=\"md5\";\r\n    }\r\n\r\n    var inst=crypto.createHash(hashType);\r\n    inst.update(string);\r\n    return inst.digest('hex');\r\n}\r\n\r\n//hash+crypt\r\nvar hmac=function(hashType,string,pemFilePath){\r\n    if ('undefined'===typeof (string) || string.length>255){return false}\r\n\r\n    if (validHashType.indexOf(hashType)===-1 || hashType===null || hashType===undefined ){\r\n        hashType=\"md5\";\r\n    }\r\n    //var pemFilePath='../../../other/key/key.pem';//以当前目录为base\r\n    var pem= fs.readFileSync(pemFilePath);//使用异步，无法返回结果\r\n    var key=pem.toString('ascii');\r\n    var inst=crypto.createHmac(hashType,key);\r\n    inst.update(string);\r\n    return inst.digest('hex');\r\n\r\n    //async.series(\r\n    //   [function(callback){\r\n    //        //fs.readFile('../../../other/key/key.pem',function(err,pem){\r\n    //        //    var pem= fs.readFileSync(pemFilePath);//使用异步，无法返回结果\r\n    //        //    var key=pem.toString('ascii');\r\n    //        //    var inst=crypto.createHmac(hashType,key);\r\n    //        //    inst.update(string);\r\n    //        //    var result=inst.digest('hex');\r\n    //        //    callback(null,result)\r\n    //        //    //return inst.digest('hex');\r\n    //        //})\r\n    //       callback(null,'2391c9eeff8b6baa1595e930716c99cb')\r\n    //    }],\r\n    //\r\n    //    function(err,result){\r\n    //        return result;\r\n    //    }\r\n    //);\r\n\r\n}\r\n\r\n var crypt=function(cryptType,string,pemFilePath){\r\n     if ('undefined'===typeof (string) || string.length>255){return false}\r\n     if(validCryptType.indexOf(cryptType)===-1 || cryptType===null || cryptType===undefined){\r\n         cryptType='blowfish';\r\n     }\r\n     //var pemFilePath='../../../other/key/key.pem';\r\n     var pem=fs.readFileSync(pemFilePath);\r\n         //if (err) throw err;\r\n     var key=pem.toString('ascii');\r\n     var inst=crypto.createCipher(cryptType,key);\r\n     var result='';\r\n     result+=inst.update(string,'utf8','hex');\r\n     result+=inst.final('hex');\r\n     return result;\r\n }\r\n\r\n var decrypt=function(cryptType,string,pemFilePath){\r\n     //console.log(typeof (str))\r\n     if ('undefined'===typeof (string) || string.length>255){return false}\r\n     if(validCryptType.indexOf(cryptType)===-1 || cryptType===null || cryptType===undefined){\r\n         cryptType='blowfish';\r\n     }\r\n     //var pemFilePath='../../../other/key/key.pem';\r\n     var pem=fs.readFileSync(pemFilePath);\r\n         //if (err) throw err;\r\n        var key=pem.toString('ascii');\r\n        var inst=crypto.createDecipher(cryptType,key);\r\n        var result='';\r\n        result+=inst.update(string,'hex','utf8');\r\n        result+=inst.final('utf8');\r\n        return result;\r\n     //});\r\n\r\n };\r\n\r\n //产生[0-9a-f]的随机字符\r\n var asyncGenSalt=function(saltLength,cb){\r\n     return new Promise(function (resolve,reject) {\r\n         crypto.randomBytes(saltLength,(err,buf)=>{\r\n             if(err){\r\n                 reject(error.genSaltFail)\r\n             }else{\r\n                 resolve({rc:0,msg:buf.toString('hex')})\r\n             }\r\n\r\n         })\r\n     })\r\n\r\n}\r\n\r\n//console.log(hash('11111111','md5'))\r\n/*exports.hash=hash;\r\nexports.hmac=hmac;\r\nexports.crypt=crypt;\r\nexports.decrypt=decrypt;*/\r\nexports.crypt={\r\n    hash,\r\n    hmac,\r\n    crypt,\r\n    decrypt,\r\n    asyncGenSalt,\r\n}\r\n//exports.genSalt=genSalt;\r\n\r\n/*\r\ngenSalt(16,function(err,result){\r\n\tconsole.log(err)\r\n\tconsole.log(result)\r\n})*/\r\n"]}