{"version":3,"sources":["wrapAsyncNode.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,KAAG,QAAQ,IAAR,CAAP;AACA,IAAI,QAAM,QAAQ,sCAAR,EAAgD,cAA1D;;AAEA,IAAI,QAAM,EAAC,IAAG,CAAJ,EAAV;;AAEA,IAAI,UAAQ;AACR,wBADQ,gCACa,QADb,EACsB;AAC1B,eAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAiB,MAAjB,EAAwB;AACvC,eAAG,MAAH,CAAU,QAAV,EAAmB,GAAG,IAAtB,EAA2B,UAAC,GAAD,EAAO;AAC9B,oBAAG,GAAH,EAAO;AACH,4BAAQ,MAAM,EAAN,CAAS,YAAT,CAAsB,QAAtB,CAAR;AACH,iBAFD,MAEK;AACD,4BAAQ,KAAR;AACH;AACJ,aAND;AAOH,SARM,CAAP;AASH;AAXO,CAAZ;;AAcA,QAAQ,SAAR,GAAkB;AACd;AADc,CAAlB","file":"wrapAsyncNode-compiled.js","sourcesContent":["/**\r\n * Created by ada on 2016/8/7.\r\n */\r\n    /**/\r\nvar fs=require('fs')\r\nvar error=require('../../../define/error/asyncNodeError').asyncNodeError\r\n\r\nvar right={rc:0}\r\n\r\nvar asyncFs={\r\n    asyncFileFolderExist(filePath){\r\n        return new Promise(function(reslove,reject){\r\n            fs.access(filePath,fs.F_OK,(err)=>{\r\n                if(err){\r\n                    reslove(error.fs.fileNotExist(filePath))\r\n                }else{\r\n                    reslove(right)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexports.asyncFunc={\r\n    asyncFs,\r\n}\r\n"]}