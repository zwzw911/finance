{"version":3,"sources":["wrapAsyncRedis.js"],"names":[],"mappings":"AAAA;;;AAGA;;;;;;AAMA;;;AAGA;;AACA,IAAI,gBAAc,QAAQ,qDAAR,EAA+D,aAAjF;AACA,IAAI,aAAW,QAAQ,qCAAR,EAA+C,UAA9D;;AAEA,IAAI,UAAQ,EAAC,IAAG,CAAJ,EAAZ;;AAGA,SAAS,SAAT,CAAmB,GAAnB,EAAuB,MAAvB,EAA8B;AAC1B;AACA,WAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAiB,MAAjB,EAAwB;AACvC;AACI,sBAAc,IAAd,CAAmB,CAAC,GAAD,EAAK,MAAL,CAAnB,EAAgC,UAAS,GAAT,EAAa,IAAb,EAAkB;AAC9C,gBAAG,GAAH,EAAO;AACH,uBAAO,WAAW,QAAX,CAAoB,SAA3B;AACH,aAFD,MAEK;AACD;AACA,wBAAQ,GAAR,GAAY,IAAZ;AACA,wBAAQ,OAAR;AACH;AACJ,SARD;AASZ;;;AAIK,KAfM,CAAP;AAgBH;;AAED,SAAS,YAAT,CAAsB,GAAtB,EAA0B,MAA1B,EAAiC;AAC7B,WAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAiB,MAAjB,EAAwB;AACvC;AACA;AACI,sBAAc,OAAd,CAAsB,CAAC,GAAD,EAAK,MAAL,CAAtB,EAAmC,UAAS,GAAT,EAAa,IAAb,EAAkB;AACjD,gBAAG,GAAH,EAAO;AACH,uBAAO,WAAW,QAAX,CAAoB,UAA3B;AACH,aAFD,MAEK;AACD,wBAAQ,GAAR,GAAY,IAAZ;AACA,wBAAQ,OAAR;AACH;AACJ,SAPD;AAQZ;;;;AAKK,KAhBM,CAAP;AAiBH;;AAED,OAAO,OAAP,GAAe;AACX,wBADW;AAEX;AAFW,CAAf","file":"wrapAsyncRedis-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-07-29.\r\n */\r\n/*\r\n* ioredis的方法本身已经支持返回Promise，理论上可以直接使用await，但是现在需要格式化返回的结果，所以采用ioredis的callback方式，自己包装成Pormise的格式\r\n* error：转换成{rc:xxx,msg}     result: {rc:0,msg：null}\r\n*\r\n* */\r\n\r\n/*\r\n* ioredis中，获得数据没有回调（set/hset等）\r\n* */\r\n'use strict'\r\nvar ioredisClient=require('../../../../model/redis/connection/redis_connection').ioredisClient\r\nvar redisError=require('../../../../define/error/redisError').redisError\r\n\r\nlet rcRight={rc:0}\r\n\r\n\r\nfunction asyncHget(key,subKey){\r\n    // console.log('subkey is'+subKey)\r\n    return new Promise(function(resolve,reject){\r\n        // try{\r\n            ioredisClient.hget([key,subKey],function(err,data){\r\n                if(err){\r\n                    reject(redisError.cmdError.hgetError)\r\n                }else{\r\n                    // console.log(data)\r\n                    rcRight.msg=data\r\n                    resolve(rcRight)\r\n                }\r\n            })\r\n/*        }catch(e){\r\n            reject('hget fail')\r\n        }*/\r\n\r\n    })\r\n}\r\n\r\nfunction asyncHexists(key,subKey){\r\n    return new Promise(function(resolve,reject){\r\n        // try{\r\n        // reject('test')\r\n            ioredisClient.hexists([key,subKey],function(err,data){\r\n                if(err){\r\n                    reject(redisError.cmdError.existsFail)\r\n                }else{\r\n                    rcRight.msg=data\r\n                    resolve(rcRight)\r\n                }\r\n            })\r\n/*        }\r\n        catch(e){\r\n            reject(redisError.general.hexistsFail)\r\n        }*/\r\n\r\n    })\r\n}\r\n\r\nmodule.exports={\r\n    asyncHget,\r\n    asyncHexists,\r\n}"]}