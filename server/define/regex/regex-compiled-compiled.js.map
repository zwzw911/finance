{"version":3,"sources":["regex-compiled.js"],"names":[],"mappings":"AAAA;;;;AAIA;AACA;AACA;;AAEA,IAAI,QAAQ;AACR,uBAAmB,yDADX;AAER,WAAO,+BAFC;AAGR,QAAI,2FAHI;AAIR,cAAU,gBAJF;AAKR,cAAU,gBALF,EAKoB;;AAE5B,cAAU,2BAPF,EAO+B;AACvC,UAAM,mBARE;AASR,cAAU,+DATF;AAUR;AACA;AACA;AACA;AACA;;AAEA,iBAAa,aAhBL;AAiBR,mBAAe,8BAjBP;AAkBR,gBAAY,4BAlBJ;AAmBR,aAAS,2BAnBD,EAmB8B;AACtC,aAAS,SApBD;AAqBR,cAAU,uBArBF,EAqB2B;AACnC,aAAS,kBAtBD;AAuBR,qBAAiB,gCAvBT;AAwBR,uBAAmB,2CAxBX;AAyBR,YAAQ,YAzBA,EAyBc;;AAEtB,eAAW,8BA3BH;;AA6BR,kBAAc;AACV,eAAO,gBADG;AAEV,gBAAQ,mBAFE;AAGV,qBAAa,6DAHH,EA7BN;;AAkCR,oBAAgB,oDAlCR,EAkC8D;;AAEtE,SAAK;AACD,uBAAe,gBADd;AApCG,CAAZ;AAuCA,OAAO,OAAP,GAAiB;AACb,WAAO;AADM,CAAjB;;AAIA","file":"regex-compiled-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-02-26.\r\n * 所有常量定义\r\n */\n'use strict';\n// ~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-  转义正则特殊字符\n//常用正则\n\nvar regex = {\n    singleSpecialChar: /^[A-Za-z0-9~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]$/,\n    email: /(\\w+\\.)*\\w+@(\\w+\\.)+[A-Za-z]+/,\n    ip: /(((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))/,\n    sha1Hash: /^[0-9a-f]{40}$/,\n    objectId: /^[0-9a-f]{24}$/, //mongodb objectid\n\n    userName: /^[\\u4E00-\\u9FFF\\w]{2,20}$/, //2-20个汉字/英文/数字\n    salt: /^[0-9a-zA-Z]{10}$/,\n    password: /^[A-Za-z0-9~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]{6,20}$/,\n    // encryptedPassword:/^[0-9a-f]{40}$/,\n    //strictPassword:/^(?=.*[0-9])(?=.*[A-Za-z])(?=.*[\\~\\\\!\\@\\#\\$\\%\\^\\&\\*\\)\\(\\_\\+\\=\\-\\`\\}\\{\\:\\\"\\|\\?><\\,\\./;'\\\\\\[\\]])[A-Za-z0-9\\~\\\\!\\@\\#\\$\\%\\^\\&\\*\\)\\(\\_\\+\\=\\-\\`\\}\\{\\:\\\"\\|\\?><\\,\\./;'\\\\\\[\\]]{6,20}$/,//字母数字，特殊符号\n    //strictPassword:/^(?=.*[0-9])(?=.*[A-Za-z])(?=.*[~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-])[A-Za-z0-9~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]{6,20}$/,//字母数字，特殊符号\n    //loosePassword:/^(?=.*[0-9])(?=.*[A-Za-z])[A-Za-z0-9]{2,20}$/,//宽松密码设置，字母数字\n    //loosePassword:/^[A-Za-z0-9]{2,20}$/,//宽松密码设置，字母数字\n\n    mobilePhone: /^\\d{11,13}$/,\n    hashImageName: /[0-9a-f]{40}\\.[jpg|jpeg|png]/,\n    folderName: /^[\\u4E00-\\u9FFF\\w]{1,255}$/,\n    keyName: /^[\\u4E00-\\u9FFF\\w]{2,20}$/, //查询关键字，中文，英文\n    pageNum: /\\d{1,4}/,\n    hashName: /[0-9a-f]{40}\\.\\w{3,4}/, //hash名+后缀\n    captcha: /^[a-zA-Z0-9]{4}$/,\n    hashedThumbnail: /^[0-9a-f]{40}\\.[jpg|jpeg|png]$/,\n    originalThumbnail: /^[\\u4E00-\\u9FFF\\w]{2,20}\\.[jpg|jpeg|png]$/,\n    number: /^-?\\d{1,}$/, //只能对字符正常工作，如果是纯数值会出错（1.0会true）; 无法处理巨大数字，因为会被parseFloat转换成科学计数法(1.23e+45}，从而无法用统一的regex处理\n\n    thumbnail: /[0-9a-f]{40}\\.[jpg|jpeg|png]/,\n\n    randomString: {\n        basic: /^[0-9A-Z]{4,}$/,\n        normal: /^[0-9a-zA-Z]{4,}$/,\n        complicated: /^[0-9a-zA-Z~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]{4,}$/ },\n\n    encodeHtmlChar: /[\\s\"&'<>]|[\\x00-\\x20]|[\\x7F-\\xFF]|[\\u0100-\\u2700]/g, //把某些特殊字符转换成&xxx格式，传到client\n\n    lua: {\n        paramsConvert: /([{,])\"(\\w+)\"/g }\n};\nmodule.exports = {\n    regex: regex\n};\n\n//# sourceMappingURL=regex-compiled.js.map"]}