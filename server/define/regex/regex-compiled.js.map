{"version":3,"sources":["regex.js"],"names":[],"mappings":"AAAA;;;;AAII;AACJ;AACA;;AACA,IAAI,QAAM;AACN,uBAAkB,yDADZ;AAEN,WAAM,+BAFA;AAGN,eAAU,KAHJ;AAIN,QAAG,2FAJG;AAKN,cAAS,gBALH;AAMN,cAAS,gBANH,EAMoB;;AAE1B,cAAS,2BARH,EAQ+B;AACrC,UAAK,mBATC;AAUN,cAAS,+DAVH;AAWN;AACA;AACA;AACA;AACA;;AAEA,iBAAY,aAjBN;AAkBN,mBAAc,8BAlBR;AAmBN,gBAAW,4BAnBL;AAoBN,aAAQ,2BApBF,EAoB8B;AACpC,aAAQ,SArBF;AAsBN,cAAS,uBAtBH,EAsB4B;AAClC,aAAQ,kBAvBF;AAwBN,qBAAgB,gCAxBV;AAyBN,uBAAkB,2CAzBZ;AA0BN,YAAO,YA1BD,EA0Bc;;AAEpB,eAAU,8BA5BJ;;AA+BN,kBAAa;AACT,eAAM,gBADG;AAET,gBAAO,mBAFE;AAGT,qBAAY,6DAHH,EA/BP;;AAsCN,oBAAe,oDAtCT,EAsC8D;;AAEpE,SAAI;AACA,uBAAc,gBADd,EAxCE;;AA4CN;AACA,oBAAe,+CA7CT;AA8CN,qBAAgB;AA9CV,CAAV;AAgDA,OAAO,OAAP,GAAe;AACd;AADc,CAAf","file":"regex-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-02-26.\r\n * 所有常量定义\r\n */\r\n    'use strict'\r\n// ~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-  转义正则特殊字符\r\n//常用正则\r\nvar regex={\r\n    singleSpecialChar:/^[A-Za-z0-9~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]$/,\r\n    email:/(\\w+\\.)*\\w+@(\\w+\\.)+[A-Za-z]+/,\r\n    sessionId:/\\w+/,\r\n    ip:/(((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))/,\r\n    sha1Hash:/^[0-9a-f]{40}$/,\r\n    objectId:/^[0-9a-f]{24}$/,//mongodb objectid\r\n    \r\n    userName:/^[\\u4E00-\\u9FFF\\w]{2,20}$/,//2-20个汉字/英文/数字\r\n    salt:/^[0-9a-zA-Z]{10}$/,\r\n    password:/^[A-Za-z0-9~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]{6,20}$/,\r\n    // encryptedPassword:/^[0-9a-f]{40}$/,\r\n    //strictPassword:/^(?=.*[0-9])(?=.*[A-Za-z])(?=.*[\\~\\\\!\\@\\#\\$\\%\\^\\&\\*\\)\\(\\_\\+\\=\\-\\`\\}\\{\\:\\\"\\|\\?><\\,\\./;'\\\\\\[\\]])[A-Za-z0-9\\~\\\\!\\@\\#\\$\\%\\^\\&\\*\\)\\(\\_\\+\\=\\-\\`\\}\\{\\:\\\"\\|\\?><\\,\\./;'\\\\\\[\\]]{6,20}$/,//字母数字，特殊符号\r\n    //strictPassword:/^(?=.*[0-9])(?=.*[A-Za-z])(?=.*[~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-])[A-Za-z0-9~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]{6,20}$/,//字母数字，特殊符号\r\n    //loosePassword:/^(?=.*[0-9])(?=.*[A-Za-z])[A-Za-z0-9]{2,20}$/,//宽松密码设置，字母数字\r\n    //loosePassword:/^[A-Za-z0-9]{2,20}$/,//宽松密码设置，字母数字\r\n\r\n    mobilePhone:/^\\d{11,13}$/,\r\n    hashImageName:/[0-9a-f]{40}\\.[jpg|jpeg|png]/,\r\n    folderName:/^[\\u4E00-\\u9FFF\\w]{1,255}$/,\r\n    keyName:/^[\\u4E00-\\u9FFF\\w]{2,20}$/,//查询关键字，中文，英文\r\n    pageNum:/\\d{1,4}/,\r\n    hashName:/[0-9a-f]{40}\\.\\w{3,4}/, //hash名+后缀\r\n    captcha:/^[a-zA-Z0-9]{4}$/,\r\n    hashedThumbnail:/^[0-9a-f]{40}\\.[jpg|jpeg|png]$/,\r\n    originalThumbnail:/^[\\u4E00-\\u9FFF\\w]{2,20}\\.[jpg|jpeg|png]$/,\r\n    number:/^-?\\d{1,}$/,//只能对字符正常工作，如果是纯数值会出错（1.0会true）; 无法处理巨大数字，因为会被parseFloat转换成科学计数法(1.23e+45}，从而无法用统一的regex处理\r\n\r\n    thumbnail:/[0-9a-f]{40}\\.[jpg|jpeg|png]/,\r\n\r\n\r\n    randomString:{\r\n        basic:/^[0-9A-Z]{4,}$/,\r\n        normal:/^[0-9a-zA-Z]{4,}$/,\r\n        complicated:/^[0-9a-zA-Z~`!@#%&)(_=}{:\"><,;'\\[\\]\\\\\\^\\$\\*\\+\\|\\?\\.\\-]{4,}$/, //只有\\[]\r\n\r\n    },\r\n\r\n    encodeHtmlChar:/[\\s\"&'<>]|[\\x00-\\x20]|[\\x7F-\\xFF]|[\\u0100-\\u2700]/g,//把某些特殊字符转换成&xxx格式，传到client\r\n\r\n    lua:{\r\n        paramsConvert:/([{,])\"(\\w+)\"/g, //传入lua脚本的参数固定为一个JSON转换的字符；因为lua无法处理引号(双或者单)括起的key，所以需要通过正则替换。对象===>JSON.stringify()===>字符===>正则去除双引号（stringify都为双引号）转换后的字符\r\n    },\r\n\r\n    //正则中的特殊字符+单双引号+反引号（因为要放在字符串中，不转义会造成字符串中断）\r\n    regSpecialChar:/([\\'\\\"\\`\\.\\|\\[\\]\\~\\\\\\*\\?\\+\\^\\$\\(\\)\\=\\>\\<\\!])/g,\r\n    regSpecialChar1:/(\\\\)/g,\r\n}\r\nmodule.exports={\r\n\tregex,\r\n}"]}