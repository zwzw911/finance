{"version":3,"sources":["nodeError-compiled.js"],"names":[],"mappings":"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","file":"nodeError-compiled-compiled.js","sourcesContent":["/**\r\n * Created by zw on 2016/7/3.\r\n */\n'use strict';\n\nvar assistError = {\n    awesomeCaptcha: {\n        /*        readDir:{rc:68000,msg:{client:'无法读取captcha目录'}},\r\n                removeFile:{rc:68002,msg:{client:'无法删除过期的captcha文件'}},*/\n        /*        notExist:{rc:68004,msg:{client:'验证码不存在',server:'验证码不存在'}},\r\n                notEqual:{rc:68006,msg:{client:'验证码不正确',server:'验证码不正确'}},*/\n        genCaptchaDataUrlFail: { rc: 68008, msg: { client: '验证码生成失败', server: '验证码无法转换成DataURL' } }\n    },\n    gmImage: {\n        cantParseGmFileSize: { rc: 69900, msg: { client: '无法读取图片文件的大小', server: '无法解析GM处理的图片文件的数值和单位' } },\n        cantParseGmFileSizeNum: { rc: 69902, msg: { client: '无法读取图片文件的大小', server: '无法解析GM处理的图片文件的数值' } },\n        exceedMaxSize: { rc: 69904, msg: { client: '图片文件过大', server: '图片文件的大小超出预定义的范围' } },\n        invalidSizeUnit: { rc: 69906, msg: { client: '图片文件大小的单位不正确', server: '图片文件大小的单位必须是Ki/Mi/Gi' } },\n        fileSizeEmpty: { rc: 69908, msg: { client: '图片的大小为空', server: '图片的大小为空' } },\n        invalidFileSizeInByte: { rc: 69909, msg: { client: '无法读取图片文件的大小', server: '图片文件的大小转换成byte后，不正确' } }\n    },\n    crypt: {\n        genSaltFail: { rc: 69500, msg: { client: '生成随机数失败', server: '调用crpt.randomBytes命令失败' } }\n    },\n    misc: {\n        validate: {\n            //以下是检查rule，所以错误只需在server端现实，因此只要msg:'error'的格式，而不要client/server\n            unknownDataType: { rc: 69800, msg: '数据类型未定义' },\n\n            mandatoryFiledNotExist: { rc: 69802, msg: '字段必需存在' },\n            chineseNameNotString: { rc: 68804, msg: 'chineseName字段必须是字符串' },\n            chineseNameEmpty: { rc: 68806, msg: 'chineseName字段不能为空' },\n\n            typeWrong: { rc: 69808, msg: '类型不正确' },\n\n            needMin: { rc: 69810, msg: 'type为int时，必需包含Min属性' },\n            needMax: { rc: 69812, msg: 'type为int时，必需包含Max属性' },\n            needMaxLength: { rc: 69814, msg: 'type为number时，必需包含maxLength属性' },\n\n            ruleDefineNotRight: { rc: 69816, msg: 'rule的定义不正确' },\n            maxLengthDefineNotInt: { rc: 69818, msg: 'maxLength的定义不是整数' },\n            minLengthDefineNotInt: { rc: 69820, msg: 'minLength的定义不是整数' },\n            exactLengthDefineNotInt: { rc: 69822, msg: 'min的定义不是整数' },\n            maxDefineNotInt: { rc: 69824, msg: 'max的定义不是整数' },\n            minDefineNotInt: { rc: 69826, msg: 'min的定义不是整数' },\n            requireDefineNotBoolean: { rc: 69828, msg: 'require的定义不是布尔值' },\n            enumDefineNotArray: { rc: 69829, msg: 'enum的定义不是数组' },\n\n            ruleDefineNotDefine: { rc: 69830, msg: 'define字段没有定义' },\n            errorFieldNotDefine: { rc: 69832, msg: 'error字段不存在' },\n            rcFieldNotDefine: { rc: 698234, msg: 'rc字段不存在' },\n            msgFieldNotDefine: { rc: 69836, msg: 'msg字段不存在' },\n\n            //以下只需返回给server，因此只要msg:'error'的格式，而不要client/server\n            /*              sanity rule             */\n            ruleDefineWrong: function ruleDefineWrong(coll, field, rule) {\n                return { rc: 69840, msg: coll + '的字段' + field + '中的rule ' + rule + '的define值不正确' };\n            },\n\n            //以下只需返回给client，因此只要msg:'error'的格式，而不要client/server\n            /*              checkInput              */\n            valueNotDefine: { rc: 69860, msg: '待检测的输入值未定义' },\n            valueNotDefineWithRequireTrue: { rc: 699862, msg: '待检测的输入值未定义，而rule中require为ture' },\n            valueEmpty: { rc: 69864, msg: '待检测的输入值不能为空' },\n            valueRelatedRuleNotDefine: { rc: 68868, msg: '带检测的输入值没有对应的检测规则' }\n        },\n        checkInterval: {\n            sessionIdWrong: { rc: 69900, msg: { client: '请求格式不正确', server: 'session格式不正确' } },\n            IPWrong: { rc: 69902, msg: { client: '请求格式不正确', server: 'IP格式不正确' } },\n            unknownRequestIdentify: { rc: 69924, msg: { client: '无法识别请求id', server: '请求既无IP也无sessionId' } },\n            forbiddenReq: { rc: 69916, msg: { client: '请求被禁止', server: '请求被禁止' } },\n            between2ReqCheckFail: { rc: 69918, msg: { client: '请求过于频繁，请稍候再尝试', server: '两次请求间隔小于预订值' } },\n            exceedMaxTimesInDuration: { rc: 69920, msg: { client: '请求过于频繁，请稍候再尝试', server: '定义的时间段内，请求次数超出最大值' } },\n            tooMuchReq: { rc: 69922, msg: { client: '请求过于频繁，请稍候再尝试', server: 'request过于频繁' } }\n\n        },\n        user: {\n            stateWrong: { rc: 69910, msg: { client: '您的状态不正确', server: '用户状态不正确' } },\n            notLogin: { rc: 69912, msg: { client: '您尚未登录', server: '用户尚未登录' } },\n            userIdFormatWrong: { rc: 69914, msg: { client: '你的登录信息不正确', server: '用户session中的Id格式不正确' } }\n        },\n        captcha: {\n            /*        readDir:{rc:68000,msg:{client:'无法读取captcha目录'}},\r\n             removeFile:{rc:68002,msg:{client:'无法删除过期的captcha文件'}},*/\n            notExist: { rc: 68004, msg: { client: '验证码不存在', server: '验证码不存在' } },\n            notEqual: { rc: 68006, msg: { client: '验证码不正确', server: '验证码不正确' } }\n        },\n        deleteNonNeededObject: {\n            origObjTypeWrong: { rc: 69000, msg: { client: '无法删除对象中的内容', server: '函数deleteNonNeeded中的参数origObj不是对象' } },\n            skipListTypeWrong: { rc: 69002, msg: { client: '无法删除对象中的内容', server: '函数deleteNonNeeded中的参数skipList不是对象' } }\n        },\n        objectIdToRealField: {\n            origObjTypeWrong: { rc: 69004, msg: { client: '无法匹配对象中的内容', server: '函数objectIdToRealField中的参数origObj不是对象' } },\n            matchListTypeWrong: { rc: 69006, msg: { client: '无法匹配对象中的内容', server: '函数objectIdToRealField中的参数matchList不是对象' } }\n        }\n    }\n};\n\nexports.nodeError = {\n    //miscError:misc,\n    assistError: assistError\n};\n\n//# sourceMappingURL=nodeError-compiled.js.map"]}