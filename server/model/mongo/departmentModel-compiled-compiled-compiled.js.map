{"version":3,"sources":["departmentModel-compiled-compiled.js"],"names":[],"mappings":"AAAA;;;AAGA;;AAEA,IAAI,kBAAkB,QAAQ,6BAAR,EAAuC,eAA7D;AACA,IAAI,uBAAuB,QAAQ,+BAAR,EAAyC,oBAApE;;AAEA,IAAI,cAAc,QAAQ,uCAAR,EAAiD,WAAnE;;AAEA,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AACpB;AACA;AACA,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,gBAAQ,GAAR,CAAY,qBAAqB,KAAK,SAAL,CAAe,MAAf,CAAjC;AACA,YAAI,MAAM,2BAAV;AACA,gBAAQ,GAAR,CAAY,cAAc,OAAO,CAAP,EAAU,IAApC;AACA,YAAI,IAAI,IAAI,IAAJ,CAAS,OAAO,CAAP,EAAU,IAAnB,CAAR;AACA,gBAAQ,GAAR,CAAY,oBAAoB,CAAhC;AACA,wBAAgB,UAAhB,CAA2B,MAA3B,EAAmC,UAAU,GAAV,EAAe,MAAf,EAAuB;AACtD,gBAAI,GAAJ,EAAS;AACL,wBAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,GAAf,CAAZ;AACA;AACA,wBAAQ,qBAAqB,GAArB,CAAR;AACH;AACD,oBAAQ,MAAR;AACH,SAPD;AAQH,KAdM,CAAP;AAeH;AACD,SAAS,MAAT,CAAgB,EAAhB,EAAoB,MAApB,EAA4B;AACxB,QAAI,gBAAgB;AAChB,eAAO,KADS,EACF;AACd,kBAAU,EAFM,EAEF;AACd,kBAAU,KAHM,EAGC;AACjB,uBAAe,KAJC,EAIM;AACtB,6BAAqB,KALL,EAKY;AAC5B,gBAAQ,KANQ,EAApB;AAOA,WAAO,OAAP,IAAkB,KAAK,GAAL,EAAlB;AACA,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,wBAAgB,iBAAhB,CAAkC,EAAlC,EAAsC,MAAtC,EAA8C,aAA9C,EAA6D,UAAU,GAAV,EAAe,MAAf,EAAuB;AAChF,gBAAI,GAAJ,EAAS;AACL;AACA,wBAAQ,qBAAqB,GAArB,CAAR;AACH;;AAED;AACA,oBAAQ,EAAE,IAAI,CAAN,EAAR;AACH,SARD;AASH,KAVM,CAAP;AAWH;;AAED;AACA,SAAS,MAAT,CAAgB,EAAhB,EAAoB;AAChB,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,wBAAgB,iBAAhB,CAAkC,EAAlC,EAAsC,UAAU,GAAV,EAAe,MAAf,EAAuB;AACzD,gBAAI,GAAJ,EAAS;AACL;AACA,wBAAQ,qBAAqB,GAArB,CAAR;AACH;AACD;AACA;AACA,oBAAQ,EAAE,IAAI,CAAN,EAAR;AACH,SARD;AASH,KAVM,CAAP;AAWH;;AAED,SAAS,OAAT,GAAmB;AACf,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,YAAI,YAAY,EAAhB;AACA,YAAI,cAAc,IAAlB;AACA,YAAI,SAAS,EAAb;AACA,eAAO,KAAP,GAAe,YAAY,QAAZ,CAAqB,KAApC;AACA,wBAAgB,IAAhB,CAAqB,SAArB,EAAgC,WAAhC,EAA6C,MAA7C,EAAqD,UAAU,GAAV,EAAe,MAAf,EAAuB;AACxE,gBAAI,GAAJ,EAAS;AACL;AACA,wBAAQ,qBAAqB,GAArB,CAAR;AACH;AACD;AACA,oBAAQ,EAAE,IAAI,CAAN,EAAS,KAAK,MAAd,EAAR;AACH,SAPD;AAQH,KAbM,CAAP;AAcH;;AAED,SAAS,QAAT,CAAkB,gBAAlB,EAAoC;AAChC,WAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC1C,YAAI,YAAY,EAAhB;AACA,YAAI,cAAc,gBAAd,IAAkC,OAAO,iBAAiB,QAAjB,EAA7C,EAA0E;AACtE,sBAAU,MAAV,IAAoB,IAAI,MAAJ,CAAW,gBAAX,CAApB;AACH;AACD,YAAI,cAAc,MAAlB;AACA,YAAI,SAAS,EAAb;AACA,eAAO,KAAP,GAAe,YAAY,QAAZ,CAAqB,KAApC;AACA,wBAAgB,IAAhB,CAAqB,SAArB,EAAgC,WAAhC,EAA6C,MAA7C,EAAqD,UAAU,GAAV,EAAe,MAAf,EAAuB;AACxE,gBAAI,GAAJ,EAAS;AACL;AACA,wBAAQ,qBAAqB,GAArB,CAAR;AACH;AACD;AACA,oBAAQ,EAAE,IAAI,CAAN,EAAS,KAAK,MAAd,EAAR;AACH,SAPD;AAQH,KAhBM,CAAP;AAiBH;;AAED,OAAO,OAAP,GAAiB;AACb,YAAQ,MADK;AAEb,YAAQ,MAFK;AAGb,YAAQ,MAHK;AAIb,aAAS,OAJI;AAKb,cAAU;AALG,CAAjB;;AAQA;;AAEA","file":"departmentModel-compiled-compiled-compiled.js","sourcesContent":["/**\r\n * Created by Ada on 2016/9/28.\r\n */\n'use strict';\n\nvar departmentModel = require('./common/structure-compiled').departmentModel;\nvar mongooseErrorHandler = require('../../define/error/mongoError').mongooseErrorHandler;\n\nvar pageSetting = require('../../config/global/globalSettingRule').pageSetting;\n\nfunction create(values) {\n    //不能直接返回promise，而是通过callback捕获可能错误，并转换成可读格式\n    //return departmentModel.insertMany(values)\n    return new Promise(function (resolve, reject) {\n        console.log('inserted values ' + JSON.stringify(values));\n        var reg = /^[\\u4E00-\\u9FFF\\w]{2,20}$/;\n        console.log('value is ' + values[0].name);\n        var r = reg.test(values[0].name);\n        console.log('reg result  is ' + r);\n        departmentModel.insertMany(values, function (err, result) {\n            if (err) {\n                console.log(JSON.stringify(err));\n                //能返回自定义错误，所以用resolve而不是reject\n                resolve(mongooseErrorHandler(err));\n            }\n            resolve(result);\n        });\n    });\n}\nfunction update(id, values) {\n    var updateOptions = {\n        'new': false, //是否返回更新后的doc。默认false，返回原始doc\n        'select': '', //返回哪些字段\n        'upsert': false, //如果doc不存在，是否创建新的doc，默认false\n        runValidators: false, //更新时是否执行validator。因为默写cavert，默认false\n        setDefaultsOnInsert: false, //当upsert为true && 设为true，则插入文档时，使用default。\n        'sort': '_id' };\n    values['uDate'] = Date.now();\n    return new Promise(function (resolve, reject) {\n        departmentModel.findByIdAndUpdate(id, values, updateOptions, function (err, result) {\n            if (err) {\n                //console.log(`db err is ${err}`)\n                resolve(mongooseErrorHandler(err));\n            }\n\n            //update成功，返回的是原始记录，需要转换成可辨认格式\n            resolve({ rc: 0 });\n        });\n    });\n}\n\n//根据Id删除文档\nfunction remove(id) {\n    return new Promise(function (resolve, reject) {\n        departmentModel.findByIdAndRemove(id, function (err, result) {\n            if (err) {\n                //console.log(`db err is ${err}`)\n                resolve(mongooseErrorHandler(err));\n            }\n            //console.log(`success result is ${result}`)\n            //remove成功，返回的是原始记录，需要转换成可辨认格式\n            resolve({ rc: 0 });\n        });\n    });\n}\n\nfunction readAll() {\n    return new Promise(function (resolve, reject) {\n        var condition = {};\n        var selectField = null;\n        var option = {};\n        option.limit = pageSetting.billType.limit;\n        departmentModel.find(condition, selectField, option, function (err, result) {\n            if (err) {\n                //console.log(`db err is ${err}`)\n                resolve(mongooseErrorHandler(err));\n            }\n            //console.log(`success result is ${result}`)\n            resolve({ rc: 0, msg: result });\n        });\n    });\n}\n\nfunction readName(nameToBeSearched) {\n    return new Promise(function (resolve, reject) {\n        var condition = {};\n        if (undefined !== nameToBeSearched && '' !== nameToBeSearched.toString()) {\n            condition['name'] = new RegExp(nameToBeSearched);\n        }\n        var selectField = 'name';\n        var option = {};\n        option.limit = pageSetting.billType.limit;\n        departmentModel.find(condition, selectField, option, function (err, result) {\n            if (err) {\n                //console.log(`db err is ${err}`)\n                resolve(mongooseErrorHandler(err));\n            }\n            //console.log(`success result is ${result}`)\n            resolve({ rc: 0, msg: result });\n        });\n    });\n}\n\nmodule.exports = {\n    create: create,\n    update: update,\n    remove: remove,\n    readAll: readAll,\n    readName: readName\n};\n\n//# sourceMappingURL=departmentModel-compiled.js.map\n\n//# sourceMappingURL=departmentModel-compiled-compiled.js.map"]}