{"version":3,"sources":["departmentModel.js"],"names":[],"mappings":"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","file":"departmentModel-compiled.js","sourcesContent":["/**\r\n * Created by Ada on 2016/9/28.\r\n */\r\n'use strict'\r\nvar departmentModel=require('./common/structure-compiled').departmentModel\r\nvar mongooseErrorHandler=require('../../define/error/mongoError').mongooseErrorHandler\r\n\r\nvar pageSetting=require('../../config/global/globalSettingRule').pageSetting\r\n\r\nfunction create(values){\r\n    //不能直接返回promise，而是通过callback捕获可能错误，并转换成可读格式\r\n    //return departmentModel.insertMany(values)\r\n    return new Promise(function(resolve,reject){\r\n        // console.log(`inserted values ${JSON.stringify(values)}`)\r\n/*let reg=/^[\\u4E00-\\u9FFF\\w]{2,20}$/\r\n        console.log(`value is ${values[0].name}`)\r\n        let r=reg.test(values[0].name)\r\n        console.log(`reg result  is ${r}`)*/\r\n        departmentModel.insertMany(values,function(err,result){\r\n            if(err){\r\n                console.log(JSON.stringify(err))\r\n                //能返回自定义错误，所以用resolve而不是reject\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            resolve({rc:0,msg:result})\r\n        })\r\n    })\r\n}\r\nfunction update(id,values){\r\n    var updateOptions={\r\n        'new':false,//是否返回更新后的doc。默认false，返回原始doc\r\n        'select':'', //返回哪些字段\r\n        'upsert':false,//如果doc不存在，是否创建新的doc，默认false\r\n        runValidators:false,//更新时是否执行validator。因为默写cavert，默认false\r\n        setDefaultsOnInsert:false,//当upsert为true && 设为true，则插入文档时，使用default。\r\n        'sort':'_id',//如果找到多个文档（应该不太可能），按照什么顺序选择第一个文档进行update。\r\n    }\r\n    values['uDate']=Date.now()\r\n    return new Promise(function(resolve,reject){\r\n        departmentModel.findByIdAndUpdate(id,values,updateOptions,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n\r\n            //update成功，返回的是原始记录，需要转换成可辨认格式\r\n            resolve({rc:0})\r\n        })\r\n    })\r\n}\r\n\r\n//根据Id删除文档\r\nfunction remove(id){\r\n    return new Promise(function(resolve,reject){\r\n        departmentModel.findByIdAndRemove(id,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            //remove成功，返回的是原始记录，需要转换成可辨认格式\r\n            resolve({rc:0})\r\n        })\r\n    })\r\n}\r\n\r\n//只做测试用\r\nfunction removeAll(){\r\n    return new Promise(function(resolve,reject){\r\n        departmentModel.remove({},function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            //remove成功，返回的是原始记录，需要转换成可辨认格式\r\n            resolve({rc:0})\r\n        })\r\n    })\r\n}\r\n\r\nfunction readAll(){\r\n    return new Promise(function(resolve,reject){\r\n        let condition={}\r\n        let selectField=null\r\n        let option={}\r\n        option.limit=pageSetting.department.limit\r\n        departmentModel.find(condition,selectField,option,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            resolve({rc:0,msg:result})\r\n        })\r\n    })\r\n}\r\n\r\nfunction readName(nameToBeSearched){\r\n    return new Promise(function(resolve,reject){\r\n        let condition={}\r\n        if(undefined!==nameToBeSearched && ''!== nameToBeSearched.toString()){\r\n            condition['name']=new RegExp(nameToBeSearched)\r\n        }\r\n        let selectField='name'\r\n        let option={}\r\n        option.limit=pageSetting.department.limit\r\n        departmentModel.find(condition,selectField,option,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            resolve({rc:0,msg:result})\r\n        })\r\n    })\r\n}\r\n\r\n//作为外键时，是否存在\r\nfunction findById(id){\r\n    return new Promise(function(resolve,reject){\r\n        departmentModel.findById(id,'-cDate -uDate -dDate',function(err,result){\r\n            if(err){\r\n                console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            console.log(`department find by Id ${result}`)\r\n            // console.log(`original type is  ${typeof result}`)\r\n            // let convert=result.toJSON()\r\n            // console.log(`after toJSON type is  ${typeof convert}`)\r\n            // delete result['_id']\r\n            // console.log(`after delete is ${convert['_id']}`)\r\n            // console.log(`after delete type is ${typeof result['_id']}`)\r\n            // result['_id']=convert\r\n            // console.log(`type of   ${typeof result['_id']}`)\r\n            resolve({rc:0,msg:result})\r\n\r\n        })\r\n    })\r\n}\r\nmodule.exports={\r\n    create,\r\n    update,\r\n    remove,\r\n    removeAll,\r\n    readAll,\r\n    readName,\r\n    findById,\r\n}"]}