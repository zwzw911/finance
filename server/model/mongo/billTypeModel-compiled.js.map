{"version":3,"sources":["billTypeModel.js"],"names":[],"mappings":"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","file":"billTypeModel-compiled.js","sourcesContent":["/**\r\n * Created by Ada on 2016/9/28.\r\n */\r\n'use strict'\r\nvar billTypeModel=require('./common/structure-compiled').billTypeModel\r\nvar mongooseErrorHandler=require('../../define/error/mongoError').mongooseErrorHandler\r\n\r\nvar pageSetting=require('../../config/global/globalSettingRule').pageSetting\r\n\r\nfunction create(values){\r\n    //不能直接返回promise，而是通过callback捕获可能错误，并转换成可读格式\r\n    //return billTypeModel.insertMany(values)\r\n    return new Promise(function(resolve,reject){\r\n        //console.log(`inserted values ${values}`)\r\n\r\n        billTypeModel.insertMany(values,function(err,result){\r\n            if(err){\r\n                //console.log(JSON.stringify(err))\r\n                //能返回自定义错误，所以用resolve而不是reject\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            resolve(result)\r\n        })\r\n    })\r\n}\r\nfunction update(id,values){\r\n    var updateOptions={\r\n        'new':false,//是否返回更新后的doc。默认false，返回原始doc\r\n        'select':'', //返回哪些字段\r\n        'upsert':false,//如果doc不存在，是否创建新的doc，默认false\r\n        runValidators:false,//更新时是否执行validator。因为默写cavert，默认false\r\n        setDefaultsOnInsert:false,//当upsert为true && 设为true，则插入文档时，使用default。\r\n        'sort':'_id',//如果找到多个文档（应该不太可能），按照什么顺序选择第一个文档进行update。\r\n    }\r\n    values['uDate']=Date.now()\r\n    return new Promise(function(resolve,reject){\r\n        billTypeModel.findByIdAndUpdate(id,values,updateOptions,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n\r\n            //update成功，返回的是原始记录，需要转换成可辨认格式\r\n            resolve({rc:0})\r\n        })\r\n    })\r\n}\r\n\r\n//根据Id删除文档\r\nfunction remove(id){\r\n    return new Promise(function(resolve,reject){\r\n        billTypeModel.findByIdAndRemove(id,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            //remove成功，返回的是原始记录，需要转换成可辨认格式\r\n            resolve({rc:0})\r\n        })\r\n    })\r\n}\r\n\r\nfunction readAll(){\r\n    return new Promise(function(resolve,reject){\r\n        let condition={}\r\n        let selectField=null\r\n        let option={}\r\n        option.limit=pageSetting.billType.limit\r\n        billTypeModel.find(condition,selectField,option,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            resolve({rc:0,msg:result})\r\n        })\r\n    })\r\n}\r\n\r\nfunction readName(nameToBeSearched){\r\n    return new Promise(function(resolve,reject){\r\n        let condition={}\r\n        if(undefined!==nameToBeSearched && ''!== nameToBeSearched.toString()){\r\n            condition['name']=new RegExp(nameToBeSearched)\r\n        }\r\n        let selectField='name'\r\n        let option={}\r\n        option.limit=pageSetting.billType.limit\r\n        billTypeModel.find(condition,selectField,option,function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            //console.log(`success result is ${result}`)\r\n            resolve({rc:0,msg:result})\r\n        })\r\n    })\r\n}\r\n\r\n//作为外键时，是否存在\r\nfunction findById(id){\r\n    return new Promise(function(resolve,reject){\r\n        billTypeModel.findById(id,'-cDate -uDate -dDate',function(err,result){\r\n            if(err){\r\n                //console.log(`db err is ${err}`)\r\n                resolve( mongooseErrorHandler(err))\r\n            }\r\n            resolve({rc:0,msg:result})\r\n        })\r\n    })\r\n}\r\n\r\nmodule.exports={\r\n    create,\r\n    update,\r\n    remove,\r\n    readAll,\r\n    readName,\r\n    findById,\r\n}"]}