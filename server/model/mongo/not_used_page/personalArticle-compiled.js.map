{"version":3,"sources":["personalArticle.js"],"names":[],"mappings":"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","file":"personalArticle-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2015-08-26.\r\n */\r\nvar dbStructure=require('./db_structure');\r\nvar articleModel=dbStructure.articleModel;\r\nvar folderModel=dbStructure.folderModel;\r\nvar userModel=dbStructure.userModel;\r\nvar articleFolderModel=dbStructure.articleFolderModel;\r\n\r\n\r\n//var hash=require('../express_component/hashCrypt');\r\nvar async=require('async')\r\n\r\nvar errorRecorder=require('../express_component/recorderError').recorderError;\r\n\r\nvar general=require('../assist/general').general\r\nvar pagination=require('../express_component/pagination').pagination\r\n\r\nvar validateDb=require('../error_define/3rd_party_error_define').validateDb;\r\n//var inputDefine=require('../assist/input_define').inputDefine;\r\nvar input_validate=require('../error_define/input_validate').input_validate;\r\nvar runtimeDbError=require('../error_define/runtime_db_error').runtime_db_error;\r\nvar runtimeNodeError=require('../error_define/runtime_node_error').runtime_node_error;\r\n\r\nvar pagination=require('../express_component/pagination').pagination\r\n\r\nvar validateFolder=input_validate.folder\r\nvar validateArticleFolder=input_validate.articleFolder\r\nvar validateArticle=input_validate.article\r\n//判断是否为目录的创建者\r\nvar ifFolderOwner=function(userId,folderId, callback){\r\n    folderModel.findById(folderId,'owner',function(err,folder) {\r\n        if (err) {\r\n            errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'moveArticle');\r\n            return callback(err, runtimeDbError.folder.findById)\r\n        }\r\n        if(folder.owner!=userId){\r\n            return callback(null,runtimeNodeError.folder.notFolderOwner)\r\n        }\r\n        return callback(null,{rc:0,msg:null})\r\n    })\r\n}\r\n\r\n//读取根目录的Id,及其所有字段(除了root，其他都可以通过readFolder获得下级item的所有数据）\r\nvar readRootFolderId=function(userId,folderName,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    var defaultFolderName=general.defaultRootFolderName\r\n    if(-1===defaultFolderName.indexOf(folderName)){\r\n        return callback(null,runtimeNodeError.folder.invalidateRootFolderName)\r\n    }\r\n    folderModel.find({owner:userId,level:1,folderName:folderName,parentId:null},function(err,folder){\r\n        if(err){\r\n            errorRecorder({rc:err.code,msg:err.err.errmsg},'folder','readRootFolderId')\r\n            return callback(err,runtimeDbError.folder.findTrashFolder)\r\n        }\r\n        if([]===folder){\r\n            return callback(null,runtimeDbError.folder.rootFolderNotFind)\r\n        }\r\n        if(1<folder.length){\r\n            return callback(null,runtimeDbError.folder.rootFolderMulti)\r\n        }\r\n//console.log(folder[0])\r\n        return callback(null,{rc:0,msg:folder[0]})\r\n    })\r\n}\r\n\r\nvar ifDefaultFolder=function(folder){\r\n    return ((-1!=general.defaultRootFolderName.indexOf(folder.folderName) && (null===folder.parentId) && validateFolder.level.range.define.min===folder.level))\r\n}\r\n\r\n//根据Id读取数据库,判断folder是不是根目录\r\nvar checkIfRootFolder=function(folderId,callback){\r\n    folderModel.findById(folderId,function(err,folderRec){\r\n//console.log(folderRec)\r\n        if(err){\r\n            errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName');\r\n            return callback(null,runtimeDbError.folder.folderFindById)\r\n        }\r\n        if(null===folderRec){\r\n            return callback(null,runtimeDbError.folder.folderFindByIdNull)\r\n        }\r\n        //if(1<folderRec.length){\r\n        //    return callback(null,runtimeDbError.folder.folderFindByIdMulti)\r\n        //}\r\n        //console.log(ifDefaultFolder(folderRec))\r\n        if(ifDefaultFolder(folderRec)){\r\n            //return callback(null,runtimeNodeError.folder.cantMoveDefaultFolder)\r\n            return callback(null,{rc:0,msg:true})\r\n        }\r\n        return callback(null,{rc:0,msg:false})\r\n    })\r\n\r\n}\r\n//为用户创建初始根目录和垃圾箱目录(都是level为1的目录,无法删除)\r\n/*\r\n * userId:通过userId直接读取level=1的folder\r\n * */\r\nvar createRootFolder=function(userId,folderName,callback){\r\n    var defaultFolderName=general.defaultRootFolderName\r\n    if(-1===defaultFolderName.indexOf(folderName)){\r\n        return callback(null,runtimeNodeError.folder.invalidateRootFolderName)\r\n    }\r\n    folderModel.find({owner:userId,folderName:folderName,level:1,parentId:null},function(err,folder){\r\n        if(err) {\r\n            errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'createRootFolder');\r\n            return callback(err, runtimeDbError.folder.createRootFolder)\r\n        }\r\n//console.log(runtimeDbError.folder.rootFolderMulti)\r\n        if(1<folder.length){\r\n            return callback(null,runtimeDbError.folder.rootFolderMulti)\r\n        }\r\n        if(1===folder.length){\r\n            return callback(null,{rc:0,msg:folder})\r\n        }\r\n        if(0===folder.length){\r\n            var folder=new folderModel();\r\n            folder.folderName=folderName\r\n            folder.owner=userId\r\n            folder.parentId=null;\r\n            folder.level=1;\r\n            folder.cDate=new Date()\r\n\r\n            validateDb.folder(folder,'folder','createRootFolder',function(err,result){\r\n                if(0<result.rc){\r\n                    return callback(null,result)\r\n                }\r\n                folder.save(function(err,rootFolder){\r\n                    if(err){\r\n                        errorRecorder({rc:err.code,msg:err.err.errmsg},'folder','createRootFolder')\r\n                        return callback(err,runtimeDbError.folder.saveRootFolder)\r\n                    }else{\r\n                        return callback(null,{rc:0,msg:rootFolder})\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n//读取用户的根目录以下的目录信息\r\n/*\r\n* userId:通过userId直接读取level=1的folder(根目录和垃圾箱)\r\n* */\r\nvar readRootFolder=function(userId,folderName,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    var defaultFolderName=general.defaultRootFolderName\r\n\r\n    if(-1===defaultFolderName.indexOf(folderName)){\r\n        return callback(null,runtimeNodeError.folder.invalidateRootFolderName)\r\n    }\r\n    //获得根目录的信息\r\n    readRootFolderId(userId,folderName,function(err,result){\r\n/*        if(0<result.rc){\r\n            return callback(null,result)\r\n        }*/\r\n\r\n        //result.msg=result.msg.toObject()\r\n        return callback(null,result)\r\n\r\n    })\r\n\r\n}\r\n\r\n//读取用户指定目录下的目录信息\r\n var readFolder=function(userId,parentFolderId,callback){\r\n     if(!validateFolder.owner.type.define.test(userId)){\r\n         return callback(null,validateFolder.owner.type.client)\r\n     }\r\n     if(!validateFolder._id.type.define.test(parentFolderId)){\r\n         return callback(null,validateFolder._id.type.client)\r\n     }\r\n     ifFolderOwner(userId,parentFolderId,function(err,result){\r\n         if(0<result.rc){\r\n             return callback(null,result)\r\n         }\r\n         folderModel.find({owner:userId,parentId:parentFolderId},function(err,recorder){\r\n             if(err){\r\n                 errorRecorder({rc:err.code,msg:err.errmsg},'folder','readFolder');\r\n                 return callback(err,runtimeDbError.folder.readFolder)\r\n             }else{\r\n                 return callback(null,{rc:0,msg:recorder})\r\n             }\r\n         })\r\n     })\r\n\r\n\r\n}\r\n\r\n//修改指定目录的名称\r\n/*\r\n* userId:从塞塞斯哦那种读取,判断是否可以更改folder\r\n* folderId: 要更改的目录\r\n* oldName: 和userId/folder一起,确定要更改的目录\r\n* newName: folder的新名字\r\n* */\r\nvar modifyFolderName=function(userId,folderId,oldName,newName,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(folderId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    if(!validateFolder.folderName.type.define.test(oldName)){\r\n        return callback(null,validateFolder.folderName.type.client)\r\n    }\r\n    if(!validateFolder.folderName.type.define.test(newName)){\r\n        return callback(null,validateFolder.folderName.type.client)\r\n    }\r\n    //不用update而用find+save,是为了可以检测参数是不是正确\r\n    folderModel.findById(folderId,function(err,folderRec){\r\n        if(err){\r\n            errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName');\r\n            return callback(null,runtimeDbError.folder.folderFindById)\r\n        }\r\n        if(null===folderRec){\r\n            return callback(null,runtimeDbError.folder.folderFindByIdNull)\r\n        }\r\n        if(1<folderRec.length){\r\n            return callback(null,runtimeDbError.folder.folderFindByIdMulti)\r\n        }\r\n        if(ifDefaultFolder(folderRec)){\r\n            return callback(null,runtimeNodeError.folder.cantMoveDefaultFolder)\r\n        }\r\n        if(folderRec.owner!=userId){\r\n            return callback(null,runtimeNodeError.folder.notOwner)\r\n        }\r\n        if(folderRec.folderName!=oldName){\r\n            return callback(null,runtimeNodeError.folder.folderNameNotMatch)\r\n        }\r\n        folderRec.folderName=newName\r\n        folderRec.save(function(err,updatedFolder){\r\n            if(err){\r\n                errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName')\r\n                return callback(err,runtimeNodeError.folder.updateFolderNameFail)\r\n            }\r\n            return callback(null,{rc:0,msg:updatedFolder})\r\n        })\r\n    })\r\n\r\n}\r\n\r\n//移动目录\r\n/*\r\n * userId:从塞塞斯哦那种读取,判断是否可以更改folder\r\n * folderId: 要更改的目录\r\n * oldParentFolderId: 从哪里移出\r\n * newParentFolderId: 移动到哪个目录中\r\n * */\r\nvar moveFolder=function(userId,folderId,oldParentFolderId,newParentFolderId,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(folderId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(oldParentFolderId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(newParentFolderId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    if(oldParentFolderId===newParentFolderId){\r\n        return callback(null,{rc:0,msg:null})\r\n    }\r\n    //确定当前目录不是根目录(因为根目录不能移动)\r\n    folderModel.findById(folderId,function(err,currentFolder){\r\n        if(err){\r\n            errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName');\r\n            return callback(null,runtimeDbError.folder.folderFindById)\r\n        }\r\n        if(null===currentFolder){\r\n            return callback(null,runtimeDbError.folder.folderFindByIdNull)\r\n        }\r\n        if(ifDefaultFolder(currentFolder)){\r\n            return callback(null,runtimeNodeError.folder.cantMoveDefaultFolder)\r\n        }\r\n//确定新parentId是当前用户的\r\n        folderModel.findById(newParentFolderId,function(err,parentFolder){\r\n            if(err){\r\n                errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName');\r\n                return callback(null,runtimeDbError.folder.folderFindById)\r\n            }\r\n            if(null===parentFolder){\r\n                return callback(null,runtimeDbError.folder.folderFindByIdNull)\r\n            }\r\n            if(1<parentFolder.length){\r\n                return callback(null,runtimeDbError.folder.folderFindByIdMulti)\r\n            }\r\n/*            if(ifDefaultFolder(parentFolder)){\r\n                return callback(null,runtimeNodeError.folder.cantDeleteDefaultFolderName)\r\n            }*/\r\n            if(userId!=parentFolder.owner){\r\n                return callback(null, runtimeNodeError.folder.notNewFolderOwner)\r\n            }\r\n            var parentLevel=parentFolder.level;\r\n            if(validateFolder.level.range.define.max<=parentLevel || validateFolder.level.range.define.min>parentLevel ){\r\n                return callback(null,runtimeNodeError.folder.parentLevelNotInRange)\r\n            }\r\n            folderModel.findById(folderId,function(err,folder){\r\n                if(err){\r\n                    errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName');\r\n                    return callback(null,runtimeDbError.folder.folderFindById)\r\n                }\r\n                if(null===folder){\r\n                    return callback(null,runtimeDbError.folder.folderFindByIdNull)\r\n                }\r\n                if(1<folder.length) {\r\n                    return callback(null, runtimeDbError.folder.folderFindByIdMulti)\r\n                }\r\n\r\n                if(userId!=folder.owner){\r\n                    return callback(null,runtimeNodeError.folder.notOwner)\r\n                }\r\n                folder.parentId=newParentFolderId\r\n                folder.level=parentLevel+1\r\n                folder.save(function(err,newFolder){\r\n                    if(err){\r\n                        errorRecorder({rc:err.code,msg:err.errmsg},'folder','modifyFolderName');\r\n                        return callback(null,runtimeDbError.folder.saveFolder)\r\n                    }\r\n                    return callback(null,{rc:0,msg:newFolder})\r\n                })\r\n\r\n            })\r\n        })\r\n    })\r\n\r\n\r\n}\r\n//创建新目录\r\n/*\r\n*   userId;当前用户的Id,从session中读取\r\n*   parentFolderId: 在哪个目录下创建\r\n*   newFolderName: 新创建目录的名称\r\n* */\r\nvar createNewFolder=function(userId,parentFolderId,newFolderName,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(parentFolderId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    if(!validateFolder.folderName.type.define.test(newFolderName)){\r\n        return callback(null,validateFolder.folderName.type.client)\r\n    }\r\n    //首先检查父目录的深度\r\n    folderModel.findById(parentFolderId,function(err,parentFolder) {\r\n        if (err) {\r\n            errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'createNewFolder');\r\n            return callback(null, runtimeDbError.folder.folderFindById)\r\n        }\r\n        if(null===parentFolder){\r\n            return callback(null,runtimeDbError.folder.folderFindByIdNull)\r\n        }\r\n        if(1<parentFolder.length){\r\n            return callback(null,runtimeDbError.folder.folderFindByIdMulti)\r\n        }\r\n        if (userId != parentFolder.owner) {\r\n            return callback(null, runtimeNodeError.folder.notNewFolderOwner)\r\n        }\r\n        var parentLevel = parentFolder.level;\r\n        if (validateFolder.level.range.define.max <= parentLevel || validateFolder.level.range.define.min > parentLevel) {\r\n            return callback(null, runtimeNodeError.folder.parentLevelNotInRange)\r\n        }\r\n        //创建新目录\r\n        var folder=new folderModel();\r\n        folder.folderName=newFolderName;\r\n        folder.owner=userId;\r\n        folder.parentId=parentFolderId\r\n        folder.level=parentLevel+1;\r\n\r\n/*        validateFolder.folder(folder,'folder','createNewFolder',function(err,savedFolder){\r\n            if (err) {\r\n                errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'modifyFolderName');\r\n                return callback(err, runtimeDbError.folder.saveFolder)\r\n            }\r\n            return callback(null,{rc:0,msg:savedFolder})\r\n        })*/\r\n        folder.save(function(err,savedFolder){\r\n            if (err) {\r\n                errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'modifyFolderName');\r\n                return callback(err, runtimeDbError.folder.saveFolder)\r\n            }\r\n            return callback(null,{rc:0,msg:savedFolder})\r\n        })\r\n    })\r\n\r\n}\r\n//删除目录\r\n/*\r\n* userId: 从session中读取,判断是否为folder的owner\r\n* folder:要删除的目录\r\n* */\r\nvar deleteFolder=function(userId,folderId,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(folderId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    folderModel.findById(folderId,function(err,folder){\r\n        if(err){\r\n            errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'deleteFolder');\r\n            return callback(err, runtimeDbError.folder.folderFindById)\r\n        }\r\n        if(null===folder){\r\n            return callback(null, runtimeDbError.folder.folderFindByIdNull)\r\n        }\r\n        if(1<folder.length){\r\n            return callback(null, runtimeDbError.folder.folderFindByIdMulti)\r\n        }\r\n        if(ifDefaultFolder(folder)){\r\n            return callback(null,runtimeNodeError.folder.cantDeleteDefaultFolderName)\r\n        }\r\n        if (userId != folder.owner) {\r\n            return callback(null, runtimeNodeError.folder.notNewFolderOwner)\r\n        }\r\n\r\n        folderModel.remove({_id:folderId},function(err){\r\n            if(err){\r\n                errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'deleteFolder');\r\n                return callback(err, runtimeDbError.folder.removeFolder)\r\n            }\r\n            return callback(null,{rc:0,msg:null})\r\n        })\r\n    })\r\n}\r\n\r\n//统计当前目录下子目录的数量\r\nvar countSubFolder=function(userId,parentId,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateFolder._id.type.define.test(parentId)){\r\n        return callback(null,validateFolder._id.type.client)\r\n    }\r\n    ifFolderOwner(userId,parentId,function(err,result){\r\n        if(0<result.rc){\r\n            return callback(null,result)\r\n        }\r\n        folderModel.count({owner:userId,parentId:parentId},function(err,result1){\r\n            if(err){\r\n                errorRecorder({rc: err.code, msg: err.errmsg}, 'folder', 'countSubFolder');\r\n                return callback(err, runtimeDbError.folder.countSubFolder)\r\n            }\r\n            return callback(null,{rc:0,msg:result1})\r\n        })\r\n    })\r\n\r\n}\r\n/*********************************************************************************************************************/\r\n/*********************************************************************************************************************/\r\n/*******************************                articleFolder      ***************************************************/\r\n/*********************************************************************************************************************/\r\n/*********************************************************************************************************************/\r\n//读取目录下所有文档的数量\r\nvar readArticleNumInFolder=function(folderId,callback){\r\n    articleFolderModel.count({folderId:folderId},function(err,result){\r\n        if(err){\r\n            return callback(err,runtimeDbError.articleFolder.countFail)\r\n        }\r\n        return callback(null,{rc:0,msg:result})\r\n    })\r\n}\r\n\r\n//读取指定folder下的文档(不包含子目录)\r\n/*\r\n *  userId: 从session中读取,判断是否为folder的owner\r\n *  folderId:文档要加入(移入)的目录编号\r\n * */\r\nvar readArticleInFolder=function(userId,folderId,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateArticleFolder.folderId.type.define.test(folderId)){\r\n        return callback(null,validateArticleFolder.folderId.type.client)\r\n    }\r\n    var opt=[\r\n            {path:'articleId',model:'articles',select:'title state author hashId mDate'}//对于tree,只要title\r\n            //{path:'comment',model:'comments',select:'content mDate user',options:{limit:general.commentPageSize}}\r\n    ]\r\n    ifFolderOwner(userId,folderId,function(err,result) {\r\n        if (0 < result.rc) {\r\n            return callback(null, result)\r\n        }\r\n        articleFolderModel.find({folderId:folderId},'articleId',function(err,articleFolder){\r\n            if(err){\r\n                errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'readArticleInFolder');\r\n                return callback(err, runtimeDbError.articleFolder.findSubArticle)\r\n            }\r\n            if([]===articleFolder){\r\n                return callback(null,{rc:0,msg:[]})\r\n            }\r\n            var totalNum=articleFolder.length;\r\n            var populateArray=[];\r\n            //console.log(articleFolder);\r\n            //console.log(articleFolder);\r\n/*            articleFolder.populate(opt,function(err,populatedArticle) {\r\n                if (err) {\r\n                    console.log(err);\r\n                    return\r\n                }\r\n                console.log(populatedArticle)\r\n            })*/\r\n            async.forEachOf(articleFolder,function(value,key,cb){\r\n//console.log(value)\r\n                value.populate(opt,function(err,populatedArticle){\r\n                    if(err){\r\n                        cb(err)\r\n                    }\r\n                    if(populatedArticle  && populatedArticle.articleId.author==userId){\r\n\r\n                        populateArray[key]=populatedArticle\r\n//console.log(key)\r\n                    }\r\n                    cb()\r\n                })\r\n            },function(err){\r\n                if(err){\r\n                    errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'readArticleInFolder');\r\n                    return callback(err, runtimeDbError.articleFolder.populateArticle)\r\n                }\r\n//console.log(populateArray)\r\n                return callback(null,{rc:0,msg:populateArray})\r\n            })\r\n/*            for(var i=0;i<totalNum;i++){\r\n                articleFolder[i].populate(opt,function(err,populatedArticle){\r\n                    if(err){\r\n                        errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'readArticleInFolder');\r\n                        return callback(err, runtimeDbError.articleFolder.populateArticle)\r\n                    }\r\n                    if(populatedArticle.author===userId){\r\n                        populateArray.push(populatedArticle)\r\n                    }\r\n\r\n                })\r\n            }\r\n            return callback(null,{rc:0,msg:populateArray})*/\r\n        })\r\n    })\r\n\r\n}\r\n\r\n//和readArticle类似，只是读取的内容要以table的方式显示\r\nvar readArticleInFolderForPagination=function(userId,folderId,curPage,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateArticleFolder.folderId.type.define.test(folderId)){\r\n        return callback(null,validateArticleFolder.folderId.type.client)\r\n    }\r\n    if(input_validate.regex.pageNum.test(curPage)){\r\n        return callback(null,runtimeNodeError.articleFolder.pageNumWrong)\r\n    }\r\n    ifFolderOwner(userId,folderId,function(err,result){\r\n        if(0<result.rc){\r\n            return callback(null,result)\r\n        }\r\n        countSubArticle(userId,folderId,function(err,result1){\r\n            if(0<result1.rc){\r\n                return callback(null.result1)\r\n            }\r\n            var totalNum=result.msg\r\n            var paginationInfo=pagination(totalNum,curPage,general.articleFolderPageSize,general.articleFolderPageLength)\r\n            articleFolderModel.find({folderId:folderId},'articleId',{limit:general.articleFolderPageSize,skip:(paginationInfo.curPage-1)*general.articleFolderPageSize},function(err,articleFolder){\r\n                if(err){\r\n                    errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'readArticleInFolder');\r\n                    return callback(err, runtimeDbError.articleFolder.findSubArticle)\r\n                }\r\n                if(null===articleFolder){\r\n                    return callback(null,{rc:0,msg:[]})\r\n                }\r\n                var totalNum=articleFolder.length;\r\n                var populateArray=[];\r\n\r\n                var opt=[\r\n                    {path:'articleId',model:'articles',select:'title author cDate mDate'}//对于tree,只要title\r\n                    //{path:'comment',model:'comments',select:'content mDate user',options:{limit:general.commentPageSize}}\r\n                ]\r\n                for(var i=0;i<totalNum;i++){\r\n                    articleFolder[i].populate(opt,function(err,populatedArticle){\r\n                        if(err){\r\n                            errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'readArticleInFolder');\r\n                            return callback(err, runtimeDbError.articleFolder.populateArticle)\r\n                        }\r\n\r\n                        if(populatedArticle.author===userId){\r\n                            populateArray.push(populatedArticle)\r\n                        }\r\n\r\n                    })\r\n                }\r\n                return callback(null,{rc:0,msg:populateArray})\r\n            })\r\n        })\r\n\r\n    })\r\n\r\n}\r\n//在folder下创建一个文档\r\n/*\r\n*  userId: 从session中读取,判断是否为folder的owner\r\n*  articleId:要添加的文档Id\r\n*  folderId:文档要加入(移入)的目录编号\r\n* */\r\nvar createArticleFolder=function(userId,articleId,folderId,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateArticleFolder.articleId.type.define.test(articleId)){\r\n        return callback(null,validateArticleFolder.articleId.type.client)\r\n    }\r\n    if(!validateArticleFolder.folderId.type.define.test(folderId)){\r\n        return callback(null,validateArticleFolder.folderId.type.client)\r\n    }\r\n    folderModel.findById(folderId,function(err,folder){\r\n        if(err){\r\n            errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'createArticleFolder');\r\n            return callback(err, runtimeDbError.folder.folderFindById)\r\n        }\r\n        if(userId!=folder.owner){\r\n            return callback(null,runtimeNodeError.articleFolder.notFolderOwner)\r\n        }\r\n        var articleFolder=new articleFolderModel()\r\n        articleFolder.articleId=articleId;\r\n        articleFolder.folderId=folderId;\r\n        validateDb.articleFolder(articleFolder,'articleFolder','createArticleFolder',function(err,result){\r\n            if(0<result.rc){\r\n                return callback(null,result)\r\n            }\r\n            articleFolder.save(function(err,savedrecorder){\r\n                if(err){\r\n                    errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'createArticleFolder');\r\n                    return callback(err, runtimeDbError.articleFolder.saveArticleFolder)\r\n                }\r\n//console.log(savedrecorder)\r\n                return callback(null,{rc:0,msg:{id:savedrecorder._id,title:'新建文件',mDate:savedrecorder.mDate,state:'正在编辑'}})\r\n            })\r\n        })\r\n        //articleModel.findById(articleId,'_id title',function(err,article){\r\n        //    if(err){\r\n        //        errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'createArticleFolder');\r\n        //        return callback(err, runtimeDbError.article.findById)\r\n        //    }\r\n        //    if(null===article){\r\n        //        return callback(err, runtimeDbError.article.findByIdNull)\r\n        //    }\r\n        //    if(1<article.length){\r\n        //        return callback(err, runtimeDbError.article.findByIdMulti)\r\n        //    }\r\n        //\r\n        //})\r\n\r\n    })\r\n}\r\n\r\n\r\n//从trash目录移除一个文档(实际删除文档)\r\n/*\r\n*  userId: 从session中读取,判断是否为folder的owner\r\n*  articleId:要从folder中移除的文档Id\r\n*  folderId:文档要从中移除的目录编号\r\n* */\r\nvar removeArticleFolder=function(userId,articleId,callback){\r\n    if(!validateFolder.owner.type.define.test(userId)){\r\n        return callback(null,validateFolder.owner.type.client)\r\n    }\r\n    if(!validateArticleFolder.articleId.type.define.test(articleId)){\r\n        return callback(null,validateArticleFolder.articleId.type.client)\r\n    }\r\n/*    if(!validateArticleFolder.folderId.type.define.test(folderId)){\r\n        return callback(null,validateArticleFolder.folderId.type.client)\r\n    }*/\r\n\r\n    readRootFolderId(userId,'垃圾箱',function(err,result){\r\n        if(0<result.rc){\r\n            return callback(null, result)\r\n        }\r\n       //console.log( result.msg)\r\n        var trashFolderId=result.msg._id\r\n        ifFolderOwner(userId,trashFolderId,function(err,result){\r\n            if(0<result.rc){\r\n                return callback(null,result)\r\n            }\r\n            articleFolderModel.remove({folderId:trashFolderId,articleId:articleId},function(err,removedArticleFolder){\r\n                if(err){\r\n                    errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'removeArticleFolder');\r\n                    return callback(err, runtimeDbError.articleFolder.removeArticleFolder)\r\n                }\r\n                articleModel.findByIdAndRemove(articleId,function(err,removedArticle) {\r\n                    if(err){\r\n                        errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'removeArticleFolder');\r\n                        return callback(err, runtimeDbError.article.findByIdAndRemove)\r\n                    }\r\n                })\r\n                return callback(null,{rc:0,msg:null})\r\n            })\r\n        })\r\n\r\n\r\n    })\r\n\r\n}\r\n\r\n//把文档从一个目录移动到另外一个目录\r\n/*\r\n *  userId: 从session中读取,判断是否为folder的owner\r\n *  articleId:要从folder中移除的文档hashId\r\n *  oldFolderId:文档所处当前目录编号\r\n *  newFolderId:文档将要移入目录编号\r\n * */\r\nvar moveArticle=function(userId,articleHashId,oldFolderId,newFolderId,callback) {\r\n    if (!validateFolder.owner.type.define.test(userId)) {\r\n        return callback(null, validateFolder.owner.type.client)\r\n    }\r\n    if (!validateArticle.hashId.type.define.test(articleHashId)) {\r\n        return callback(null, validateArticle.hashId.type.client)\r\n    }\r\n    if (!validateArticleFolder.folderId.type.define.test(oldFolderId)) {\r\n        return callback(null, validateArticleFolder.folderId.type.client)\r\n    }\r\n    if (!validateArticleFolder.folderId.type.define.test(newFolderId)) {\r\n        return callback(null, validateArticleFolder.folderId.type.client)\r\n    }\r\n    if(oldFolderId===newFolderId){\r\n        return callback(null,{rc:0,msg:null})\r\n    }\r\n    //转换hashId到id\r\n    articleModel.find({hashId:articleHashId},function(err,findedArticle){\r\n        if(err){\r\n            errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'moveArticle');\r\n            return callback(err, runtimeDbError.article.findByHashId)\r\n        }\r\n        if(0===findedArticle.length){\r\n            return callback(err, runtimeDbError.article.findByHashIdNull)\r\n        }\r\n        if(1<findedArticle.length){\r\n            return callback(err, runtimeDbError.article.findByHashIdMulti)\r\n        }\r\n        var articleId=findedArticle[0]._id\r\n//console.log(findedArticle[0])\r\n        //检查当前目录是否为用户所有\r\n        ifFolderOwner(userId,oldFolderId,function(err,oldResult){\r\n            if(0<oldResult.rc){\r\n                return callback(null,oldResult)\r\n            }\r\n            //检查目标目录是否为用户所有\r\n            ifFolderOwner(userId,newFolderId,function(err,newResult){\r\n                if(0<newResult.rc){\r\n                    return callback(null,newResult)\r\n                }\r\n                //查找原始记录并更新(save)\r\n                articleFolderModel.find({folderId:oldFolderId,articleId:articleId},function(err,articleFolder){\r\n                    if(err){\r\n                        errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'moveArticle');\r\n                        return callback(err, runtimeDbError.articleFolder.find)\r\n                    }\r\n                    if([]==articleFolder){\r\n                        return callback(err, runtimeDbError.articleFolder.findNull)\r\n                    }\r\n                    if(1<articleFolder.length){\r\n                        return callback(err, runtimeDbError.articleFolder.findMulti)\r\n                    }\r\n                    articleFolder[0].folderId=newFolderId\r\n                    articleFolder[0].save(function(err,savedArticleFolder){\r\n                        if(err){\r\n                            errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'moveArticle');\r\n                            return callback(err, runtimeDbError.articleFolder.save)\r\n                        }\r\n                        return callback(null,{rc:0,msg:savedArticleFolder})\r\n                    })\r\n                })\r\n\r\n            })\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\n//统计当前目录下文档的数量\r\nvar countSubArticle=function(userId,folderId,callback){\r\n    if(!validateFolder._id.type.define.test(folderId)){\r\n        return callback(null,validateArticleFolder.folderId.type.client)\r\n    }\r\n    ifFolderOwner(userId,folderId,function(err,result){\r\n        if(0<result.rc){\r\n            return callback(null,result)\r\n        }\r\n        articleFolderModel.count({folderId:folderId},function(err,num){\r\n            if(err){\r\n                errorRecorder({rc: err.code, msg: err.errmsg}, 'articleFolder', 'countSubArticle');\r\n                return callback(err, runtimeDbError.articleFolder.countSubArticle)\r\n            }\r\n            return callback(null,{rc:0,msg:num})\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\n/*********************************************************************************************************************/\r\n/*********************************************************************************************************************/\r\n/*******************************                   exports           *************************************************/\r\n/*********************************************************************************************************************/\r\n/*********************************************************************************************************************/\r\nexports.personalArticleDbOperation={\r\n    checkIfRootFolder:checkIfRootFolder,\r\n    createRootFolder:createRootFolder,\r\n    //readRootFolderId:readRootFolderId,\r\n    readRootFolder:readRootFolder,\r\n    readFolder:readFolder,\r\n    modifyFolderName:modifyFolderName,\r\n    moveFolder:moveFolder,\r\n    createNewFolder:createNewFolder,\r\n    deleteFolder:deleteFolder,\r\n    countSubFolder:countSubFolder,\r\n\r\n    readArticleNumInFolder:readArticleNumInFolder,\r\n    readArticleInFolder:readArticleInFolder,\r\n    createArticleFolder:createArticleFolder,\r\n    removeArticleFolder:removeArticleFolder,\r\n    moveArticle:moveArticle,\r\n    countSubArticle:countSubArticle\r\n}"]}