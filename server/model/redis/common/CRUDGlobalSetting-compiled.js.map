{"version":3,"sources":["CRUDGlobalSetting.js"],"names":[],"mappings":"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","file":"CRUDGlobalSetting-compiled.js","sourcesContent":["/**\r\n * Created by zw on 2016/2/10.\r\n * checkAllSetting:check if all value valid\r\n * setAllSetting: save to redis if all value are valid\r\n * 还是使用ioredis来操作，可以转换成同步函数，并且因为操作次数比较少，速度和lua差不多\r\n */\r\n'use strict'\r\nvar defaultSetting=require('../../../config/global/defaultGlobalSetting').defaultSetting\r\n//use redis to save get golbalSetting\r\nvar redisClient=require('../connection/redis_connections').ioredisClient\r\nvar dataTypeCheck=require('../../../assist/misc').func.dataTypeCheck\r\nvar redisError=require('../../../define/error/redisError').redisError\r\nvar inputValid=require('../../../assist/misc').func.\r\n/*require('./redis_connections').redisClient1(function(err,result){\r\n    redisClient=result\r\n})*/\r\n//console.log(typeof dataTypeCheck)\r\nredisClient.select(1)\r\n//redisClient.db=1\r\n//console.log(redisClient)\r\n\r\n//var redisClient = require(\"redis\").createClient()\r\n//var async=require('async')\r\n//var settingError=require('../../error_define/runtime_node_error').runtime_node_error.setting\r\n\r\nvar rightResult={rc:0}\r\n\r\n/*redisClient.on('ready',function(){\r\n    console.log(2)\r\n            redisClient.multi().set(\"test1\",202).expire('test1',90)\r\n     .exec(function(err,replies){\r\n         console.log(replies)\r\n\r\n     })\r\n\r\n})*/\r\n\r\n//根据defaultGlobalSetting的结构，构造空值，以便使用checkInput时，强制对default值进行检测\r\nvar constructNull=function(){\r\n    let result={}\r\n    for(let item in defaultSetting){\r\n        result[item]={}\r\n        for (let subItem in defaultSetting[item]){\r\n            result[item][subItem]={}\r\n            result[item][subItem]['value']=null\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nvar setDefault=function(){\r\n       let emptyValue=constructNull()\r\n    for (let item in defaultSetting){\r\n        //for(let subItem in defaultSetting[item]){\r\n            let checkResult=inputValid.checkInput(emptyValue[item],defaultSetting[item])\r\n\r\n            for (let subItem in checkResult){\r\n                if(checkResult[subItem]['rc']>0){\r\n                    console.log(checkResult)\r\n                    return checkResult\r\n                }\r\n            }\r\n\r\n        //}\r\n    }\r\n\r\n        for(let item in defaultSetting){\r\n//console.log(item)\r\n            for (let subItem in defaultSetting[item]){\r\n//console.log(subItem)\r\n                //Is object but not an array, then change value to string\r\n                //for array, change to string automatically\r\n                let val=defaultSetting[item][subItem]['default']\r\n//console.log(`val:${val}`)\r\n                if(typeof val =='object' && !dataTypeCheck.isArray(val)){\r\n                    val=JSON.stringify(val)\r\n                    //console.log(val.toString())\r\n                }\r\n                //redisClient.select(1,function(err){\r\n                    redisClient.hset([item,subItem,val])\r\n                //})\r\n\r\n            }\r\n        }\r\n    //})\r\n\r\n}\r\n\r\n//直接返回subItem的值\r\nvar getSingleSetting=function(item,subItem,cb){\r\n    //redisClient.on('ready',function(){\r\n        redisClient.hexists(item,subItem,function(err,exist){\r\n//console.log(exist)\r\n            if(1===exist){\r\n                redisClient.hget(item,subItem,function(err,result){\r\n                    if(err){return cb(null,redisError.general.getError)}\r\n                    //redis value are string, check if object(JSON)\r\n\r\n                    if(0===result.indexOf('{') && result[ result.length-1]=='}'){\r\n\r\n                        result=JSON.parse(result)\r\n                        //console.log(result)\r\n                    }\r\n                    //array\r\n                    else if(-1!==result.indexOf(',')){\r\n                        result=Array.from(result.split(','))\r\n                    }\r\n\r\n                    return cb(null,{rc:0,msg:result})\r\n                })\r\n            }else{\r\n                return cb(null,redisError.general.keyNotExist)\r\n            }\r\n        })\r\n\r\n    //})\r\n}\r\n\r\n//获得数据项下所有子项的数据,并构成{item:{subItem1:value1,subItem2;value2}}的格式\r\nvar getItemSetting=function(item,cb){\r\n    var wholeResult={};\r\n    //计算item总数，以便确定合适可以返回全部（因为每读一次，都是异步）\r\n    var totalSubItemNum=0;\r\n    //获得数据项下所有子项的数量\r\n    if(undefined!==defaultSetting[item]){\r\n        wholeResult[item]={}\r\n        totalSubItemNum+=Object.keys(defaultSetting[item]).length\r\n/*        for (let subItem in  defaultSetting[item]){\r\n            totalSubItemNum++\r\n        }*/\r\n    }else{\r\n        return cb(null,{rc:0,msg:wholeResult})\r\n    }\r\n//console.log(new Date().getTime())\r\n    //redisClient.on('ready',function(){\r\n//console.log(new Date().getTime())\r\n        for (let subItem in  defaultSetting[item]){\r\n            getSingleSetting(item,subItem,function(err,result){\r\n//console.log(result)\r\n                if(result.rc && result.rc>0){\r\n                    return cb(null,result)\r\n                }\r\n                wholeResult[item][subItem]=result.msg\r\n                totalSubItemNum--\r\n                if(0===totalSubItemNum){\r\n                    cb(null,{rc:0,msg:wholeResult})\r\n                }\r\n                //console.log(wholeResult)\r\n            })\r\n        }\r\n    //})\r\n}\r\nvar getAllSetting=function(cb){\r\n\tvar wholeResult={};\r\n    //计算item总数，以便确定合适可以返回全部（因为每读一次，都是异步）\r\n    var totalSubItemNum=0;\r\n    for(let item in defaultSetting){\r\n        totalSubItemNum+=Object.keys(defaultSetting[item]).length\r\n/*        for (let subItem in  defaultSetting[item]){\r\n            totalSubItemNum++\r\n        }*/\r\n    }\r\n    //console.log(totalSubItemNum)\r\n    //redisClient.on('ready',function(){\r\n        for(let item of Object.keys(defaultSetting)){\r\n\t\t\tif(undefined===wholeResult[item]){\r\n                wholeResult[item]={}\r\n\t\t\t}\r\n            for (let subItem of  Object.keys(defaultSetting[item])){\r\n                getSingleSetting(item,subItem,function(err,result){\r\n                    if(result.rc && result.rc>0){\r\n                        return cb(null,result)\r\n                    }\r\n\t\t\t\t\twholeResult[item][subItem]=result.msg\r\n                    totalSubItemNum--\r\n                    if(0===totalSubItemNum){\r\n                        cb(null,{rc:0,msg:wholeResult})\r\n                    }\r\n                    //console.log(wholeResult)\r\n                })\r\n            }\r\n        }\r\n\t\t\r\n    //})\r\n}\r\n\r\n\r\n//使用通用函数处理\r\n/*var checkSingleSetting=function(item,subItem,newValue){\r\n    if(!newValue){\r\n        return settingError.emptyGlobalSettingValue\r\n    }\r\n    if(!defaultSetting[item][subItem]){\r\n        return settingError.invalidSettingParam\r\n    }\r\n    //根据类型进行检测，没有type定义，直接pass\r\n    if(defaultSetting[item][subItem][type]){\r\n        switch (defaultSetting[item][subItem][type]){\r\n            case 'int':\r\n                if(false===miscFunc.isInt(newValue)){\r\n                    return settingError.settingValueNotInt\r\n                }\r\n                if(defaultSetting[item][subItem][max]){\r\n                    let newValueInt=parseInt(newValue)\r\n                    if(newValueInt>defaultSetting[item][subItem][max]){\r\n                        return settingError.settingValueExceedMaxInt\r\n                    }\r\n                    //最小值检查包含在最大值检查中\r\n                    // 最小值没有定义，默认是0\r\n                    let definedMinValue=0\r\n                    if(defaultSetting[item][subItem][min]){\r\n                        definedMinValue=parseInt(defaultSetting[item][subItem][min])\r\n                    }\r\n                    if(newValueInt<definedMinValue){\r\n                        return settingError.settingValueExceedMinInt\r\n                    }\r\n                }\r\n                break;\r\n            case 'path':\r\n                if(false===miscFunc.isFolder(newValue)){\r\n                    return settingError.settingValuePathNotExist\r\n                }\r\n                if(defaultSetting[item][subItem][maxLength]){\r\n                    let definedMaxLength=defaultSetting[item][subItem][maxLength]\r\n                    if(newValue.length>definedMaxLength){\r\n                        return defaultSetting[item][subItem][client][maxLength]\r\n                    }\r\n                    //check min\r\n                    let definedMinLength=0\r\n                    if(defaultSetting[item][subItem][minLength]){\r\n                        definedMinLength=defaultSetting[item][subItem][minLength]\r\n                    }\r\n                    if(newValue.length<definedMinLength){\r\n                        return defaultSetting[item][subItem][client][minLength]\r\n                    }\r\n                }\r\n                break;\r\n            case 'file':\r\n                if(false===miscFunc.isFile(newValue)){\r\n                    return settingError.settingValueFileNotExist\r\n                }\r\n                if(defaultSetting[item][subItem][maxLength]){\r\n                    let definedMaxLength=defaultSetting[item][subItem][maxLength]\r\n                    if(newValue.length>definedMaxLength){\r\n                        return defaultSetting[item][subItem][client][maxLength]\r\n                    }\r\n                    //check min\r\n                    let definedMinLength=0\r\n                    if(defaultSetting[item][subItem][minLength]){\r\n                        definedMinLength=defaultSetting[item][subItem][minLength]\r\n                    }\r\n                    if(newValue.length<definedMinLength){\r\n                        return defaultSetting[item][subItem][client][minLength]\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return rightResult\r\n}\r\nvar checkAllSetting=function(valueObj){\r\n    for(let item of Object.keys(defaultSetting)) {\r\n        for (let subItem of  Object.keys(defaultSetting[item])) {\r\n            let checkResult=checkSingleSetting(item,subItem,valueObj[item][subItem])\r\n            if(checkResult.rc!==0){\r\n                return checkResult\r\n            }\r\n        }\r\n    }\r\n    return rightResult\r\n}*/\r\n\r\nvar setSingleSetting=function(item,subItem,newValue){\r\n    //redisClient.on('ready',function(){\r\n        if(typeof newValue =='object' && !dataTypeCheck.isArray(newValue)){\r\n            newValue=JSON.stringify(newValue)\r\n        }\r\n        //console.log(item+subItem+newValue)\r\n        redisClient.hset([item,subItem,newValue])\r\n    //})\r\n}\r\n//setAllSetting不能代替setDefault，因为setAllSetting读取的是{item1:{subItem1:{value:val1}}（和普通的input结构一致）,而setDefault读取的是{item1:{subItem1:{default:val1,type:'int',max:'',client:{}}}}\r\nvar setAllSetting=function(newValueObj){\r\n    //redisClient.on('ready',function() {\r\n/*        let checkResult=inputValid.checkInput(newValueObj,defaultSetting)\r\n        if(checkResult.rc>0){\r\n            return checkResult\r\n        }*/\r\n        //读取固定键\r\n    //console.log(newValueObj)\r\n        for (let item in newValueObj) {\r\n            for (let subItem in  newValueObj[item]) {\r\n                let newValue=newValueObj[item][subItem];\r\n/*                if (!newValueObj[item][subItem]) {\r\n                    newValue = newValueObj[item][subItem]\r\n                }*/\r\n                //判断是否对象\r\n                if (typeof newValue == 'object' && !dataTypeCheck.isArray(newValue)) {\r\n                    newValue = JSON.stringify(newValue)\r\n                }\r\n                setSingleSetting(item, subItem, newValue)\r\n            }\r\n        }\r\n    //})\r\n}\r\n//redisClient.on('ready',function(){\r\n//    setDefault(defaultSetting)\r\n//    getAllSetting(function(err,result){\r\n//        console.log(result['attachment']['validSuffix'])\r\n//    })\r\n//})\r\n\r\n//set\r\n\r\nexports.CRUDGlobalSetting={\r\n    setDefault:setDefault,\r\n    getSingleSetting:getSingleSetting,\r\n    constructNull:constructNull,\r\n    getItemSetting:getItemSetting,//用来获得当个item下所有数据\r\n    getAllSetting:getAllSetting,\r\n    setAllSetting:setAllSetting\r\n};\r\n\r\n//constructNull()\r\n//setDefault()\r\n//getSingleSetting()\r\n/*\r\nvar fs=require('fs')\r\ngetAllSetting(function(err,result){\r\n    console.log(result.msg)\r\n    fs.w\r\n})*/\r\n"]}