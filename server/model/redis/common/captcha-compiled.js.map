{"version":3,"sources":["captcha.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;AACA;AACA;;AACA,IAAI,cAAY,QAAQ,gCAAR,EAA0C,aAA1D;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAkB,QAAQ,wCAAR,EAAkD,mBAAxE;AACA,IAAI,iBAAe,QAAQ,4CAAR,EAAsD,cAAzE;AACA,IAAI,cAAY,EAAC,IAAG,CAAJ,EAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAI,cAAY,SAAZ,WAAY,CAAS,GAAT,EAAa,OAAb,EAAqB;AACrC;;;AAGI,QAAI,aAAc,IAAI,OAAJ,CAAY,EAA1B,aAAJ;AACA,gBAAY,KAAZ,GAAoB,GAApB,CAAwB,UAAxB,EAAmC,OAAnC,EAA4C,MAA5C,CAAmD,UAAnD,EAA8D,eAAe,aAAf,CAA6B,aAA7B,CAA2C,MAAzG,EAAiH,IAAjH;AACH,CAND;;AAQA,IAAI,aAAW,SAAX,UAAW,CAAS,GAAT,EAAa,EAAb,EAAgB;AAC3B,QAAI,aAAc,IAAI,OAAJ,CAAY,EAA1B,aAAJ;AACA,gBAAY,MAAZ,CAAmB,UAAnB,EAA8B,UAAS,GAAT,EAAa,KAAb,EAAmB;AAC7C,YAAG,GAAH,EAAO;AACH,mBAAO,GAAG,IAAH,EAAQ,kBAAkB,OAAlB,CAA0B,UAAlC,CAAP;AACH;AACD,YAAG,MAAI,KAAP,EAAa;AACT,wBAAY,GAAZ,CAAgB,UAAhB,EAA2B,UAAS,GAAT,EAAa,MAAb,EAAoB;AAC3C,oBAAG,GAAH,EAAO;AACH,2BAAO,GAAG,IAAH,EAAQ,kBAAkB,OAAlB,CAA0B,QAAlC,CAAP;AACH;AACD,uBAAO,GAAG,IAAH,EAAQ,EAAC,IAAG,CAAJ,EAAM,KAAI,MAAV,EAAR,CAAP;AACH,aALD;AAMH,SAPD,MAOK;AACD;AACA,mBAAO,GAAG,IAAH,EAAQ,kBAAkB,OAAlB,CAA0B,MAAlC,CAAP;AACH;AAEJ,KAhBD;AAiBH,CAnBD;;AAqBA,IAAI,aAAW,SAAX,UAAW,CAAS,GAAT,EAAa,EAAb,EAAgB;AAC3B,QAAI,aAAc,IAAI,OAAJ,CAAY,EAA1B,aAAJ;AACA,gBAAY,MAAZ,CAAmB,UAAnB,EAA8B,UAAS,GAAT,EAAa,KAAb,EAAmB;AAC7C,YAAG,GAAH,EAAO;AACH,mBAAO,GAAG,IAAH,EAAQ,kBAAkB,OAAlB,CAA0B,UAAlC,CAAP;AACH;AACD,YAAG,MAAI,KAAP,EAAa;AACT,wBAAY,GAAZ,CAAgB,UAAhB,EAA2B,UAAS,GAAT,EAAa,MAAb,EAAoB;AAC3C,oBAAG,GAAH,EAAO;AACH,2BAAO,GAAG,IAAH,EAAQ,kBAAkB,OAAlB,CAA0B,QAAlC,CAAP;AACH;AACD,uBAAO,GAAG,IAAH,EAAQ,EAAC,IAAG,CAAJ,EAAM,KAAI,MAAV,EAAR,CAAP;AACH,aALD;AAMH;AACJ,KAZD;AAaH,CAfD;;AAiBA,QAAQ,OAAR,GAAgB;AACZ,iBAAY,WADA;AAEZ,gBAAW,UAFC;AAGZ,gBAAW;;AAHC,CAAhB;AAMA","file":"captcha-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-03-02.\r\n * captcha相关操作\r\n * 1. 保存\r\n * 2。判断是否存在（超时）\r\n * 3. 读取\r\n */\r\n'use strict'\r\n//var defaultSetting=require('../../assist/defaultGlobalSetting').defaultSetting\r\n//use redis to save get golbalSetting\r\nvar redisClient=require('../connection/redis_connection').ioredisClient\r\n//var miscFunc=require('../../assist_function/miscellaneous').func\r\n//var redisClient = require(\"redis\").createClient()\r\n//var async=require('async')\r\n//var settingError=require('../../error_define/runtime_node_error').runtime_node_error.setting\r\nvar runtimeRedisError=require('../../error_define/runtime_redis_error').runtime_redis_error\r\nvar defaultSetting=require('../../assist/not_used_defaultGlobalSetting').defaultSetting\r\nvar rightResult={rc:0}\r\n//redisClient.on('ready',function(){\r\n//    redisClient.multi().set('test1',2).exec()\r\n//})\r\n//异步，返回true、false：是否ok\r\n//redisClient.on(\"error\", function (err) {\r\n//    console.log(\"Error \" + err);\r\n//});\r\n/*var checkRedisStatus=function(cb){\r\n    redisClient.on('drain',function(){//命令太多，需要缓存\r\n        return cb('drain',false)\r\n    })\r\n    //redisClient.on('ready',function(){\r\n        redisClient.expire('test1',100)\r\n        //return cb(null,true)\r\n    //})\r\n    redisClient.on('connect',function(){\r\n        return cb(null,true)\r\n    })\r\n    redisClient.on('reconnecting',function(){\r\n        return cb('reconnecting',false)\r\n    })\r\n    redisClient.on('error',function(err){\r\n        return cb(err,false)\r\n    })\r\n    redisClient.on('end',function(){\r\n        return cb('connection ended',false)\r\n    })\r\n\r\n    redisClient.on('idle',function(){\r\n        return cb(null,true)\r\n    })\r\n\r\n}*/\r\nvar saveCaptcha=function(req,captcha){\r\n/*    redisClient.set(`${req.session.id}:captcha`,captcha,function(){\r\n\r\n    })*/\r\n    let captchaKey=`${req.session.id}:captcha`\r\n    redisClient.multi().set(captchaKey,captcha).expire(captchaKey,defaultSetting.miscellaneous.captchaExpire.define).exec()\r\n}\r\n\r\nvar getCaptcha=function(req,cb){\r\n    var captchaKey=`${req.session.id}:captcha`;\r\n    redisClient.exists(captchaKey,function(err,exist){\r\n        if(err){\r\n            return cb(null,runtimeRedisError.general.existsFail)\r\n        }\r\n        if(1===exist){\r\n            redisClient.get(captchaKey,function(err,result){\r\n                if(err){\r\n                    return cb(null,runtimeRedisError.captcha.getError)\r\n                }\r\n                return cb(null,{rc:0,msg:result})\r\n            })\r\n        }else{\r\n            //getCaptcha只在对比时才调用，那么说明之前已经产生过captcha了，所以notExist，返回说明文字“超时”\r\n            return cb(null,runtimeRedisError.captcha.expire)\r\n        }\r\n\r\n    })\r\n}\r\n\r\nvar delCaptcha=function(req,cb){\r\n    var captchaKey=`${req.session.id}:captcha`;\r\n    redisClient.exists(captchaKey,function(err,exist){\r\n        if(err){\r\n            return cb(null,runtimeRedisError.general.existsFail)\r\n        }\r\n        if(1===exist){\r\n            redisClient.del(captchaKey,function(err,result){\r\n                if(err){\r\n                    return cb(null,runtimeRedisError.captcha.delError)\r\n                }\r\n                return cb(null,{rc:0,msg:result})\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexports.captcha={\r\n    saveCaptcha:saveCaptcha,\r\n    getCaptcha:getCaptcha,\r\n    delCaptcha:delCaptcha,\r\n\r\n}\r\n//exportsaveCaptcha()"]}