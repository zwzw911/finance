{"version":3,"sources":["captcha-compiled.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;AACA;AACA;;AAEA,IAAI,cAAc,QAAQ,gCAAR,EAA0C,aAA5D;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,QAAQ,wCAAR,EAAkD,mBAA1E;AACA,IAAI,iBAAiB,QAAQ,4CAAR,EAAsD,cAA3E;AACA,IAAI,cAAc,EAAE,IAAI,CAAN,EAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAI,cAAc,SAAS,WAAT,CAAqB,GAArB,EAA0B,OAA1B,EAAmC;AACjD;;;AAGA,QAAI,aAAa,IAAI,OAAJ,CAAY,EAAZ,GAAiB,UAAlC;AACA,gBAAY,KAAZ,GAAoB,GAApB,CAAwB,UAAxB,EAAoC,OAApC,EAA6C,MAA7C,CAAoD,UAApD,EAAgE,eAAe,aAAf,CAA6B,aAA7B,CAA2C,MAA3G,EAAmH,IAAnH;AACH,CAND;;AAQA,IAAI,aAAa,SAAS,UAAT,CAAoB,GAApB,EAAyB,EAAzB,EAA6B;AAC1C,QAAI,aAAa,IAAI,OAAJ,CAAY,EAAZ,GAAiB,UAAlC;AACA,gBAAY,MAAZ,CAAmB,UAAnB,EAA+B,UAAU,GAAV,EAAe,KAAf,EAAsB;AACjD,YAAI,GAAJ,EAAS;AACL,mBAAO,GAAG,IAAH,EAAS,kBAAkB,OAAlB,CAA0B,UAAnC,CAAP;AACH;AACD,YAAI,MAAM,KAAV,EAAiB;AACb,wBAAY,GAAZ,CAAgB,UAAhB,EAA4B,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC/C,oBAAI,GAAJ,EAAS;AACL,2BAAO,GAAG,IAAH,EAAS,kBAAkB,OAAlB,CAA0B,QAAnC,CAAP;AACH;AACD,uBAAO,GAAG,IAAH,EAAS,EAAE,IAAI,CAAN,EAAS,KAAK,MAAd,EAAT,CAAP;AACH,aALD;AAMH,SAPD,MAOO;AACH;AACA,mBAAO,GAAG,IAAH,EAAS,kBAAkB,OAAlB,CAA0B,MAAnC,CAAP;AACH;AACJ,KAfD;AAgBH,CAlBD;;AAoBA,IAAI,aAAa,SAAS,UAAT,CAAoB,GAApB,EAAyB,EAAzB,EAA6B;AAC1C,QAAI,aAAa,IAAI,OAAJ,CAAY,EAAZ,GAAiB,UAAlC;AACA,gBAAY,MAAZ,CAAmB,UAAnB,EAA+B,UAAU,GAAV,EAAe,KAAf,EAAsB;AACjD,YAAI,GAAJ,EAAS;AACL,mBAAO,GAAG,IAAH,EAAS,kBAAkB,OAAlB,CAA0B,UAAnC,CAAP;AACH;AACD,YAAI,MAAM,KAAV,EAAiB;AACb,wBAAY,GAAZ,CAAgB,UAAhB,EAA4B,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC/C,oBAAI,GAAJ,EAAS;AACL,2BAAO,GAAG,IAAH,EAAS,kBAAkB,OAAlB,CAA0B,QAAnC,CAAP;AACH;AACD,uBAAO,GAAG,IAAH,EAAS,EAAE,IAAI,CAAN,EAAS,KAAK,MAAd,EAAT,CAAP;AACH,aALD;AAMH;AACJ,KAZD;AAaH,CAfD;;AAiBA,QAAQ,OAAR,GAAkB;AACd,iBAAa,WADC;AAEd,gBAAY,UAFE;AAGd,gBAAY;;AAHE,CAAlB;AAMA;;AAEA","file":"captcha-compiled-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-03-02.\r\n * captcha相关操作\r\n * 1. 保存\r\n * 2。判断是否存在（超时）\r\n * 3. 读取\r\n */\n'use strict';\n//var defaultSetting=require('../../assist/defaultGlobalSetting').defaultSetting\n//use redis to save get golbalSetting\n\nvar redisClient = require('../connection/redis_connection').ioredisClient;\n//var miscFunc=require('../../assist_function/miscellaneous').func\n//var redisClient = require(\"redis\").createClient()\n//var async=require('async')\n//var settingError=require('../../error_define/runtime_node_error').runtime_node_error.setting\nvar runtimeRedisError = require('../../error_define/runtime_redis_error').runtime_redis_error;\nvar defaultSetting = require('../../assist/not_used_defaultGlobalSetting').defaultSetting;\nvar rightResult = { rc: 0 };\n//redisClient.on('ready',function(){\n//    redisClient.multi().set('test1',2).exec()\n//})\n//异步，返回true、false：是否ok\n//redisClient.on(\"error\", function (err) {\n//    console.log(\"Error \" + err);\n//});\n/*var checkRedisStatus=function(cb){\r\n    redisClient.on('drain',function(){//命令太多，需要缓存\r\n        return cb('drain',false)\r\n    })\r\n    //redisClient.on('ready',function(){\r\n        redisClient.expire('test1',100)\r\n        //return cb(null,true)\r\n    //})\r\n    redisClient.on('connect',function(){\r\n        return cb(null,true)\r\n    })\r\n    redisClient.on('reconnecting',function(){\r\n        return cb('reconnecting',false)\r\n    })\r\n    redisClient.on('error',function(err){\r\n        return cb(err,false)\r\n    })\r\n    redisClient.on('end',function(){\r\n        return cb('connection ended',false)\r\n    })\r\n\r\n    redisClient.on('idle',function(){\r\n        return cb(null,true)\r\n    })\r\n\r\n}*/\nvar saveCaptcha = function saveCaptcha(req, captcha) {\n    /*    redisClient.set(`${req.session.id}:captcha`,captcha,function(){\r\n    \r\n        })*/\n    var captchaKey = req.session.id + ':captcha';\n    redisClient.multi().set(captchaKey, captcha).expire(captchaKey, defaultSetting.miscellaneous.captchaExpire.define).exec();\n};\n\nvar getCaptcha = function getCaptcha(req, cb) {\n    var captchaKey = req.session.id + ':captcha';\n    redisClient.exists(captchaKey, function (err, exist) {\n        if (err) {\n            return cb(null, runtimeRedisError.general.existsFail);\n        }\n        if (1 === exist) {\n            redisClient.get(captchaKey, function (err, result) {\n                if (err) {\n                    return cb(null, runtimeRedisError.captcha.getError);\n                }\n                return cb(null, { rc: 0, msg: result });\n            });\n        } else {\n            //getCaptcha只在对比时才调用，那么说明之前已经产生过captcha了，所以notExist，返回说明文字“超时”\n            return cb(null, runtimeRedisError.captcha.expire);\n        }\n    });\n};\n\nvar delCaptcha = function delCaptcha(req, cb) {\n    var captchaKey = req.session.id + ':captcha';\n    redisClient.exists(captchaKey, function (err, exist) {\n        if (err) {\n            return cb(null, runtimeRedisError.general.existsFail);\n        }\n        if (1 === exist) {\n            redisClient.del(captchaKey, function (err, result) {\n                if (err) {\n                    return cb(null, runtimeRedisError.captcha.delError);\n                }\n                return cb(null, { rc: 0, msg: result });\n            });\n        }\n    });\n};\n\nexports.captcha = {\n    saveCaptcha: saveCaptcha,\n    getCaptcha: getCaptcha,\n    delCaptcha: delCaptcha\n\n};\n//exportsaveCaptcha()\n\n//# sourceMappingURL=captcha-compiled.js.map"]}