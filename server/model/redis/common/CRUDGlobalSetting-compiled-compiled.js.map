{"version":3,"sources":["CRUDGlobalSetting-compiled.js"],"names":[],"mappings":"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","file":"CRUDGlobalSetting-compiled-compiled.js","sourcesContent":["/**\r\n * Created by zw on 2016/2/10.\r\n * checkAllSetting:check if all value valid\r\n * setAllSetting: save to redis if all value are valid\r\n * 已经移动到misc中，所以不再需要\r\n */\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar defaultSetting = require('../../../config/global/defaultGlobalSetting').defaultSetting;\n//use redis to save get golbalSetting\nvar redisClient = require('../connection/redis_connection').ioredisClient;\nvar dataTypeCheck = require('../../../assist/misc').func.dataTypeCheck;\nvar redisError = require('../../../define/error/redisError').redisError;\nvar inputValid = require('../../../assist/misc').func.\n/*require('./redis_connections').redisClient1(function(err,result){\r\n    redisClient=result\r\n})*/\n//console.log(typeof dataTypeCheck)\nredisClient.select(1);\n//redisClient.db=1\n//console.log(redisClient)\n\n//var redisClient = require(\"redis\").createClient()\n//var async=require('async')\n//var settingError=require('../../error_define/runtime_node_error').runtime_node_error.setting\n\nvar rightResult = { rc: 0 };\n\n/*redisClient.on('ready',function(){\r\n    console.log(2)\r\n            redisClient.multi().set(\"test1\",202).expire('test1',90)\r\n     .exec(function(err,replies){\r\n         console.log(replies)\r\n\r\n     })\r\n\r\n})*/\n\n//根据defaultGlobalSetting的结构，构造空值，以便使用checkInput时，强制对default值进行检测\nvar constructNull = function constructNull() {\n    var result = {};\n    for (var item in defaultSetting) {\n        result[item] = {};\n        for (var subItem in defaultSetting[item]) {\n            result[item][subItem] = {};\n            result[item][subItem]['value'] = null;\n        }\n    }\n    return result;\n};\n\nvar setDefault = function setDefault() {\n    var emptyValue = constructNull();\n    for (var item in defaultSetting) {\n        //for(let subItem in defaultSetting[item]){\n        var checkResult = inputValid.checkInput(emptyValue[item], defaultSetting[item]);\n\n        for (var subItem in checkResult) {\n            if (checkResult[subItem]['rc'] > 0) {\n                console.log(checkResult);\n                return checkResult;\n            }\n        }\n\n        //}\n    }\n\n    for (var _item in defaultSetting) {\n        //console.log(item)\n        for (var _subItem in defaultSetting[_item]) {\n            //console.log(subItem)\n            //Is object but not an array, then change value to string\n            //for array, change to string automatically\n            var val = defaultSetting[_item][_subItem]['default'];\n            //console.log(`val:${val}`)\n            if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) == 'object' && !dataTypeCheck.isArray(val)) {\n                val = JSON.stringify(val);\n                //console.log(val.toString())\n            }\n            //redisClient.select(1,function(err){\n            redisClient.hset([_item, _subItem, val]);\n            //})\n        }\n    }\n    //})\n};\n\n//直接返回subItem的值\nvar getSingleSetting = function getSingleSetting(item, subItem, cb) {\n    //redisClient.on('ready',function(){\n    redisClient.hexists(item, subItem, function (err, exist) {\n        //console.log(exist)\n        if (1 === exist) {\n            redisClient.hget(item, subItem, function (err, result) {\n                if (err) {\n                    return cb(null, redisError.general.getError);\n                }\n                //redis value are string, check if object(JSON)\n\n                if (0 === result.indexOf('{') && result[result.length - 1] == '}') {\n\n                    result = JSON.parse(result);\n                    //console.log(result)\n                }\n                //array\n                else if (-1 !== result.indexOf(',')) {\n                        result = Array.from(result.split(','));\n                    }\n\n                return cb(null, { rc: 0, msg: result });\n            });\n        } else {\n            return cb(null, redisError.general.keyNotExist);\n        }\n    });\n\n    //})\n};\n\n//获得数据项下所有子项的数据,并构成{item:{subItem1:value1,subItem2;value2}}的格式\nvar getItemSetting = function getItemSetting(item, cb) {\n    var wholeResult = {};\n    //计算item总数，以便确定合适可以返回全部（因为每读一次，都是异步）\n    var totalSubItemNum = 0;\n    //获得数据项下所有子项的数量\n    if (undefined !== defaultSetting[item]) {\n        wholeResult[item] = {};\n        totalSubItemNum += Object.keys(defaultSetting[item]).length;\n        /*        for (let subItem in  defaultSetting[item]){\r\n                    totalSubItemNum++\r\n                }*/\n    } else {\n        return cb(null, { rc: 0, msg: wholeResult });\n    }\n    //console.log(new Date().getTime())\n    //redisClient.on('ready',function(){\n    //console.log(new Date().getTime())\n\n    var _loop = function _loop(subItem) {\n        getSingleSetting(item, subItem, function (err, result) {\n            //console.log(result)\n            if (result.rc && result.rc > 0) {\n                return cb(null, result);\n            }\n            wholeResult[item][subItem] = result.msg;\n            totalSubItemNum--;\n            if (0 === totalSubItemNum) {\n                cb(null, { rc: 0, msg: wholeResult });\n            }\n            //console.log(wholeResult)\n        });\n    };\n\n    for (var subItem in defaultSetting[item]) {\n        _loop(subItem);\n    }\n    //})\n};\nvar getAllSetting = function getAllSetting(cb) {\n    var wholeResult = {};\n    //计算item总数，以便确定合适可以返回全部（因为每读一次，都是异步）\n    var totalSubItemNum = 0;\n    for (var item in defaultSetting) {\n        totalSubItemNum += Object.keys(defaultSetting[item]).length;\n        /*        for (let subItem in  defaultSetting[item]){\r\n                    totalSubItemNum++\r\n                }*/\n    }\n    //console.log(totalSubItemNum)\n    //redisClient.on('ready',function(){\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        var _loop2 = function _loop2() {\n            var item = _step.value;\n\n            if (undefined === wholeResult[item]) {\n                wholeResult[item] = {};\n            }\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                var _loop3 = function _loop3() {\n                    var subItem = _step2.value;\n\n                    getSingleSetting(item, subItem, function (err, result) {\n                        if (result.rc && result.rc > 0) {\n                            return cb(null, result);\n                        }\n                        wholeResult[item][subItem] = result.msg;\n                        totalSubItemNum--;\n                        if (0 === totalSubItemNum) {\n                            cb(null, { rc: 0, msg: wholeResult });\n                        }\n                        //console.log(wholeResult)\n                    });\n                };\n\n                for (var _iterator2 = Object.keys(defaultSetting[item])[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    _loop3();\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        };\n\n        for (var _iterator = Object.keys(defaultSetting)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            _loop2();\n        }\n\n        //})\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n};\n\n//使用通用函数处理\n/*var checkSingleSetting=function(item,subItem,newValue){\r\n    if(!newValue){\r\n        return settingError.emptyGlobalSettingValue\r\n    }\r\n    if(!defaultSetting[item][subItem]){\r\n        return settingError.invalidSettingParam\r\n    }\r\n    //根据类型进行检测，没有type定义，直接pass\r\n    if(defaultSetting[item][subItem][type]){\r\n        switch (defaultSetting[item][subItem][type]){\r\n            case 'int':\r\n                if(false===miscFunc.isInt(newValue)){\r\n                    return settingError.settingValueNotInt\r\n                }\r\n                if(defaultSetting[item][subItem][max]){\r\n                    let newValueInt=parseInt(newValue)\r\n                    if(newValueInt>defaultSetting[item][subItem][max]){\r\n                        return settingError.settingValueExceedMaxInt\r\n                    }\r\n                    //最小值检查包含在最大值检查中\r\n                    // 最小值没有定义，默认是0\r\n                    let definedMinValue=0\r\n                    if(defaultSetting[item][subItem][min]){\r\n                        definedMinValue=parseInt(defaultSetting[item][subItem][min])\r\n                    }\r\n                    if(newValueInt<definedMinValue){\r\n                        return settingError.settingValueExceedMinInt\r\n                    }\r\n                }\r\n                break;\r\n            case 'path':\r\n                if(false===miscFunc.isFolder(newValue)){\r\n                    return settingError.settingValuePathNotExist\r\n                }\r\n                if(defaultSetting[item][subItem][maxLength]){\r\n                    let definedMaxLength=defaultSetting[item][subItem][maxLength]\r\n                    if(newValue.length>definedMaxLength){\r\n                        return defaultSetting[item][subItem][client][maxLength]\r\n                    }\r\n                    //check min\r\n                    let definedMinLength=0\r\n                    if(defaultSetting[item][subItem][minLength]){\r\n                        definedMinLength=defaultSetting[item][subItem][minLength]\r\n                    }\r\n                    if(newValue.length<definedMinLength){\r\n                        return defaultSetting[item][subItem][client][minLength]\r\n                    }\r\n                }\r\n                break;\r\n            case 'file':\r\n                if(false===miscFunc.isFile(newValue)){\r\n                    return settingError.settingValueFileNotExist\r\n                }\r\n                if(defaultSetting[item][subItem][maxLength]){\r\n                    let definedMaxLength=defaultSetting[item][subItem][maxLength]\r\n                    if(newValue.length>definedMaxLength){\r\n                        return defaultSetting[item][subItem][client][maxLength]\r\n                    }\r\n                    //check min\r\n                    let definedMinLength=0\r\n                    if(defaultSetting[item][subItem][minLength]){\r\n                        definedMinLength=defaultSetting[item][subItem][minLength]\r\n                    }\r\n                    if(newValue.length<definedMinLength){\r\n                        return defaultSetting[item][subItem][client][minLength]\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return rightResult\r\n}\r\nvar checkAllSetting=function(valueObj){\r\n    for(let item of Object.keys(defaultSetting)) {\r\n        for (let subItem of  Object.keys(defaultSetting[item])) {\r\n            let checkResult=checkSingleSetting(item,subItem,valueObj[item][subItem])\r\n            if(checkResult.rc!==0){\r\n                return checkResult\r\n            }\r\n        }\r\n    }\r\n    return rightResult\r\n}*/\n\nvar setSingleSetting = function setSingleSetting(item, subItem, newValue) {\n    //redisClient.on('ready',function(){\n    if ((typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) == 'object' && !dataTypeCheck.isArray(newValue)) {\n        newValue = JSON.stringify(newValue);\n    }\n    //console.log(item+subItem+newValue)\n    redisClient.hset([item, subItem, newValue]);\n    //})\n};\n//setAllSetting不能代替setDefault，因为setAllSetting读取的是{item1:{subItem1:{value:val1}}（和普通的input结构一致）,而setDefault读取的是{item1:{subItem1:{default:val1,type:'int',max:'',client:{}}}}\nvar setAllSetting = function setAllSetting(newValueObj) {\n    //redisClient.on('ready',function() {\n    /*        let checkResult=inputValid.checkInput(newValueObj,defaultSetting)\r\n            if(checkResult.rc>0){\r\n                return checkResult\r\n            }*/\n    //读取固定键\n    //console.log(newValueObj)\n    for (var item in newValueObj) {\n        for (var _subItem2 in newValueObj[item]) {\n            var newValue = newValueObj[item][_subItem2];\n            /*                if (!newValueObj[item][subItem]) {\r\n                                newValue = newValueObj[item][subItem]\r\n                            }*/\n            //判断是否对象\n            if ((typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) == 'object' && !dataTypeCheck.isArray(newValue)) {\n                newValue = JSON.stringify(newValue);\n            }\n            setSingleSetting(item, _subItem2, newValue);\n        }\n    }\n    //})\n};\n//redisClient.on('ready',function(){\n//    setDefault(defaultSetting)\n//    getAllSetting(function(err,result){\n//        console.log(result['attachment']['validSuffix'])\n//    })\n//})\n\n//set\n\nexports.CRUDGlobalSetting = {\n    setDefault: setDefault,\n    getSingleSetting: getSingleSetting,\n    constructNull: constructNull,\n    getItemSetting: getItemSetting, //用来获得当个item下所有数据\n    getAllSetting: getAllSetting,\n    setAllSetting: setAllSetting\n};\n\n//constructNull()\n//setDefault()\n//getSingleSetting()\n/*\r\nvar fs=require('fs')\r\ngetAllSetting(function(err,result){\r\n    console.log(result.msg)\r\n    fs.w\r\n})*/\n\n//# sourceMappingURL=CRUDGlobalSetting-compiled.js.map"]}