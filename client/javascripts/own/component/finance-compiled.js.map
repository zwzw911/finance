{"version":3,"sources":["finance.js"],"names":[],"mappings":"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","file":"finance-compiled.js","sourcesContent":["/**\r\n * Created by ada on 2016/9/15.\r\n */\r\n'use strict'\r\nvar app=angular.module('finance',['component']);\r\n\r\napp.factory('financeHelper',function($http,$q,inputAttrHelper,commonHelper,modal){\r\n/*    //根据inputAttr的内容，生成合适的values，以便server处理\r\n    var generateInputValue=function(inputAttr){\r\n        let values={}\r\n        for(let key in inputAttr){\r\n            if(inputAttr[key] && inputAttr[key]['value']){\r\n                values[key]={}\r\n                values[key]['value']=inputAttr[key]['value']\r\n            }\r\n        }\r\n        return values\r\n    }*/\r\n    modal.setModalId('modalCommon')\r\n\r\n\r\n    var dataOperator=\r\n    {\r\n        //billType: {\r\n        //idx无用，只是为了统一使用参数(create和update同样在modal上操作，使用同一个按钮)\r\n        'create': function (idx, inputAttr, recorder, selectAC, fkConfig, eColl, aDateToBeConvert) {\r\n            //首先加入db（加入db时，angular已经执行过value的检测，因此无需再次执行inputCheck）\r\n            //从inputAttr提取数据，转换成{field1:{value1:xxx},field2:{value2:yyy}}\r\n            let value = inputAttrHelper.convertedInputAttrFormatCreate(inputAttr)\r\n            //转换外键的格式\r\n            for (let singleFKField in fkConfig) {\r\n                inputAttrHelper.convertSingleACFormat(singleFKField, selectAC, value)\r\n            }\r\n            let url = '/' + eColl\r\n            $http.post(url, {values: value}).success(function (data, status, header, config) {\r\n                if (0 === data.rc) {\r\n                    //对server返回的数据中的日期进行格式化\r\n                    //只返回一个数据，而不是数组，所以只要判断是否null\r\n                    if (null !== data.msg) {\r\n                        commonHelper.convertDateTime(data.msg, aDateToBeConvert)\r\n                        //检查外键是否存在，存在的话，将外键object转换成字符\r\n                        console.log(`before FK format result ${JSON.stringify(data.msg)}`)\r\n                        //需要删除nestedPrefix字段\r\n                        for (let singleFKField in fkConfig) {\r\n                            let nestedPrefix = fkConfig[singleFKField]['nestedPrefix']\r\n                            delete data.msg[nestedPrefix]\r\n                        }\r\n                        /*                            for(let singleFKField in fkConfig){\r\n                         let aRedundancyFields=fkConfig[singleFKField]['fields']\r\n                         //每个fk可能对应多个冗余field\r\n                         for(let singleField of aRedundancyFields){\r\n                         if(data.msg[singleFKField] && data.msg[singleFKField][singleField]){\r\n                         if(undefined===data.msg[singleFKField]){\r\n                         data.msg[singleFKField]={}\r\n                         }\r\n                         data.msg[singleFKField]=data.msg[singleFKField][singleField]\r\n                         }\r\n                         }\r\n                         }*/\r\n\r\n                        console.log(`after FK format result ${JSON.stringify(data.msg)}`)\r\n                        recorder.push(data.msg)\r\n                        modal.showInfoMsg('记录添加成功')\r\n                    }\r\n\r\n                    //console.log(`date format result ${JSON.stringify(returnResult.msg)}`)\r\n                } else {\r\n                    modal.showErrMsg(JSON.stringify(data.msg))\r\n                }\r\n            }).error(function () {\r\n                console.log('err')\r\n            })\r\n            //然后加入client数据，防止多次返回\r\n            //_angularDataOp.create(idx,inputAttr,recorder)\r\n        },\r\n        'delete': function (idx, recorder, eColl) {\r\n            //首先更新数据到db\r\n            //设置要发送的数据（objId）\r\n            //let value={}\r\n            //value['_id']=recorder[idx]['_id']\r\n            //console.log(`construct delete values is ${JSON.stringify(value)}`)\r\n            let url = '/' + eColl + '/' + recorder[idx]['_id']\r\n            $http.delete(url, {}).success(function (data, status, header, config) {\r\n                if (0 === data.rc) {\r\n                    recorder.splice(idx, 1)\r\n                } else {\r\n                    modal.showErrMsg(data.msg)\r\n                }\r\n            }).error(function (data, status, header, config) {\r\n\r\n            })\r\n            //然后更新client端数据\r\n            //_angularDataOp.delete(idx, recorder)\r\n        },\r\n        'update': function (idx, inputAttr, recorder, selectAC, fkConfig, eColl, aDateToBeConvert) {\r\n            //首先更新数据到db（更新db时，angular已经执行过value的检测，因此无需再次执行inputCheck）\r\n            //将修改过的值上传修改\r\n            let value = inputAttrHelper.convertedInputAttrFormatCreate(inputAttr)\r\n\r\n            //将外键的id转换成server可以接收的格式\r\n            for (let singleFKField in fkConfig) {\r\n                inputAttrHelper.convertSingleACFormat(singleFKField, selectAC, value)\r\n            }\r\n\r\n            console.log(`value 1 is ${JSON.stringify(value)}`)\r\n            //添加要更新记录的_id。必须使用_id（server只认识_id）\r\n            console.log(`idx is ${idx},recorder is ${JSON.stringify(recorder[idx])}`)\r\n            value['_id'] = {value: recorder[idx]['_id']}\r\n            console.log(`value 2 is ${JSON.stringify(value)}`)\r\n            //Object.assign(value,selectAC)\r\n            let url = '/' + eColl\r\n            $http.put(url, {values: value}).success(function (data, status, header, config) {\r\n                if (0 === data.rc) {\r\n                    //对server返回的数据中的日期进行格式化\r\n                    //console.log(`before date format result ${JSON.stringify(returnResult.msg)}`)\r\n                    commonHelper.convertDateTime(data.msg, aDateToBeConvert)\r\n                    //需要删除nestedPrefix字段\r\n                    for (let singleFKField in fkConfig) {\r\n                        let nestedPrefix = fkConfig[singleFKField]['nestedPrefix']\r\n                        delete data.msg[nestedPrefix]\r\n                    }\r\n                    /*                        // 外键用name/title替换（不显示ObjectId）\r\n                     for(let singleFKField in fkConfig){\r\n                     let aRedundancyFields=fkConfig[singleFKField]['fields']\r\n                     //每个fk可能对应多个冗余field\r\n                     for(let singleField of aRedundancyFields){\r\n                     if(data.msg[singleFKField] && data.msg[singleFKField][singleField]){\r\n                     if(undefined===data.msg[singleFKField]){\r\n                     data.msg[singleFKField]=data.msg[singleFKField][singleField]\r\n                     }\r\n                     }\r\n                     }\r\n                     }*/\r\n                    /*                        if(data.msg.parentBillType && data.msg.parentBillType.name){\r\n                     data.msg.parentBillType=data.msg.parentBillType.name\r\n                     }*/\r\n                    for (let singleField in data.msg) {\r\n                        recorder[idx][singleField] = data.msg[singleField]\r\n                    }\r\n                    //console.log(`date format result ${JSON.stringify(returnResult.msg)}`)\r\n                } else {\r\n                    modal.showErrMsg(JSON.stringify(data.msg))\r\n                }\r\n            }).error(function () {\r\n                console.log('err')\r\n            })\r\n        },\r\n        //read合并到serach中\r\n       /* 'read': function (recorder, fkConfig, eColl, aDateToBeConvert) {\r\n            let url = '/' + eColl\r\n            $http.get(url, {}).success(function (data, status, header, config) {\r\n                if (0 === data.rc) {\r\n                    //对server返回的数据中的日期进行格式化\r\n                    //console.log(`read result is ${JSON.stringify(data.msg)}`)\r\n                    recorder.splice(0, recorder.length)   //清空数组\r\n                    data.msg.forEach(function (e) {\r\n                        commonHelper.convertDateTime(e, aDateToBeConvert)\r\n                        //需要删除nestedPrefix字段\r\n                        for (let singleFKField in fkConfig) {\r\n                            let nestedPrefix = fkConfig[singleFKField]['nestedPrefix']\r\n                            delete data.msg[nestedPrefix]\r\n                        }\r\n                        /!*                            if(e.parentBillType && e.parentBillType.name){\r\n                         console.log('in')\r\n                         e.parentBillType=e.parentBillType.name\r\n                         }*!/\r\n                        recorder.push(e)\r\n                    })\r\n                    // recorder=data.msg\r\n                    //console.log(`date format result ${JSON.stringify(returnResult.msg)}`)\r\n                } else {\r\n                    modal.showErrMsg(JSON.stringify(data.msg))\r\n                }\r\n            }).error(function () {\r\n                console.log('err')\r\n            })\r\n        },*/\r\n        'readName': function (name, eColl) {\r\n            let url = '/' + eColl + '/name/'\r\n            return $http.post(url, {values: name}, {})\r\n        },\r\n        'search': function (recorder, queryValue, fkConfig, eColl, aDateToBeConvert,pagination) {\r\n\r\n            let url = '/' + eColl + \"/\" + \"search\"\r\n            $http.post(url, {values: queryValue}).success(function (data, status, header, config) {\r\n                if (0 === data.rc) {\r\n                    //对server返回的数据中的日期进行格式化\r\n                    //console.log(`read result is ${JSON.stringify(data.msg)}`)\r\n\r\n                    recorder.splice(0, recorder.length)   //清空数组\r\n                    //console.log(`after empty array is ${JSON.stringify(recorder)}`)\r\n                    data.msg['recorder'].forEach(function (e) {\r\n                        commonHelper.convertDateTime(e, aDateToBeConvert)\r\n                        //需要删除nestedPrefix字段\r\n                        for (let singleFKField in fkConfig) {\r\n                            let nestedPrefix = fkConfig[singleFKField]['nestedPrefix']\r\n                            delete data.msg[nestedPrefix]\r\n                        }\r\n                        /*                            if(e.parentBillType && e.parentBillType.name){\r\n                         console.log('in')\r\n                         e.parentBillType=e.parentBillType.name\r\n                         }*/\r\n                        recorder.push(e)\r\n                    })\r\n                    console.log(`after push array is ${JSON.stringify(recorder)}`)\r\n\r\n                    pagination.paginationInfo=data.msg['paginationInfo']\r\n\r\n                    if(null===pagination.pageRange){\r\n                        pagination.pageRange=[]\r\n                    }\r\n                    if(null!==pagination.pageRange){\r\n                        pagination.pageRange.splice(0, pagination.pageRange.length)\r\n                    }\r\n                    for(let i=pagination.paginationInfo.start;i<=pagination.paginationInfo.end;i++){\r\n                        let ele={}\r\n                        ele['pageNo']=i\r\n                        ele['active']=false\r\n                        if(i===pagination.paginationInfo.currentPage){\r\n                            ele['active']=true\r\n                        }\r\n\r\n                        pagination.pageRange.push(ele)\r\n                    }\r\n                    //console.log(`generate page range is ${JSON.stringify(pagination.pageRange)}`)\r\n                    // recorder=data.msg\r\n                    console.log(`page info is ${JSON.stringify(pagination)}`)\r\n                } else {\r\n                    modal.showErrMsg(JSON.stringify(data.msg))\r\n                }\r\n            }).error(function () {\r\n                console.log('err')\r\n            })\r\n        },\r\n    }\r\n\r\n    return {\r\n        dataOperator,\r\n        //suggest_state\r\n    }\r\n})"]}