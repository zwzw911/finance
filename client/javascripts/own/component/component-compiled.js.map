{"version":3,"sources":["component.js"],"names":[],"mappings":"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","file":"component-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-08-18.\r\n * 通用函数（可供finance调用）\r\n */\r\n    'use strict'\r\nvar app=angular.module('component',['angularMoment']);\r\n\r\n//common的程序\r\napp.factory('validateHelper',function(){\r\n    var dataTypeCheck=\r\n        {\r\n            isArray(obj) {\r\n                return obj && typeof obj === 'object' &&\r\n                Array == obj.constructor;\r\n            },\r\n            isNumber: function (value) {\r\n                return isNaN(parseFloat(value))\r\n            },\r\n            isString(value){\r\n                return typeof value === 'string'\r\n            },\r\n            isDate(date) {\r\n                let parsedDate=new Date(date)\r\n                if(parsedDate.toLocaleString() ===  'Invalid Date'){\r\n                    return false\r\n                }\r\n                return parsedDate;\r\n                //}\r\n            },\r\n            isPositive(value) {\r\n                let parsedValue = parseFloat(value)\r\n                /*        if(isNaN(parsedValue)){\r\n                 return false\r\n                 }*/\r\n                return parsedValue > 0\r\n            },\r\n        }\r\n\r\n        var ruleTypeCheck=\r\n            {\r\n                inputValueTypeCheck(value){\r\n                    if(false===dataTypeCheck.isArray(value)  && false===dataTypeCheck.isNumber(value) && dataTypeCheck.isString(value) ){\r\n                        return false\r\n                    }else{\r\n                        return true\r\n                    }\r\n                },\r\n                exceedMaxLength(value, maxLength) {\r\n                    //length属性只能在数字/字符/数组上执行\r\n                    if(false==this.inputValueTypeCheck(value)){\r\n                        // console.log(false)\r\n                        return false\r\n                    }\r\n                    //client都是字符\r\n                    // console.log(value.length)\r\n                    return value.length > maxLength\r\n                },\r\n\r\n                exceedMinLength(value, minLength) {\r\n                    if(false==this.inputValueTypeCheck(value)){\r\n                        return false\r\n                    }\r\n                    //client都是字符\r\n                    return value.length < minLength\r\n                },\r\n                exactLength(value, exactLength) {\r\n                    if(false==this.inputValueTypeCheck(value)){\r\n                        return false\r\n                    }\r\n                    //client都是字符\r\n                    return value.length === exactLength\r\n                },\r\n                exceedMax(value, definedValue) {\r\n                    return parseFloat(value) > parseFloat(definedValue)\r\n                },\r\n                exceedMin(value, definedValue) {\r\n                    return parseFloat(value) < parseFloat(definedValue)\r\n                },\r\n            }\r\n\r\n    //检查input value（对单个field进行检查，因为此函数在每个input发生blur就要调用）\r\n    // inputRule/inputAttr是coll级别\r\n    function checkInput(field,inputRule,inputAttr){\r\n        //id不需要检测\r\n        if('id'===field){\r\n            return true\r\n        }\r\n        var requireFlag=inputRule[field]['require']['define']\r\n        var currentValue=inputAttr[field]['value']\r\n        if(undefined===requireFlag){\r\n            requireFlag=false\r\n        }\r\n\r\n        if(''===currentValue){\r\n            if(false===requireFlag){\r\n                inputAttr[field]['validated']=true\r\n                return true\r\n            }\r\n            if(true===requireFlag){\r\n                inputAttr[field]['validated']=false\r\n                inputAttr[field]['errorMsg']=inputRule[field]['require']['msg']\r\n                return false\r\n            }\r\n        }\r\n\r\n        //input不空，检查当前字段除了require之外的其他所有rule\r\n        if(''!==currentValue){\r\n            for(let singleRule in inputRule[field]){\r\n                let ruleCheckFunc\r\n                if('require'===singleRule){\r\n                    continue\r\n                }\r\n                switch (singleRule){\r\n                    case 'max':\r\n                        ruleCheckFunc='exceedMax'\r\n                        break;\r\n                    case 'min':\r\n                        ruleCheckFunc='exceedMin'\r\n                        break;\r\n                    case 'maxLength':\r\n                        ruleCheckFunc='exceedMaxLength'\r\n                        break;\r\n                    case 'minLength':\r\n                        ruleCheckFunc='exceedMinLength'\r\n                        break;\r\n                }\r\n\r\n                if(true===ruleTypeCheck[ruleCheckFunc](currentValue,inputRule[field][singleRule]['define'])){\r\n                    inputAttr[field]['errorMsg']=inputRule[field][singleRule]['msg']\r\n                    inputAttr[field]['validated']=false\r\n                    return false\r\n                }else{\r\n                    inputAttr[field]['errorMsg']=\"\"\r\n                    inputAttr[field]['validated']=true\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    //对所有的input进行检测\r\n    function allCheckInput(inputRule,inputAttr){\r\n        // console.log(`input attr is ${JSON.stringify(inputAttr)}`)\r\n        // console.log('check input in')\r\n        let tmpResult\r\n        for(let singleField in inputAttr){\r\n            tmpResult=checkInput(singleField,inputRule,inputAttr)\r\n            // console.log(`single filed ${singleField} check result is ${tmpResult}`)\r\n            if(false===tmpResult){\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    return {dataTypeCheck,ruleTypeCheck,checkInput,allCheckInput}\r\n})\r\n\r\napp.factory('htmlHelper',function(validateHelper){\r\n    return {\r\n        /*\r\n        * leftOffset:覆盖元素的left和当前元素left 之间的offset。可正可负。\r\n        * topOffset：覆盖元素的top和当前元素top 之间的offset。可正可负。\r\n        * widthOffset：覆盖元素的width和当前元素width 之间的offset。可正可负。\r\n        * heightOffset：覆盖元素的height和当前元素height 之间的offset。可正可负。\r\n        * */\r\n        setCoverEle:function(currentEleId,coveringEleId,offset={leftOffset:0,topOffset:0,widthOffset:0,heightOffset:0}){\r\n            let errorMsg={\r\n                eleNotExist:function(eleId){\r\n                    return {rc:1,msg: `元素$(eleId)不存在`}\r\n                },\r\n                paramNotNumber:function(eleId){\r\n                    return {rc:2,msg: `元素$(eleId)不是数值`}\r\n                },\r\n            }\r\n\r\n            //1. 检测输入参数\r\n            let currentEle=document.getElementById(currentEleId)\r\n            if(undefined===currentEle){\r\n                return  errorMsg.eleNotExist(currentEleId)\r\n            }\r\n            let coveringEle=document.getElementById(coveringEleId)\r\n            if(undefined===coveringEle){\r\n                return  errorMsg.eleNotExist(coveringEleId)\r\n            }\r\n\r\n            for(let key in offset){\r\n                if(validateHelper.dataTypeCheck.isNumber(offset[key])){return errorMsg.paramNotNumber(key)}\r\n            }\r\n\r\n            //设置覆盖元素的参数\r\n            coveringEle.style.position='absolute'\r\n            coveringEle.style.left=currentEle.offsetLeft+offset.leftOffset+'px'\r\n            coveringEle.style.top=currentEle.offsetTop+offset.topOffset+'px'\r\n            coveringEle.style.width=currentEle.offsetWidth+offset.widthOffset+'px'\r\n            coveringEle.style.height=currentEle.offsetHeight+offset.heightOffset+'px'\r\n        },\r\n\r\n        /*\r\n        * 说明：根据页面的内容设置footer的位置，使之一直位于页面最下方\r\n        *       如果页面内容（html内容）小于浏览器视口（不包含工具栏），给footer添加fixed-footer，使得footer位于最下方\r\n        *       否则移除fixed-footer(因为此时footer已经在最下方)\r\n        * */\r\n        adjustFooterPosition:function(){\r\n            var contentHeight = document.body.scrollHeight,//网页正文全文高度\r\n                winHeight = window.innerHeight;//可视窗口高度，不包括浏览器顶部工具栏\r\n/*console.log(contentHeight)\r\n            console.log(winHeight)*/\r\n            if(!(contentHeight > winHeight)){\r\n                //当网页正文高度小于可视窗口高度时，为footer添加类fixed-bottom\r\n                //console.log('add')\r\n                $(\"footer\").addClass(\"fixed-footer\");\r\n            } else {\r\n                //console.log('remove')\r\n                $(\"footer\").removeClass(\"fixed-footer\");\r\n            }\r\n\r\n        },\r\n\r\n\r\n\r\n        /*\r\n        *   说明： bootstrap提供的modal-dialog只能水平居中，本函数用作垂直居中\r\n        *   窗口位置大小变化时，重新设置modal的top\r\n        *   因为modal在隐藏时，无法计算得到height（试图通过在载入页面时，先瞬时显示在隐藏modal的方法，来获得height，但是失败），所以直接在元素填入height属性，供js提取使用\r\n        */\r\n        verticalModalCenter:function(dialogId){\r\n            var dialog=document.getElementById(dialogId)\r\n            //因为此函数可能在整个window上监听onsize，所以需要判断modal是否存在，不存在直接退出\r\n            if(null===dialog){\r\n                return false\r\n            }\r\n            var windowHeight=$(window).height()\r\n            //var dialogHeight=dialog.offsetHeight\r\n            //console.log(dialog.offsetHeight)\r\n            var dialogHeight=dialog.style.height.replace('px','')\r\n\r\n            //60是botstrap中为diaglog定义的上下margin，略微上移，符合人类审美\r\n            var top=((windowHeight-dialogHeight)/2)-60\r\n            if(top<0){\r\n                top=0\r\n            }\r\n\r\n            dialog.style.top=top+'px'\r\n\r\n        },\r\n\r\n\r\n    }\r\n})\r\n\r\n\r\napp.factory('financeHelper',function(contEnum) {\r\n    //var allFunc={}\r\n    //allFunc={\r\n    //传入字段，以及对应的value，那么从activateQueryFieldAndValue删除对应的value，如果filed中对应的value为0，则同时删除field\r\n    function deleteQueryValue(field, value, activateQueryFieldAndValue) {\r\n        for (var i = 0; i < activateQueryFieldAndValue[field].length; i++) {\r\n            if (value === activateQueryFieldAndValue[field][i]) {\r\n                activateQueryFieldAndValue[field].splice(i, 1)\r\n                break\r\n            }\r\n        }\r\n        if (0 === activateQueryFieldAndValue[field].length) {\r\n            delete activateQueryFieldAndValue[field]\r\n        }\r\n    }\r\n\r\n    //将选择的field和value键入数组（以便在client显示，而不能直接转换成server端的格式）\r\n    //{name:['a','b'],parentBillType:['c','d']}\r\n    function addQueryValue(field, value, fkConfig,activateQueryFieldAndValue) {\r\n        // console.log(`field is ${field},value is ${JSON.stringify(value)}, activated value is ${activateQueryFieldAndValue}`)\r\n        // if(undefined===activateQueryFieldAndValue){\r\n        //     console.log(`in to init activea vlauy`)\r\n        //     activateQueryFieldAndValue={}\r\n        // }\r\n        console.log(`field is ${JSON.stringify(field)}`)\r\n        console.log(`field is ${JSON.stringify(value)}`)\r\n\r\n/*        let eleValue={'value':value}\r\n        //是外键，需要找到对应的冗余字段\r\n        if(true=== field in fkConfig){\r\n            let redundancyField=fkConfig[field]['fields'][0] //当前冗余字段虽然是数组，但是其实只有一个元素\r\n            if (undefined === activateQueryFieldAndValue[field]) {\r\n                activateQueryFieldAndValue[field] = {}  //外键为object，内置冗余字段\r\n            }\r\n            if (undefined === activateQueryFieldAndValue[field][redundancyField]) {\r\n                activateQueryFieldAndValue[field][redundancyField] = []\r\n            }\r\n            activateQueryFieldAndValue[field][redundancyField].push(eleValue)\r\n        }else{\r\n            if (undefined === activateQueryFieldAndValue[field]) {\r\n                activateQueryFieldAndValue[field] = []  //非外键直接数组，内置查询参数\r\n            }\r\n            activateQueryFieldAndValue[field].push(eleValue)\r\n        }*/\r\n\r\n        if (undefined === activateQueryFieldAndValue[field]) {\r\n            activateQueryFieldAndValue[field] = []\r\n        }\r\n        //如果是select传递过来的值\r\n        if (value.key) {\r\n            activateQueryFieldAndValue[field].push(value.key)\r\n        } else {\r\n            activateQueryFieldAndValue[field].push(value)\r\n        }\r\n\r\n    }\r\n\r\n    //将选中的field和value加入到allData.activeQueryValue（直接转换成server端能处理的格式）\r\n    // {\"values\":{\"name\":[{\"value\":\"{{billtype_name_1}}\"}],\"parentBillType\":{\"name\":[{\"value\":\"{{billtype_name_2}}\"}]}}}\r\n    //不能直接转换，因为AddQueryValue里的内容要在页面上显示\r\n    function convertAddQueryValueToServerFormat(activateQueryFieldAndValue,fkConfig){\r\n        let formattedValue={}\r\n        for(let fieldName in activateQueryFieldAndValue){\r\n            let aValue //应用需要加入值的数组（外键和非外键的结构不一致）\r\n            //1. 创建必要的结构\r\n            //如果是外键\r\n            if(true===fieldName in fkConfig){\r\n                if(undefined===formattedValue[fieldName]){\r\n                    formattedValue[fieldName]={}\r\n                }\r\n                let redundancyField=fkConfig[fieldName]['fields'][0]//当前冗余字段虽然是数组，但是其实只有一个元素\r\n                if(undefined===formattedValue[fieldName][redundancyField]){\r\n                    formattedValue[fieldName][redundancyField]=[]\r\n                }\r\n                aValue=formattedValue[fieldName][redundancyField]\r\n            }else{\r\n                if(undefined===formattedValue[fieldName]){\r\n                    formattedValue[fieldName]=[]    //非外键直接数组\r\n                }\r\n                aValue=formattedValue[fieldName]\r\n            }\r\n\r\n            for(let singleValue of activateQueryFieldAndValue[fieldName]){\r\n                let newValue={value:singleValue}\r\n                aValue.push(newValue)\r\n            }\r\n\r\n        }\r\n        return formattedValue\r\n    }\r\n    return {deleteQueryValue,addQueryValue,convertAddQueryValueToServerFormat}\r\n})\r\n\r\napp.factory('inputAttrHelper',function(contEnum) {\r\n    //对某个input设置errorMsg（errorMsg隐式设置input样式）\r\n    function setSingleInputAttrErrorMsg(field,inputAttr,errMsg){\r\n        inputAttr[field]['errorMsg']=errMsg\r\n        inputAttr[field]['validated']=false\r\n    }\r\n    //对inputAttr中的一个字段进行初始化\r\n    function initSingleFieldInputAttrCreate(field,inputAttr){\r\n        // console.log(opType)\r\n        // if(contEnum.opType.create===opType){\r\n            inputAttr[field]['value']=''\r\n        // }\r\n        inputAttr[field]['originalValue']=''\r\n        inputAttr[field]['validated']='undefined'\r\n        inputAttr[field]['errorMsg']=''\r\n    }\r\n    //对一个inputAttr中所有field进行初始化\r\n    function initAllFieldInputAttrCreate(inputAttr){\r\n        // console.log(inputAttr)\r\n        for(let singleField in inputAttr){\r\n            // console.log(singleField)\r\n            initSingleFieldInputAttrCreate(singleField,inputAttr)\r\n        }\r\n        // console.log(inputAttr)\r\n    }\r\n\r\n    function initSingleFieldInputAttrUpdate(field,inputAttr){\r\n        // console.log(opType)\r\n        // if(contEnum.opType.create===opType){\r\n        //     inputAttr[field]['value']=''\r\n        // }\r\n        inputAttr[field]['originalValue']=''\r\n        inputAttr[field]['validated']='undefined'\r\n        inputAttr[field]['errorMsg']=''\r\n    }\r\n    //对一个inputAttr中所有field进行初始化\r\n    function initAllFieldInputAttrUpdate(inputAttr){\r\n        // console.log(inputAttr)\r\n        for(let singleField in inputAttr){\r\n            // console.log(singleField)\r\n            initSingleFieldInputAttrUpdate(singleField,inputAttr)\r\n        }\r\n        // console.log(inputAttr)\r\n    }\r\n    //是否所有的input检测都通过了（或者无需）\r\n    function allInputValidCheck(inputAttr){\r\n        for(let field in inputAttr){\r\n            if(false===inputAttr[field]['validated']){\r\n                // console.log(inputAttr[field])\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    //将当前的记录载入到inputAttr\r\n    function loadCurrentData(idx,inputAttr,recorder){\r\n        for(var field in inputAttr){\r\n            if(undefined===recorder[idx][field] || null===recorder[idx][field]){\r\n                inputAttr[field]['value']=''\r\n                inputAttr[field]['originalValue']='' //用来比较是不是做了修改\r\n            }else{\r\n                inputAttr[field]['value']=recorder[idx][field]\r\n                inputAttr[field]['originalValue']=recorder[idx][field] //用来比较是不是做了修改\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //为未在inputRule中定义的字段，在inputAttr中产生对应的field，以便显示在页面\r\n    //举例，创建或者修改记录时，其中的cDate/uDate，是server自动产生，而无需client输入，但是可能需要显示在页面，此时，需要添加到inputAttr\r\n    //记录到inputAttr是，只需value一个key，无需type，因为只是显示，不会修改（只在server修改）\r\n    function generateAdditionalFieldIntoInputAttr(recorder,inputAttr){\r\n        for(var singleFieldName in recorder){\r\n            if(undefined===inputAttr[singleFieldName]){\r\n                inputAttr[singleFieldName]={}\r\n                inputAttr[singleFieldName]['value']=recorder[singleFieldName] //只需value一个key，无需type，因为只是显示，不会修改（只在server修改）\r\n            }\r\n        }\r\n    }\r\n\r\n    //将inputAttr的value转换成values:{f1:{value:1},f2:{value:2}}的格式，以便在传递到server\r\n//如果无值，则设成null，server会自动进行处理\r\n    function convertedInputAttrFormatCreate(inputAttrs){\r\n        var value={}\r\n        for(var singleInputAttr in inputAttrs){\r\n            value[singleInputAttr]={}\r\n            //console.log(`current field is ${singleInputAttr}`)\r\n            //console.log(`current field value is ${JSON.stringify(inputAttrs[singleInputAttr]) }`)\r\n            if(undefined!==inputAttrs[singleInputAttr]['value'] &&  null!==inputAttrs[singleInputAttr]['value'] && ''!==inputAttrs[singleInputAttr]['value']){\r\n                value[singleInputAttr]['value']=inputAttrs[singleInputAttr]['value']\r\n            }else{\r\n                value[singleInputAttr]['value']=null\r\n            }\r\n        }\r\n        return value\r\n    }\r\n\r\n\r\n    //只有value和originalValue的值不同，才会将value发送到server\r\n    function convertedInputAttrFormatUpdate(inputAttrs){\r\n        var value={}\r\n        for(var singleInputAttr in inputAttrs){\r\n            value[singleInputAttr]={}\r\n            //console.log(`current field is ${singleInputAttr}`)\r\n            //console.log(`current field value is ${JSON.stringify(inputAttrs[singleInputAttr]) }`)\r\n            if(inputAttr[singleInputAttr]['value']!==inputAttr[singleInputAttr]['originalValue']){\r\n                if(undefined!==inputAttrs[singleInputAttr]['value'] &&  null!==inputAttrs[singleInputAttr]['value'] && ''!==inputAttrs[singleInputAttr]['value']){\r\n                    value[singleInputAttr]['value']=inputAttrs[singleInputAttr]['value']\r\n                }else{\r\n                    value[singleInputAttr]['value']=null\r\n                }\r\n            }\r\n        }\r\n        return value\r\n    }\r\n\r\n    //acObj:客户端获得的autoComplete的选中值；values：将要发送到server的数据\r\n    //acObj {parentBillType:{value:'xxx','_id':null}====>values  {parentBillType:{value:'_id'}}\r\n    function convertSingleACFormat(acField,acObj,values){\r\n        // for(let key in acObj){\r\n        if(undefined!==acObj && null!==acObj){\r\n            values[acField]={value:null}\r\n            if(undefined!==acObj[acField]['_id'] || null!==acObj[acField]['_id']){\r\n                values[acField]['value']=acObj[acField]['_id']\r\n            }\r\n        }\r\n\r\n        // }\r\n    }\r\n\r\n    //对于create，如果是null的话，说明没有设置\r\n    function initSingleAcFieldForCreate(acField,acObj){\r\n        if(undefined===acObj[acField] || null===acObj[acField]){\r\n            acObj[acField]={}\r\n        }\r\n        acObj[acField]['value']=''\r\n        acObj[acField]['_id']=null\r\n    }\r\n\r\n    //对于update，如果_id是-1的话，说明没有设置（null代表要删除此字段）\r\n    function initSingleAcFieldForUpdate(acField,acObj){\r\n        if(undefined===acObj[acField] || null===acObj[acField]){\r\n            acObj[acField]={}\r\n        }\r\n        acObj[acField]['value']=''\r\n        acObj[acField]['_id']=-1\r\n    }\r\n    return {\r\n        setSingleInputAttrErrorMsg,\r\n        initSingleFieldInputAttrCreate,\r\n        initAllFieldInputAttrCreate,\r\n        initSingleFieldInputAttrUpdate,\r\n        initAllFieldInputAttrUpdate,\r\n        allInputValidCheck,\r\n        loadCurrentData,\r\n        generateAdditionalFieldIntoInputAttr,\r\n        convertedInputAttrFormatCreate,\r\n        convertedInputAttrFormatUpdate,\r\n        convertSingleACFormat,\r\n        initSingleAcFieldForCreate,\r\n        initSingleAcFieldForUpdate,\r\n    }\r\n})\r\n\r\napp.factory('commonHelper',function(){\r\n    //对server返回的result，进行检查，如果是日期，用moment进行转换\r\n    //result：从server返回的结果(非数组，而是单个记录)；filedType：当前result的field类型\r\n    function convertDateTime(singleRecorder,fieldType){\r\n        let dateFormat='YYYY-MM-DD HH:mm:ss'\r\n        for(let singleFiled in singleRecorder){\r\n            //result中的字段是否为date，是的话用moment进行转换\r\n            if(-1!==fieldType.indexOf(singleFiled)){\r\n                singleRecorder[singleFiled]=moment(singleRecorder[singleFiled]).format(dateFormat)\r\n            }\r\n        }\r\n    }\r\n\r\n  /*  /!*                  操作modalCommon                   *!/\r\n    function setTop(modalId){\r\n        //$('#modal_modal>div').height()=174，直接测量得到，因为只有在show时，才有height，hide时为0\r\n        var top=parseInt((document.body.clientHeight-174)/2)\r\n        $(modalId+'>div').css('top',top)\r\n    }\r\n\r\n    function modalHide(modalId){\r\n        $('#'+modalId+'_msg').text('')\r\n        $('#'+modalId).removeClass('show')\r\n        $('#'+modalId+'_title').text('').removeClass('text-danger').removeClass('text-info')\r\n        $('#'+modalId+'_close_button').removeClass('btn-danger').removeClass('btn-info').unbind('click')\r\n        $('#'+modalId+'_close_symbol').unbind('click')\r\n    }\r\n\r\n    function modalShowErrMsg(modalId,msg){\r\n        setTop()\r\n        $('#'+modalId+'_msg').text(msg)\r\n        //$('#modal_msg').text=msg\r\n        $('#'+modalId).addClass('show')\r\n        $('#'+modalId+'_title').text('错误').addClass('text-danger')\r\n        $('#'+modalId+'_close_button').addClass('btn-danger').bind('click',function(){\r\n            modalHide(modalId)\r\n        })\r\n        $('#'+modalId+'_close_symbol').bind('click',function(){\r\n            modalHide(modalId)\r\n        })\r\n    }\r\n    function modalShowInfoMsg(modalId,msg) {\r\n        $('#' + modalId + '_msg').text(msg)\r\n        $('#' + modalId ).addClass('show')\r\n        $('#' + modalId + '_title').text('信息').addClass('text-info')\r\n        $('#' + modalId + '_close_button').addClass('btn-info').bind('click', function () {\r\n            hide()\r\n        })\r\n        $('#' + modalId + '_close_symbol').bind('click', function () {\r\n            hide()\r\n        })\r\n    }*/\r\n\r\n    return {\r\n        convertDateTime,\r\n/*        modalHide,\r\n        modalShowErrMsg,\r\n        modalShowInfoMsg*/\r\n    }\r\n})\r\n\r\napp.service('modal',function(){\r\n    let _modalId,_modalMsgId,_modalTitleId,_modalCloseButtonId,_modalCloseSymbolId\r\n    function _setTop(){\r\n        //$('#modal_modal>div').height()=174，直接测量得到，因为只有在show时，才有height，hide时为0\r\n        var top=parseInt((document.body.clientHeight-174)/2)\r\n        $(_modalId+'>div').css('top',top)\r\n    }\r\n    function _modalHide(){\r\n        $('#'+_modalMsgId).text('')\r\n        $('#'+_modalId).removeClass('show')\r\n        $('#'+_modalTitleId).text('').removeClass('text-danger').removeClass('text-info')\r\n        $('#'+_modalCloseButtonId).removeClass('btn-danger').removeClass('btn-info').unbind('click')\r\n        $('#'+_modalCloseSymbolId).unbind('click')\r\n    }\r\n    /*                  设置id            */\r\n    //modal的id\r\n    this.setModalId=function(modalId){\r\n        _modalId=modalId\r\n        //默认是如下格式，可以通过set覆盖\r\n        _modalMsgId=modalId+'msg'\r\n        _modalTitleId=modalId + '_title'\r\n        _modalCloseButtonId=modalId+'_close_button'\r\n        _modalCloseSymbolId=modalId+'_close_symbol'\r\n    }\r\n\r\n    //modalMsg：显示信息的元素\r\n    this.setModalMsgId=function(modalMsgId){\r\n        _modalMsgId=modalMsgId\r\n    }\r\n\r\n    this.setModalTitleId=function(modalTitleId){\r\n        _modalTitleId=modalTitleId\r\n    }\r\n\r\n    this.setModalCloseButtonId=function(modalCloseButtonId){\r\n        _modalCloseButtonId=modalCloseButtonId\r\n    }\r\n\r\n    this.setModalCloseSymbolId=function(modalCloseSymbolId){\r\n        _modalCloseSymbolId=modalCloseSymbolId\r\n    }\r\n\r\n    /*              设置信息            */\r\n    this.showErrMsg=function(msg){\r\n        _setTop()\r\n        $('#'+_modalMsgId).text(msg)\r\n        //$('#modal_msg').text=msg\r\n        $('#'+_modalId).addClass('show')\r\n        $('#'+_modalTitleId).text('错误').addClass('text-danger')\r\n        $('#'+_modalCloseButtonId).addClass('btn-danger').bind('click',function(){\r\n            _modalHide(_modalId)\r\n        })\r\n        $('#'+_modalCloseSymbolId).bind('click',function(){\r\n            _modalHide(_modalId)\r\n        })\r\n    }\r\n\r\n    this.showInfoMsg=function(msg) {\r\n        $('#' + _modalMsgId).text(msg)\r\n        $('#' + _modalId ).addClass('show')\r\n        $('#' +_modalTitleId).text('信息').addClass('text-info')\r\n        $('#' + _modalCloseButtonId).addClass('btn-info').bind('click', function () {\r\n            _modalHide(_modalId)\r\n        })\r\n        $('#' + _modalCloseSymbolId).bind('click', function () {\r\n            _modalHide(_modalId)\r\n        })\r\n    }\r\n})\r\n\r\n\r\n"]}