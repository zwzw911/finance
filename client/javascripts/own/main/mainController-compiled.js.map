{"version":3,"sources":["mainController.js"],"names":[],"mappings":"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","file":"mainController-compiled.js","sourcesContent":["/**\r\n * Created by ada on 2016/8/28.\r\n */\r\n\r\n\r\nvar app=angular.module('app',['ui.router','ui.event','ngSanitize','MassAutoComplete','contDefine','component','finance'])\r\napp.constant('appCont',{\r\n    //和server不同，此处的配置，只是为了将外键的ObjectID替换成人类可读的字符串，（暂时）是1：1的关系\r\n    //格式还是采用object，以便后续可以加入其他选项\r\n    //nestedPrefix用来删除对应的字段，因为这些字段只是server用来serach用，无需在client显示\r\n    fkRedundancyFields:{\r\n        billType:{\r\n            parentBillType:{nestedPrefix:'parentBillTypeFields',fields:['name']}\r\n        },\r\n        department:{\r\n            parentDepartment:{fields:['name']}\r\n        },\r\n        employee:{\r\n            leader:{fields:['name']},\r\n            department:{fields:['name']}\r\n        },\r\n        bill:{\r\n            billType:{fields:['name']},\r\n            reimburser:{fields:['name']},\r\n        },\r\n    },\r\n    coll:{\r\n        'billType':'billType',\r\n        'department':'department',\r\n        'employee':'employee',\r\n        'bill':'bill',\r\n    },\r\n    collNameSearch:{\r\n        'billType':'name',\r\n        'department':'name',\r\n        'employee':'name',\r\n        'bill':'title',\r\n    },\r\n    //每个coll中，类型为date的字段。用来再cilent对server返回的数据进行日期处理\r\n    dateField:{\r\n        billType:['cDate','uDate'],\r\n        bill:['billDate','cDate','uDate'],\r\n        employee:['cDate','uDate'],\r\n        department:['cDate','uDate'],\r\n    },\r\n\r\n    //临时存储   外键   的id，以便后续acBlur的时候检测是否   外键   正确\r\n    selectedAC:{\r\n        \"department\": {\r\n            \"parentDepartment\": {\"value\": null, \"_id\": null}\r\n        },\r\n        \"employee\": {\r\n            \"leader\": {\"value\": null, \"_id\": null},\r\n            \"department\": {\"value\": null, \"_id\": null}\r\n        },\r\n        \"billType\": {\r\n            \"parentBillType\": {\"value\": null, \"_id\": null}//value：选中的记录的名称，id：选中的记录的实际id。ac有时候需要显示给用户 字符，但实际传递给server id，以便操作\r\n        },\r\n        \"bill\": {\r\n            \"billType\": {\"value\": null, \"_id\": null},\r\n            \"reimburser\": {\"value\": null, \"_id\": null}\r\n        }\r\n    },\r\n\r\n    //当input为date时，如果需要使用datetimepicker，则需要提供id，以便进行初始化\r\n    //所有的页面中，id都一样\r\n    dateInputId:{\r\n        \"department\": {\r\n            \"queryStartDate\": \"queryStartDate\", //设置查询条件时，用作选择 起始日期 的input的Id\r\n            \"queryEndDate\": \"queryEndDate\",//设置查询条件时，用作选择 结束日期 的input的Id\r\n\r\n        },\r\n        \"employee\": {\r\n            \"queryStartDate\": \"queryStartDate\", //设置查询条件时，用作选择 起始日期 的input的Id\r\n            \"queryEndDate\": \"queryEndDate\",//设置查询条件时，用作选择 结束日期 的input的Id\r\n        },\r\n        \"billType\": {\r\n            \"queryStartDate\": \"queryStartDate\", //设置查询条件时，用作选择 起始日期 的input的Id\r\n            \"queryEndDate\": \"queryEndDate\",//设置查询条件时，用作选择 结束日期 的input的Id\r\n        },\r\n        \"bill\": {\r\n            \"queryStartDate\": \"queryStartDate\", //设置查询条件时，用作选择 起始日期 的input的Id\r\n            \"queryEndDate\": \"queryEndDate\",//设置查询条件时，用作选择 结束日期 的input的Id\r\n        }\r\n    }\r\n})\r\n\r\napp.config(function($stateProvider,$urlRouterProvider,$locationProvider){\r\n    $locationProvider.html5Mode(true);//为了去除url中的#\r\n\r\n    $urlRouterProvider.when(\"\", \"/configuration\").otherwise(\"/\");\r\n    $stateProvider\r\n        .state('configuration',{\r\n            url:'/configuration',\r\n            templateUrl:'configuration.ejs',\r\n            controller:'configurationController',//只需在此定义；ui-view对应的ejs部分，无需写入ng-controller\r\n        })\r\n        .state('configuration.billType',{\r\n            url:'/billType',\r\n            templateUrl:'configuration.billType.ejs',\r\n            controller:'configuration.billType.Controller',\r\n        })\r\n        .state('configuration.departmentInfo',{\r\n            url:'/departmentInfo',\r\n            templateUrl:'configuration.departmentInfo.ejs',\r\n            controller:'configuration.departmentInfo.Controller',\r\n        })\r\n        .state('configuration.employeeInfo',{\r\n            url:'/employeeInfo',\r\n            templateUrl:'configuration.employeeInfo.ejs',\r\n            controller:'configuration.employeeInfo.Controller',\r\n        })\r\n\r\n        .state('bill',{\r\n            url:'/bill',\r\n            templateUrl:'bill.ejs',\r\n            controller:'billController',\r\n        })\r\n        .state('bill.billInfo',{\r\n            url:'/billInfo',\r\n            templateUrl:'bill.billInfo.ejs',\r\n            controller:'bill.billInfo.Controller',\r\n    })\r\n\r\n})\r\n\r\napp.controller('mainController',function($scope,htmlHelper){\r\n    htmlHelper.adjustFooterPosition()\r\n\r\n    window.onresize=function(){\r\n        htmlHelper.adjustFooterPosition()\r\n        htmlHelper.verticalModalCenter('CRUDRecorder')\r\n    }\r\n})\r\n\r\napp.controller('configurationController',function($scope,htmlHelper){\r\n    htmlHelper.adjustFooterPosition()\r\n    $scope.adjustFooterPosition=function(){\r\n        //console.log('configuration resize')\r\n        htmlHelper.adjustFooterPosition()\r\n    }\r\n\r\n})\r\n\r\napp.factory('templateFunc',function($q,$sce,appCont,cont,contEnum,inputAttrHelper,htmlHelper,validateHelper,queryHelper,commonHelper,financeHelper,modalChoice,dateTimePickerHelper){\r\n    var generateControllerData=function(eColl){\r\n        return {\r\n            inputAttr:cont.inputAttr[eColl],//CRUD记录的时候，对输入进行设置\r\n            inputRule:cont.inputRule[eColl],//CRUD，对输入进行设置（min/maxLength）以及进行检测\r\n            //存储当前载入的数据，数组，以便判断是否为空\r\n            recorder:[],\r\n\r\n            queryFieldEnable:false,//当前 字段查询是否展开\r\n\r\n            selectedQueryField:undefined, //当前选中的查询字段，是key（实际字段名）：value（显示给用户看的中文字段名）的键值对\r\n            selectedQueryFieldOperator:undefined,//如果是数字，当前选中的比较符\r\n            selectedQueryFieldValue:undefined,//如果选择的字段是字符或者数字，对应设置的值\r\n            //如果是日期，需要2个变量确定，此时不能使用selectedQueryFieldValue\r\n            selectedStartDateValue:undefined,\r\n            selectedEndDateValue:undefined,\r\n\r\n            queryField:cont.queryField[eColl], //可选的查询字段\r\n\r\n            activeQueryValue:{},//当前生效的查询字段和查询值 ，可以直接传递给server{stringField:[{value:'val1'},{value:'val2'}], numberField:[{value:1,compOp:'gt'},{value:2,compOp:'lt'}]}   采用{}初始化，则可以直接通过函数的参数进行修改；缺点是无法在前端判断是否为{}\r\n\r\n            recorderDialogShow:false,//当前modal-dialog是否显示（用来add/modify记录）\r\n\r\n            currentIdx:-1, //当前操作的记录的idx\r\n\r\n            //临时存储用户选择的外键值，之后在acBlur中进行检查此外键值是否validate\r\n            //对于当前用户选择的记录，保存id，以便在create/update的时候，确保能上传正确的id值（acBlur的时候检查id，如果正确，将value保存到allData.inputAttr,告诉用户选择的外键值validate）\r\n            //对于设置查询条件，直接保存到allData.inputAttr即可\r\n            selectedAC:appCont.selectedAC[eColl],\r\n\r\n            currentOpType:null,\r\n        }\r\n    }\r\n\r\n    /*            pagination            */\r\n    function  generatePaginationData(eColl){\r\n        return {\r\n            'paginationInfo':{},\r\n            'pageRange':null,\r\n            'goToPageNo':null,\r\n            'goToButtonEnable':false,\r\n        }\r\n    }\r\n\r\n    function generatePaginationFunc($scope){\r\n        let allFuncResult={}\r\n        allFuncResult={\r\n            validateGoToPageNo:function(){\r\n                if(false===validateHelper.dataTypeCheck.isInt($scope.pagination.goToPageNo)){\r\n                    $scope.pagination.goToPageNo=null\r\n                    $scope.pagination.goToButtonEnable=false\r\n                }else{\r\n                    $scope.pagination.goToButtonEnable=true\r\n                }\r\n                console.log($scope.pagination.goToButtonEnable)\r\n            }\r\n        }\r\n        return allFuncResult\r\n    }\r\n\r\n\r\n    //在主函数中进行初始化\r\n/*    /!*                      datetimepicker                      *!/\r\n    function generateDateTimePickerFunc(){\r\n        let allFunc={}\r\n        allFunc['initDateTimePicker']=function(eColl){\r\n            dateTimePickerHelper.initEle(dateTimePickerHelper[eColl]['queryStartDate'])\r\n            dateTimePickerHelper.initEle(dateTimePickerHelper[eColl]['queryEndDate'])\r\n        }\r\n        return allFunc\r\n    }*/\r\n\r\n\r\n    function generateCreateUpdateModalInfo(){\r\n        return {\r\n            title:{'create':'添加数据','update':'修改数据'},\r\n            buttonFlag:true,//初始为true\r\n        }\r\n    }\r\n\r\n    //此处$scope并非controlller中$scope，只是一个变量的名字；为了方便从controller中把function移植\r\n    function allFunc($scope,eColl){\r\n\r\n        let fkConfig=appCont.fkRedundancyFields[eColl]\r\n        //需要进行转换的日期字段名称\r\n        let dateField=appCont.dateField[eColl]\r\n\r\n        let allFuncResult={\r\n\r\n//在对记录进行update的时候，根据idx，将recorder中的一个载入到inputAttr\r\n            loadCurrentData:function (idx,inputAttr,recorder){\r\n                inputAttrHelper.loadCurrentData(idx,inputAttr,recorder,fkConfig);\r\n            },\r\n\r\n            //初始化当前coll所有字段的inputAttr\r\n            initAllFieldInputAttr:function (inputAttr){\r\n                $scope.modal.buttonFlag=true;\r\n                //console.log(`optype is ${}`)\r\n                if(contEnum.opType.create===$scope.allData.currentOpType){\r\n                    inputAttrHelper.initAllFieldInputAttrCreate(inputAttr)\r\n                }\r\n                if(contEnum.opType.update===$scope.allData.currentOpType){\r\n                    inputAttrHelper.initAllFieldInputAttrUpdate(inputAttr)\r\n                }\r\n            },\r\n\r\n            initSingleFieldInputAttr:function(field,inputAttr){\r\n                //console.log(`field is ${field}`)\r\n                //console.log(`inputAttr is ${JSON.stringify(inputAttr)}`)\r\n                $scope.modal.buttonFlag=true;\r\n                if(contEnum.opType.create===$scope.allData.currentOpType){\r\n                    inputAttrHelper.initSingleFieldInputAttrCreate(field,inputAttr)\r\n                }\r\n                if(contEnum.opType.update===$scope.allData.currentOpType){\r\n                    inputAttrHelper.initSingleFieldInputAttrUpdate(field,inputAttr)\r\n                }\r\n                // queryHelper.initSingleFieldInputAttr(field,inputAttr,this.currentOpType)\r\n            },\r\n            //因为create和update公用一个modal，所以需要设置opType来区分操作类型\r\n            setCurrentOpTypeCreate(){\r\n                $scope.allData.currentOpType=contEnum.opType.create\r\n            },\r\n            setCurrentOpTypeUpdate(){\r\n                $scope.allData.currentOpType=contEnum.opType.update\r\n            },\r\n            /*        setCurrentOpTypeDelete(){\r\n             $scope.allData.currentOpType=contEnum.opType.delete\r\n             },\r\n             setCurrentOpTypeSearch(){\r\n             $scope.allData.currentOpType=contEnum.opType.search\r\n             },*/\r\n            //不同操作，参数不一样，所以使用不同的函数（create update因为使用同一个modal，所以使用同一个函数，内部使用opType区分）\r\n            CRUDOperation:{\r\n                'createUpdate':function(idx,inputAttr,recorder,selectedAC){\r\n                    if(contEnum.opType.create===$scope.allData.currentOpType){\r\n                        if($scope.modal.buttonFlag){\r\n                            //let convertedValue=queryHelper.convertAddQueryValueToServerFormat($scope.allData.activeQueryValue,fkConfig,$scope.pagination.paginationInfo.currentPage)\r\n                            financeHelper.dataOperator.create(idx,inputAttr,recorder,selectedAC,fkConfig,eColl,dateField,$scope.pagination.paginationInfo);\r\n                            $scope.allFunc.switchDialogStatus()\r\n                            //操作完成（无论成功失败），将操作类型 复位\r\n                            $scope.allData.currentOpType=null\r\n                        }\r\n                    }\r\n                    if(contEnum.opType.update===$scope.allData.currentOpType){\r\n                        if($scope.modal.buttonFlag){\r\n                            financeHelper.dataOperator.update(idx,inputAttr,recorder,selectedAC,fkConfig,eColl,dateField);\r\n                            $scope.allFunc.switchDialogStatus();\r\n                            //操作完成（无论成功失败），将操作类型 复位\r\n                            $scope.allData.currentOpType=null\r\n                        }\r\n                    }\r\n                },\r\n                'delete':function(idx,recorder,currentPage){\r\n                    let convertedValue=queryHelper.convertAddQueryValueToServerFormat($scope.allData.activeQueryValue,fkConfig,currentPage)\r\n                    financeHelper.dataOperator.delete(idx,recorder,eColl,convertedValue,fkConfig,dateField,$scope.pagination);\r\n                },\r\n                'search':function(recorder,currentPage){\r\n                    //console.log(`enter search`)\r\n                    //console.log(`origin search is ${JSON.stringify($scope.allData.activeQueryValue)}`)\r\n                    //console.log(`origin fkconfig is ${JSON.stringify(fkConfig)}`)\r\n                    let convertedValue=queryHelper.convertAddQueryValueToServerFormat($scope.allData.activeQueryValue,fkConfig,currentPage)\r\n                    // console.log(`search convert result is ${JSON.stringify(convertedValue)}`)\r\n                    //console.log(`after convert activeQueryValue result is ${JSON.stringify($scope.allData.activeQueryValue)}`)\r\n                    //没有任何查询条件，或者删除了所有查询条件\r\n/*                    if(0===Object.keys($scope.allData.activeQueryValue).length){\r\n                        financeHelper.dataOperator.read(recorder,fkConfig,eColl,dateField)\r\n                    }else{*/\r\n                    return financeHelper.dataOperator.search(recorder,convertedValue,fkConfig,eColl,dateField,$scope.pagination);\r\n                    //}\r\n\r\n                    //$scope.switchDialogStatus();\r\n                }\r\n            },\r\n\r\n            //在crete/update记录时，如果input提供autoComplete功能时（一般是外键），blur时需要检测input的内容是否存在，不存在需要报错提示。\r\n            //因为需要额外的检测当前input的value是否有对应的外键（是否为－1），所以独立为一个函数\r\n            //currentId:当前记录的objId（如果是create，为undefined）\r\n            acBlur:function(field,inputAttr,currentId){\r\n                console.log(`acBlur field is ${field},currentId is ${currentId},ac field is ${JSON.stringify($scope.allData.selectedAC[field])},current op type is ${contEnum.opType.update.toString()}`)\r\n                // if(contEnum.opType.update===$scope.allData.currentOpType){\r\n                //     inputAttrHelper.initSingleFieldInputAttrUpdate(field,inputAttr)\r\n                // }\r\n\r\n                //console.log(`check id is ${$scope.allData.selectedAC[field]}`)\r\n                //acBlur无需检测input（min/max/minLength等），只需检测a，是否选择（null或者objId），b.是否和当前一样（不能把自己当成自己的父）\r\n                if(null===$scope.allData.selectedAC[field]['_id']){\r\n                    // console.log(`before msg is ${JSON.stringify(inputAttr[field])}`)\r\n                    if(true===$scope.allData.inputRule[field]['require']['define']){\r\n                        inputAttrHelper.setSingleInputAttrErrorMsg(field,inputAttr,`${inputAttr[field]['chineseName']}${inputAttr[field]['value']}不存在`)\r\n                    }\r\n                }else{\r\n                    //input中的内容在db中有对应的记录\r\n                    console.log(`check is self`)\r\n                    //只有update的时候，才需要判断是否为自己\r\n                    if(contEnum.opType.update===$scope.allData.currentOpType && $scope.allData.selectedAC[field]['_id']===currentId){\r\n                        // console.log(`check is self in`)\r\n                        inputAttrHelper.setSingleInputAttrErrorMsg(field,inputAttr,`${inputAttr[field]['chineseName']}不能为自己`)\r\n                    }\r\n                    if(contEnum.opType.create===$scope.allData.currentOpType){\r\n                        inputAttrHelper.initSingleFieldInputAttrUpdate(field,inputAttr)\r\n                        inputAttr[field]['value']=$scope.allData.selectedAC[field]['value']\r\n                    }\r\n                }\r\n\r\n                /*            else{\r\n                 queryHelper.checkInput(field,inputRule,inputAttr)\r\n                 }*/\r\n\r\n                //modal.allInputValidCheck(inputAttr)\r\n                $scope.modal.buttonFlag=inputAttrHelper.allInputValidCheck(inputAttr)\r\n                /*            console.log(`validate result is ${JSON.stringify(inputAttr)}`)\r\n                 console.log(`but flag is ${$scope.modal.buttonFlag}`)*/\r\n            },\r\n\r\n            nonAcBlur:function(field,inputRule,inputAttr){\r\n                validateHelper.checkInput(field,inputRule,inputAttr)\r\n                $scope.modal.buttonFlag=inputAttrHelper.allInputValidCheck(inputAttr)\r\n            },\r\n\r\n\r\n            /*        allInputValidCheck:function(inputAttr){\r\n             $scope.modal.buttonFlag=inputAttrHelper.allInputValidCheck(inputAttr)\r\n             },*/\r\n            //create/update\r\n\r\n            allCheckInput:function(inputRule,inputAttr){\r\n                console.log(`input rule is ${JSON.stringify(inputRule)}`)\r\n                validateHelper.allCheckInput(inputRule,inputAttr)\r\n            },\r\n\r\n            //从activatedQueryValue中删除value\r\n            //queryFiled:parentBillType\r\n            //queryValue:'a'\r\n            //activatedQueryValue:{parentBillType:['a','b']}\r\n            deleteQueryValue:function(queryFiled,idx,activatedQueryValue){\r\n                console.log(`idx is ${idx}`)\r\n                queryHelper.deleteQueryValue(queryFiled,idx,activatedQueryValue)\r\n                console.log(`after delete query value ${JSON.stringify(activatedQueryValue)}`)\r\n            },\r\n            // $scope.addQueryValue=queryHelper.addQueryValue\r\n            addQueryValue:function(){\r\n                console.log(`add query in`)\r\n                let selectedQueryFiled=$scope.allData.selectedQueryField['key']\r\n                //判断queryField的类型，如果是date或者数字，要做特殊处理\r\n                let queryFiledType=$scope.allData.inputRule[selectedQueryFiled]['type']\r\n                console.log(`queryFiledType is ${queryFiledType}`)\r\n                //对于日期，operator是根据开始/结束日期固定\r\n                if('date'===queryFiledType){\r\n                    if($scope.allData.selectedStartDateValue && validateHelper.dataTypeCheck.isDate($scope.allData.selectedStartDateValue)){\r\n                        let value=$scope.allData.selectedStartDateValue\r\n                        queryHelper.addQueryValue(selectedQueryFiled,value,$scope.allData.activeQueryValue,'gt') //开始日期，操作符为gt\r\n                    }\r\n                    if($scope.allData.selectedEndDateValue && validateHelper.dataTypeCheck.isDate($scope.allData.selectedEndDateValue)){\r\n                        let value=$scope.allData.selectedEndDateValue\r\n                        queryHelper.addQueryValue(selectedQueryFiled,value,$scope.allData.activeQueryValue,'lt') //开始日期，操作符为gt\r\n                    }\r\n                }else if(['float','int','number'].indexOf(queryFiledType)>-1){\r\n                    console.log(`selectedQueryOperator is ${$scope.allData.selectedQueryFieldOperator}`)\r\n                    //对于日期，如果operator不存在\r\n                    let value=$scope.allData.selectedQueryFieldValue\r\n                    if(false===$scope.allData.selectedQueryFieldOperator in contEnum.operator){\r\n                        $scope.allData.selectedQueryFieldOperator=contEnum.operator.eq\r\n                    }\r\n                    queryHelper.addQueryValue(selectedQueryFiled,value,$scope.allData.activeQueryValue,$scope.allData.selectedQueryFieldOperator)\r\n                    console.log(`after selectedQueryOperator is ${JSON.stringify($scope.allData.activeQueryValue)}`)\r\n                }else{\r\n                    //字符\r\n                    if(validateHelper.dataTypeCheck.isString($scope.allData.selectedQueryFieldValue) && false===validateHelper.dataTypeCheck.isStringEmpty($scope.allData.selectedQueryFieldValue)){\r\n                        queryHelper.addQueryValue(selectedQueryFiled,$scope.allData.selectedQueryFieldValue,$scope.allData.activeQueryValue) //没有操作符\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                console.log(`after add query value ${JSON.stringify($scope.allData.activeQueryValue)}`)\r\n            },\r\n\r\n            queryFieldChange:function(selectedQueryField){\r\n                //初始清空值\r\n                $scope.allData.selectedQueryFieldValue=undefined\r\n                $scope.allData.selectedStartDateValue=undefined\r\n                $scope.allData.selectedEndDateValue=undefined\r\n                //判断选择字段的类型，如果是日期，则进行初始化(按需初始化)\r\n                if('date'===$scope.allData.inputRule[selectedQueryField['key']]['type']){\r\n                    console.log(`date filed choose`)\r\n                    console.log(`id is ${appCont.dateInputId[eColl]['queryStartDate']}`)\r\n                    // $(\"#queryStartDate\").datetimepicker();\r\n                    dateTimePickerHelper.initEle(appCont.dateInputId[eColl]['queryStartDate'])\r\n                    dateTimePickerHelper.initEle(appCont.dateInputId[eColl]['queryEndDate'])\r\n                }\r\n            },\r\n\r\n            clickQueryFlag:function(){\r\n                $scope.allData.queryFieldEnable=!$scope.allData.queryFieldEnable\r\n            },\r\n\r\n            //选择查询条件完毕，并添加完成后，selectedField/selectedFieldValue设成空\r\n            initSelectedQueryField:function(){\r\n                $scope.allData.selectedQueryField=''\r\n                $scope.allData.selectedQueryFieldValue=''\r\n            },\r\n\r\n\r\n            switchDialogStatus:function(){\r\n                $scope.allData.recorderDialogShow=!$scope.allData.recorderDialogShow\r\n                htmlHelper.verticalModalCenter('CRUDRecorder')\r\n/*                alert($('table').attr('height'))\r\n                alert($('table').attr('width'))*/\r\n            },\r\n\r\n            setCurrentIdx:function(idx){\r\n                $scope.allData.currentIdx=idx\r\n            },\r\n\r\n            //通用autoComplete，for both create/update and query\r\n            //其中对selectedAC的处理，虽然也是for both create/update and query，但是实际只有在create/update的时候才会用到\r\n            generateSuggestList:function(eColl,fieldName){\r\n                //最终返回suggest和on_select的一个对应\r\n                let suggestList={}\r\n\r\n                //设置suggest\r\n                suggestList['suggest']=function(name){\r\n                    let deferred=$q.defer()\r\n                    let searchValue={}\r\n\r\n                    //如果是外键，那么实际对应的field名称，例如：parentBillType对应的是name\r\n                    let realFieldNameToRead=fieldName\r\n                    //替换成外键所以在的coll中的名称，以便server通过format检测（否则如果外键在不同的coll，server无法正确通过）\r\n                    if(fieldName in fkConfig){\r\n                        realFieldNameToRead=fkConfig[fieldName]['fields'][0]\r\n                    }\r\n\r\n                    searchValue[realFieldNameToRead]={}\r\n                    searchValue[realFieldNameToRead]['value']=name\r\n                    financeHelper.dataOperator.readName(searchValue,eColl).success(\r\n                        (data, status, header, config)=>{\r\n                            let tmpResult = []\r\n                            //console.log(`get suggest result is ${data.msg}`)\r\n                            //如果当前的字段是外键（定义在allData.selectedAC中），需要确定的id，以便保存到数据库，则初始设为-1\r\n                            if(true=== fieldName in $scope.allData.selectedAC){\r\n                                if ('' !== name && null !== name) {\r\n                                    $scope.allData.selectedAC[fieldName]._id = null\r\n                                    $scope.allData.selectedAC[fieldName].value=null\r\n                                }\r\n                            }\r\n\r\n                            if (data.msg.length > 0) {\r\n                                data.msg.forEach(function (e) {\r\n                                    //label:下拉菜单中的选项，value：选中后显示的内容，id:选中项目的id（用作外键）\r\n                                    tmpResult.push({label: e.name, value: e.name, id: e._id})\r\n                                    //如果当前的字段是外键（定义在allData.selectedAC中），且输入的值存在db中，则将id保存到selectedAC中，以便crete/update使用（query也保存，但是实际不使用），包括blur时做检测\r\n                                    if(true=== fieldName in $scope.allData.selectedAC){\r\n                                        //输入的外键值，在db中存在，保存其id，\r\n                                        if (name === e.name) {\r\n                                            $scope.allData.selectedAC[fieldName]._id = e._id\r\n                                            $scope.allData.selectedAC[fieldName].value = name\r\n                                            // console.log(`set id is ${JSON.stringify($scope.allData.selectedAC[fieldName])}`)\r\n                                        }\r\n                                    }\r\n                                })\r\n                                deferred.resolve(tmpResult)\r\n                            }\r\n                        }\r\n                    ).error(\r\n                        (data, status, header, config)=>{\r\n                            deferred.resolve({rc: 9999, msg: data})\r\n                        }\r\n                    )\r\n                    return deferred.promise\r\n                }\r\n\r\n                suggestList['on_select']=function (selected) {\r\n                    console.log(`on_selected is ${JSON.stringify(selected)}`)\r\n                    if(true=== fieldName in $scope.allData.selectedAC){\r\n                        $scope.allData.selectedAC[fieldName]._id = selected.id\r\n                        $scope.allData.selectedAC[fieldName].value = selected.value\r\n                        //无需直接赋值给$scope.allData.inputAttr，而是通过acBlur判断通过后才赋值\r\n                    }else{\r\n                        //不是外键，直接保存在inputAttr中\r\n                        $scope.allData.inputAttr[fieldName]['value']=selected.value\r\n                    }\r\n                }\r\n\r\n                return suggestList\r\n            },\r\n\r\n            showChoiceModal:function(){\r\n                //console.log(`enter show choice modal`)\r\n                modalChoice.setModalId('modalChoice')\r\n                modalChoice.showChoiceMsg('确认删除',$scope.allFunc.CRUDOperation.delete,$scope.allData.currentIdx,$scope.allData.recorder,$scope.pagination.paginationInfo.currentPage)\r\n            },\r\n        }\r\n\r\n\r\n        return allFuncResult\r\n    }\r\n\r\n\r\n    function setACConfig($scope,eColl){\r\n        for(let singleFieldName in $scope.allData.inputAttr){\r\n            let singleInputAttr=$scope.allData.inputAttr[singleFieldName]\r\n            //无论是query还是create/update需要AC，都要为对应的字段设置AC\r\n            if(true===singleInputAttr['isQueryAutoComplete'] || true===singleInputAttr['isCRUDAutoComplete']){\r\n                //从autoCompleteCollField字段中获取从哪个coll的哪个field中获得ac\r\n                let fk=singleInputAttr['autoCompleteCollField'].split('.')\r\n                let coll=fk[0]\r\n                let field=fk[1]\r\n                // console.log(`field for ac is ${singleFieldName}, related coll is ${coll}, related field is ${field}`)\r\n\r\n                $scope.allData.inputAttr[singleFieldName]['suggestList']=$scope.allFunc.generateSuggestList(appCont.coll[eColl],singleFieldName)\r\n                //$scope.allData.inputAttr['name']['suggestList']=$scope.allFunc.generateSuggestList(appCont.coll.billType,'name')\r\n\r\n                //字段名是原始字段名（符合正常的逻辑），server会根据fkconfig自动查找对应的字段\r\n                $scope.allData.inputAttr[singleFieldName]['suggestList']=$scope.allFunc.generateSuggestList(appCont.coll[coll],singleFieldName)\r\n            }\r\n        }\r\n    }\r\n\r\n    //对controller做初始化操作\r\n    function init($scope,eColl){\r\n\r\n\r\n        //let convertedValue=queryHelper.convertAddQueryValueToServerFormat($scope.allData.activeQueryValue,fkConfig,currentPage)\r\n        //financeHelper.dataOperator.search($scope.allData.recorder,appCont.fkRedundancyFields[eColl],appCont.coll[eColl],appCont.dateField[eColl])\r\n        var promise=financeHelper.dataOperator.search($scope.allData.recorder,{'currentPage':1,'searchParams':{}},appCont.fkRedundancyFields[eColl],eColl,appCont.dateField[eColl],$scope.pagination);\r\n        promise.then(function(v){\r\n            // console.log(`search done`)\r\n            htmlHelper.adjustFooterPosition()\r\n        })\r\n        let [startDate,endDate]=[appCont.dateInputId[eColl].queryStartDate,appCont.dateInputId[eColl].queryStartDate]\r\n\r\n\r\n/*        // let startDate=\r\n        dateTimePickerHelper.initEle(startDate)\r\n        dateTimePickerHelper.initEle(endDate)*/\r\n    }\r\n\r\n    \r\n\r\n    //以下5个函数有严格的先后顺序，需要顺序执行\r\n    return {\r\n        generateControllerData, //产生所需数据（除了分页信息之外）\r\n\r\n        generatePaginationData,//初始化分页信息数据\r\n        generatePaginationFunc,//分页需要用到的函数\r\n\r\n        generateCreateUpdateModalInfo, //设置create/update用的modal\r\n        allFunc, //返回一个对象，value是函数\r\n        setACConfig,//对需要AC的字段设置AC的配置（通过allFunc.generateSuggestList产生的对象，赋值给对应的字段）\r\n        init, //设置位置，初始化数据\r\n\r\n\r\n        // generateDateTimePickerFunc, //设置datetimepicker的一些函数\r\n    }\r\n})\r\n\r\n\r\n\r\napp.controller('configuration.billType.Controller',function($scope,templateFunc){\r\n    //appCont,cont,contEnum,inputAttrHelper,htmlHelper,validateHelper,queryHelper,commonHelper,financeHelper,templateFunc\r\n    //需要用到的数据，预先定义好\r\n    $scope.allData=templateFunc.generateControllerData('billType')\r\n\r\n    $scope.modal=templateFunc.generateCreateUpdateModalInfo()\r\n    $scope.allFunc=templateFunc.allFunc($scope,'billType')\r\n\r\n    templateFunc.setACConfig($scope,'billType')\r\n    //初始化调用\r\n    templateFunc.init($scope,'billType')\r\n\r\n\r\n\r\n})\r\n\r\n\r\n\r\napp.controller('configuration.departmentInfo.Controller',function($scope,templateFunc){\r\n    //需要用到的数据，预先定义好\r\n    $scope.allData=templateFunc.generateControllerData('department')\r\n    //console.log($scope.allData.queryFieldEnable)\r\n    $scope.modal=templateFunc.generateCreateUpdateModalInfo()\r\n    $scope.allFunc=templateFunc.allFunc($scope,'department')\r\n\r\n    templateFunc.setACConfig($scope,'department')\r\n    //初始化调用\r\n    templateFunc.init($scope,'department')\r\n})\r\n\r\n\r\n\r\napp.controller('configuration.employeeInfo.Controller',function($scope,templateFunc){\r\n    //需要用到的数据，预先定义好\r\n    $scope.allData=templateFunc.generateControllerData('employee')\r\n    $scope.modal=templateFunc.generateCreateUpdateModalInfo()\r\n    $scope.allFunc=templateFunc.allFunc($scope,'employee')\r\n\r\n    templateFunc.setACConfig($scope,'employee')\r\n    //初始化调用\r\n    templateFunc.init($scope,'employee')\r\n})\r\n\r\napp.controller('billController',function($scope,htmlHelper){\r\n    $scope.adjustFooterPosition=function(){\r\n        //console.log('main resize')\r\n        htmlHelper.adjustFooterPosition()\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\napp.controller('bill.billInfo.Controller',function($scope,templateFunc){\r\n    //需要用到的数据，预先定义好\r\n    $scope.allData=templateFunc.generateControllerData('bill')\r\n    $scope.pagination=templateFunc.generatePaginationData('bill')\r\n    $scope.paginationFunc=templateFunc.generatePaginationFunc($scope)\r\n    $scope.modal=templateFunc.generateCreateUpdateModalInfo()\r\n    $scope.allFunc=templateFunc.allFunc($scope,'bill')\r\n\r\n    templateFunc.setACConfig($scope,'bill')\r\n    //初始化调用\r\n    templateFunc.init($scope,'bill')\r\n\r\n\r\n\r\n    // templateFunc.generateDateTimePickerFunc.allFunc.initDateTimePicker('bill')\r\n})\r\n"]}