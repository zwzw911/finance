{
	"variables": [],
	"info": {
		"name": "fianance",
		"_postman_id": "be893c4e-e13b-f277-c934-f7c96eb11b6d",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "bill",
			"description": "1. check empty object: values={}\n2. check name null:    values={\"name\":null}\n3. check invalid field: values={\"notExistField\":\"a\"}\n4. check too short name: values={\"name\":\"a\"}\n5. check too long name: values={\"name\":\"1234567890123456789012345\"}\n6. check chinane name: values={\"name\":\"机械部\"}\n7. check space split name: values={\"name\":\"M M M\"}\n8. check unique name: 2*values={\"name\":\"MIT\"}\n9. check parent name: values={\"name\":\"base line\"}",
			"item": [
				{
					"name": "DELETE ALL init",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"billtype_name_1\", \"taxi\");",
									"postman.setEnvironmentVariable(\"billtype_name_2\", \"transport\");",
									"",
									"postman.setEnvironmentVariable(\"employee_name_1\", \"wzhan039\");",
									"postman.setEnvironmentVariable(\"employee_name_2\", \"xubl\");",
									"",
									"postman.setEnvironmentVariable(\"department_name_1\", \"MIT\");",
									"postman.setEnvironmentVariable(\"department_name_2\", \"MODEM\");",
									"",
									"postman.setEnvironmentVariable(\"bill_title_1\", \"FDD Capa test\");",
									"postman.setEnvironmentVariable(\"bill_title_2\", \"TDD Capa test\");",
									"",
									"postman.setEnvironmentVariable(\"bill_amount_1\", 100);",
									"postman.setEnvironmentVariable(\"bill_amount_2\", 371);",
									"// postman.setEnvironmentVariable(\"billtype_name_4\", \"launch\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new department MODEM",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Contain MODEM\"] = responseBody.has(environment.department_name_2);",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData[\"msg\"]",
									"postman.setEnvironmentVariable(\"department_id_2\",result._id);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new department MIT",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Contain MIT\"] = responseBody.has(environment.department_name_1);",
									"tests[\"Contain MODEM\"] = responseBody.has(environment.department_name_2);",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData[\"msg\"]",
									"postman.setEnvironmentVariable(\"department_id_1\",result._id);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_name_1}}\"},\"parentDepartment\":{\"value\":\"{{department_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new employee xubl",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Body matches string\"] = responseBody.has(environment.employee_name_2);",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData[\"msg\"]",
									"postman.setEnvironmentVariable(\"employee_id_2\",result._id);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new employee wzhan039",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData[\"msg\"]",
									"tests[\"create success\"] = jsonData.rc === 0;",
									"postman.setEnvironmentVariable(\"employee_id_1\", result[\"_id\"]);",
									"",
									"",
									"tests[\"Contain emplyee wzhan039\"] = responseBody.has(environment.employee_name_1);",
									"tests[\"Contain emplyee leader xubol\"] = responseBody.has(environment.employee_name_2);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_1}}\"},\"leader\":{\"value\":\"{{employee_id_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new billtype transport",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Contain billtype transport\"] = responseBody.has(environment.billtype_name_2);",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"create success\"] = jsonData.rc === 0;",
									"var result=jsonData[\"msg\"]",
									"postman.setEnvironmentVariable(\"billtype_id_2\",result._id);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new billtype taxi",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Contain billtype transport\"] = responseBody.has(environment.billtype_name_2);",
									"tests[\"Contain billtype taxi\"] = responseBody.has(environment.billtype_name_1);",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"create success\"] = jsonData.rc === 0;",
									"var result=jsonData[\"msg\"]",
									"postman.setEnvironmentVariable(\"billtype_id_1\",result._id);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill:check not exist field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"rc\"] === 69710;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"ab\"},\"notExist\":{\"value\":1}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new with array",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69718;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":[{\"title\":{\"value\":\"{{billtype_name_1}}\"},\"title\":{\"value\":\"{{billtype_name_2}}\"},\"reimburser\":{\"value\":\"{{employee_id_1}}\"},\"amount\":{\"value\":\"{{bill_amount_1}}\"}}]}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new with more field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//超出最大接受字段数",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"input field exceed\"] = jsonData.rc === 69724;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"aaaa\"},\"name1\":{\"value\":\"bbbb\"},\"name2\":{\"value\":\"cccc\"},\"name3\":{\"value\":\"dddd\"},\"name4\":{\"value\":\"bbbb\"},\"name5\":{\"value\":\"cccc\"},\"name6\":{\"value\":\"dddd\"},\"name7\":{\"value\":\"dddd\"},\"name8\":{\"value\":\"dddd\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new with duplicate field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.title === environment.bill_title_2;",
									"",
									"postman.setEnvironmentVariable(\"bill_id_2\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"{{bill_title_1}}\"},\"title\":{\"value\":\"{{bill_title_2}}\"},\"reimburser\":{\"value\":\"{{employee_id_1}}\"},\"amount\":{\"value\":\"{{bill_amount_1}}\"},\"billType\":{\"value\":\"{{billtype_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: check title unique(title not unique now)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"duplicate billtype name check\"] = jsonData.rc === 30002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"{{bill_title_2}}\"},\"reimburser\":{\"value\":\"{{employee_id_1}}\"},\"amount\":{\"value\":\"{{bill_amount_1}}\"},\"billType\":{\"value\":\"{{billtype_id_1}}\"},\"content\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update title with wrong format {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_1}}\"},\"title\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update title with wrong format 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_1}}\"},\"title\":\"a\"}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update title without _id.value",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{bill_id_1}}\",\"title\":{\"value\":\"MODEM\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update title with not exist field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{bill_id_1}}\",\"name\":{\"value\":\"MODEM\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update title with format wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da2711\"},\"title\":{\"value\":\"{{bill_title_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update title with not exist id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"rc\"] === 60406;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da27111\"},\"title\":{\"value\":\"{{bill_title_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update title normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData.rc === 0;",
									"",
									"",
									"",
									"tests[\"Body matches string\"] = responseBody.has(environment.bill_title_2);",
									"",
									"// postman.clearEVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_2}}\"},\"title\":{\"value\":\"{{bill_title_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update optional field billtype with null field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"update result\"] = jsonData.rc === 0;",
									"",
									"tests[\"billType null\"] = jsonData.billType === undefined;",
									"tests[\"billTypeFields null\"] = jsonData.billTypeFields === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_2}}\"},\"billType\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update mandatory field reimburser with null field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"mandatory field reimburser cant be null\"] = jsonData[\"msg\"][\"reimburser\"].rc === 10884;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_2}}\"},\"reimburser\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update mandatory field  amount with null field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"mandatory field reimburser cant be null\"] = jsonData[\"msg\"][\"amount\"].rc === 69706;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_2}}\"},\"amount\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: update employee/reimburser/amout normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 0;",
									"",
									"",
									"tests[\"Contain xubol\"] = responseBody.has(environment.employee_name_2);",
									"tests[\"Contain 317\"] = responseBody.has(environment.bill_amount_2);",
									"tests[\"Contain transport\"] = responseBody.has(environment.billtype_name_2);",
									"tests[\"Contain FDD capa test\"] = responseBody.has(environment.bill_title_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_2}}\"},\"billType\":{\"value\":\"{{billtype_id_2}}\"},\"reimburser\":{\"value\":\"{{employee_id_2}}\"},\"amount\":{\"value\":\"{{bill_amount_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: create new FDD Capa test",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"Contain wzhan039\"] = responseBody.has(environment.employee_name_1);",
									"tests[\"Contain 317\"] = responseBody.has(environment.bill_amount_1);",
									"tests[\"Contain transport\"] = responseBody.has(environment.billtype_name_1);",
									"tests[\"Contain FDD capa test\"] = responseBody.has(environment.bill_title_1);",
									"",
									"postman.setEnvironmentVariable(\"bill_id_1\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"{{bill_title_1}}\"},\"reimburser\":{\"value\":\"{{employee_id_1}}\"},\"amount\":{\"value\":\"{{bill_amount_1}}\"},\"billType\":{\"value\":\"{{billtype_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: read all exist rec",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"get title FDD\"] = responseBody.has(environment.bill_title_1);",
									"tests[\"get title TDD\"] = responseBody.has(environment.bill_title_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/search",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"currentPage\":1,\"searchParams\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: read bill title with exceed maxlength",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"exceed maxLength\"] = jsonData.rc===10064;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"12345678901234567890123456789012345678901234567890\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: read bill title with value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"get title FDD\"] = responseBody.has(environment.bill_title_1);",
									"tests[\"get title TDD\"] = responseBody.has(environment.bill_title_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: read bill title with value capa",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"get title FDD\"] = responseBody.has(environment.bill_title_1);",
									"tests[\"get title TDD\"] = responseBody.has(environment.bill_title_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"capa\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: read bill title with value f",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"get title FDD\"] = responseBody.has(environment.bill_title_1);",
									"// tests[\"get title TDD\"] = responseBody.has(environment.bill_title_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"f\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bill: delete one doc with null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//无法测试null（被postman当成字符处理）和undefined（无法找到指定路由）"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/null",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: delete one doc",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData.rc === 0;",
									"",
									"",
									"",
									"// tests[\"Body matches string\"] = responseBody.has(\"dDate\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/{{bill_id_2}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{bill_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: delete one doc ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"check doc delete\"] = jsonData.msg === null;",
									"",
									"// tests[\"Body matches string\"] = !responseBody.has(environment.);",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(environment.bill_id_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/name",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL FINISH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData.rc === 0;",
									"",
									"postman.clearEnvironmentVariable(\"billtype_name_1\");",
									"postman.clearEnvironmentVariable(\"billtype_name_2\");",
									"postman.clearEnvironmentVariable(\"employee_name_1\");",
									"postman.clearEnvironmentVariable(\"employee_name_2\");",
									"postman.clearEnvironmentVariable(\"department_name_1\", \"MIT\");",
									"postman.clearEnvironmentVariable(\"department_name_2\", \"MODEM\");",
									"postman.clearEnvironmentVariable(\"billtype_id_1\");",
									"postman.clearEnvironmentVariable(\"billtype_id_2\");",
									"postman.clearEnvironmentVariable(\"employee_id_1\");",
									"postman.clearEnvironmentVariable(\"employee_id_2\");",
									"postman.clearEnvironmentVariable(\"department_id_1\");",
									"postman.clearEnvironmentVariable(\"department_id_2\");",
									"",
									"",
									"postman.clearEnvironmentVariable(\"bill_amount_1\", 100);",
									"postman.clearEnvironmentVariable(\"bill_amount_2\", 371);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "billtype",
			"description": "1. check empty object: values={}\n2. check name null:    values={\"name\":null}\n3. check invalid field: values={\"notExistField\":\"a\"}\n4. check too short name: values={\"name\":\"a\"}\n5. check too long name: values={\"name\":\"1234567890123456789012345\"}\n6. check chinane name: values={\"name\":\"机械部\"}\n7. check space split name: values={\"name\":\"M M M\"}\n8. check unique name: 2*values={\"name\":\"MIT\"}\n9. check parent name: values={\"name\":\"base line\"}",
			"item": [
				{
					"name": "DELETE ALL init",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"billtype_name_1\", \"taxi\");",
									"postman.setEnvironmentVariable(\"billtype_name_2\", \"transport\");",
									"postman.setEnvironmentVariable(\"billtype_name_3\", \"overtime fee\");",
									"",
									"postman.setEnvironmentVariable(\"billtype_name_4\", \"launch\");",
									"",
									"postman.setEnvironmentVariable(\"nulltype\", null);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with empty values {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69708;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with values null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"null values\"] = jsonData.rc === 69704;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":null}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with field value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"null value\"] = jsonData[\"msg\"][\"name\"][\"rc\"] === 69706;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with name filed {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: not exist field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"rc\"] === 69710;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"ab\"},\"notExist\":{\"value\":1}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with parentBillType null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.billtype_name_1;",
									"",
									"",
									"",
									"",
									"tests[\"parentBillType null\"] = result.parentBillType === undefined;",
									"tests[\"parentBillTypeFields null\"] = result.parentBillTypeFields === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_1}}\"},\"parentBillType\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL",
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with array",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69718;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":[{\"name\":{\"value\":\"{{billtype_name_1}}\"},\"name\":{\"value\":\"{{billtype_name_2}}\"}}]}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with more field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//超出最大接受字段数",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"input field exceed\"] = jsonData.rc === 69724;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"aaaa\"},\"name1\":{\"value\":\"bbbb\"},\"name2\":{\"value\":\"cccc\"},\"name3\":{\"value\":\"dddd\"},\"name4\":{\"value\":\"bbbb\"},\"name5\":{\"value\":\"cccc\"},\"name6\":{\"value\":\"dddd\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with duplicate field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.billtype_name_2;",
									"",
									"postman.setEnvironmentVariable(\"billtype_id_2\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_1}}\"},\"name\":{\"value\":\"{{billtype_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: check name unique",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"duplicate billtype name check\"] = jsonData.rc === 30002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with parentBillType",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.billtype_name_1;",
									"",
									"postman.setEnvironmentVariable(\"billtype_id_1\", result[\"_id\"]);",
									"",
									"",
									"//返回的记录有父记录的名字（冗余字段）",
									"tests[\"Body matches string\"] = result.parentBillTypeFields.name === environment.billtype_name_2;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update, except id without other field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 60002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update name with wrong format {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{billtype_id_1}}\",\"name\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update name with wrong format 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{billtype_id_1}}\",\"name\":\"a\"}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update name without _id.value",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{billtype_id_1}}\",\"name\":{\"value\":\"MODEM\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update name with format wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da2711\"},\"name\":{\"value\":\"{{billtype_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update name with not exist id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"rc\"] === 60106;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da27111\"},\"name\":{\"value\":\"{{billtype_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update name normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData.rc === 0;",
									"",
									"",
									"",
									"tests[\"Body matches string\"] = responseBody.has(environment.billtype_name_4);",
									"",
									"// postman.clearEVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_2}}\"},\"name\":{\"value\":\"{{billtype_name_4}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with name3",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"name3 created\"] = result.name === environment.billtype_name_3;",
									"",
									"postman.setEnvironmentVariable(\"billtype_id_3\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_3}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update parentBIllType normal with name3",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"parentBillType id 3 update\"] = jsonData.rc === 0;",
									"",
									"",
									"var result=jsonData.msg",
									"tests[\"parentBillType populate\"] = result.parentBillType.name === environment.billtype_name_3;",
									"tests[\"parentBillType reduntcy field update\"] = result.parentBillTypeFields.name === environment.billtype_name_3;",
									"// tests[\"Body matches string\"] = responseBody.has(environment.billtype_name_4);",
									"// postman.clearEVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_3}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update parentBillType with wrong format '1234'",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"parentBillType\"].rc === 10048;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"},\"parentBillType\":{\"value\":\"1234\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update parentBillType with self _id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 60102;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update parentBillType with normal ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"update new parent billtype\"] = jsonData[\"msg\"][\"parentBillType\"][\"_id\"] === environment.billtype_id_3;",
									"",
									"// postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_3}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL for read name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// postman.clearGlobalVariable(\"department_id\");",
									"// postman.clearGlobalVariable(\"department_update_value\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new transport",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"tranport insert\"] = result.name === environment.billtype_name_2;",
									"postman.setEnvironmentVariable(\"billtype_id_2\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new taxi with parent transport",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"transport insert\"] = result.name === environment.billtype_name_1;",
									"tests[\"parent insert\"] = result.parentBillTypeFields.name === environment.billtype_name_2;",
									"postman.setEnvironmentVariable(\"billtype_id_1\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{billtype_name_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: search with parentBillType ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//search返回的结果是个数组",
									"var result=jsonData['msg'][0]",
									"",
									"tests[\"check name taxi\"] = result.name === environment.billtype_name_1;",
									"tests[\"check parentBillType name transport\"] = result.parentBillTypeFields.name === environment.billtype_name_2;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/search",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":[{\"value\":\"{{billtype_name_1}}\"}],\"parentBillType\":{\"name\":[{\"value\":\"{{billtype_name_2}}\"}]}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: search without parentBillType  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//search返回的结果是个数组",
									"var result=jsonData['msg'][0]",
									"",
									"tests[\"check name taxi\"] = result.name === environment.billtype_name_2;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/search",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":[{\"value\":\"{{billtype_name_2}}\"}]}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: update doc with parentbilltype null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"parentBillType null\"] = result.parentBillType === undefined;",
									"tests[\"parentBillTypeFields null\"] = result.parentBillTypeFields === undefined;",
									"tests[\"name wzhan040\"] = result.name === \"launch\";",
									"// postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"},\"parentBillType\":{\"value\":null},\"name\":{\"value\":\"{{billtype_name_4}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: restore",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"leader null\"] = result.parentBillType._id === environment.billtype_id_2;",
									"tests[\"name wzhan040\"] = result.name === environment.billtype_name_1;",
									"// postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);",
									"",
									"postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_1}}\"},\"parentBillType\":{\"value\":\"{{billtype_id_2}}\"},\"name\":{\"value\":\"{{billtype_name_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: read all exist rec",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"get name\"] = responseBody.has(environment.billtype_name_1);",
									"tests[\"get parent billtype name\"] = responseBody.has(environment.billtype_name_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: read name whit parentBillType value exceed maxlength",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"exceed maxLength\"] = jsonData.rc===10044;",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentBillType\":{\"value\":\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: read name whit parentBillType  value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"taxi\"] = responseBody.has(environment.billtype_name_1);",
									"tests[\"transport\"] = responseBody.has(environment.billtype_name_2);",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentBillType\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: read name whit parentBillType  value trans",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"transport\"] = responseBody.has(environment.billtype_name_2);",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentBillType\":{\"value\":\"trans\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: read name with parentBillType  value t",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// tests[\"MIT created\"] = responseBody.has(\"MIT\");",
									"tests[\"taxi\"] = responseBody.has(environment.billtype_name_1);",
									"tests[\"transport\"] = responseBody.has(environment.billtype_name_2);",
									"// tests[\"overtime fee\"] = responseBody.has(environment.billtype_name_3);",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentBillType\":{\"value\":\"t\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: delete one doc with wrong id format",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//无法测试null（被postman当成字符处理）和undefined（无法找到指定路由）"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/asdf",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: delete one doc",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData.rc === 0;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/{{billtype_id_2}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{billtype_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: check delete doc still show for readName",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"check doc delete\"] = jsonData.msg === null;",
									"",
									"// tests[\"Body matches string\"] = !responseBody.has(environment.);",
									"",
									"tests[\"Body matches string\"] = responseBody.has(environment.billtype_id_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL FINISH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData.rc === 0;",
									"",
									"postman.clearEnvironmentVariable(\"billtype_name_1\");",
									"postman.clearEnvironmentVariable(\"billtype_name_2\");",
									"postman.clearEnvironmentVariable(\"billtype_name_3\");",
									"postman.clearEnvironmentVariable(\"billtype_name_4\");",
									"postman.clearEnvironmentVariable(\"billtype_id_1\");",
									"postman.clearEnvironmentVariable(\"billtype_id_2\");",
									"postman.clearEnvironmentVariable(\"billtype_id_3\");",
									"postman.clearEnvironmentVariable(\"billtype_id_4\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "department",
			"description": "1. check empty object: values={}\n2. check name null:    values={\"name\":null}\n3. check invalid field: values={\"notExistField\":\"a\"}\n4. check too short name: values={\"name\":\"a\"}\n5. check too long name: values={\"name\":\"1234567890123456789012345\"}\n6. check chinane name: values={\"name\":\"机械部\"}\n7. check space split name: values={\"name\":\"M M M\"}\n8. check unique name: 2*values={\"name\":\"MIT\"}\n9. check parent name: values={\"name\":\"base line\"}",
			"item": [
				{
					"name": "DELETE ALL init",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"department_departmentName_1\", \"MIT\");",
									"postman.setEnvironmentVariable(\"department_departmentName_2\", \"MODEM\");",
									"postman.setEnvironmentVariable(\"department_departmentName_3\", \"LTE\");",
									"",
									"postman.setEnvironmentVariable(\"department_departmentName_update\", \"FI\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with empty values {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69708;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with values null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69704;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":null}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with field value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"require field name with value null\"] = jsonData[\"msg\"][\"name\"][\"rc\"] === 69706;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with name filed {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: not exist field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"rc\"] === 69710;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"ab\"},\"notExist\":{\"value\":1}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with parentDepartment null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.department_departmentName_1;",
									"",
									"",
									"",
									"",
									"tests[\"parentBillType null\"] = result.parentDepartment === undefined;",
									"tests[\"parentBillTypeFields null\"] = result.parentDepartmentFields === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_1}}\"},\"parentDepartment\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL",
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with array",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69718;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":[{\"name\":{\"value\":\"{{department_departmentName_1}}\"},\"name\":{\"value\":\"{{department_departmentName_2}}\"}}]}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with more field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//超出最大接受字段数",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"input field exceed\"] = jsonData.rc === 69724;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_1}}\"},\"name1\":{\"value\":\"{{department_departmentName_2}}\"},\"name2\":{\"value\":\"a\"},\"name3\":{\"value\":\"3\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with duplicate field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.department_departmentName_2;",
									"",
									"postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_1}}\"},\"name\":{\"value\":\"{{department_departmentName_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: check name unique",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 30002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new with parentDepartment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.department_departmentName_1;",
									"",
									"postman.setEnvironmentVariable(\"department_departmentId_1\", result[\"_id\"]);",
									"",
									"//返回的记录有父记录的名字",
									"tests[\"Body matches string\"] = responseBody.has(environment.department_departmentName_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_1}}\"},\"parentDepartment\":{\"value\":\"{{department_departmentId_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update, except id without other field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 60002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update name with wrong format {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{department_departmentId_2}}\",\"name\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update name with wrong format 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{department_departmentId_2}}\",\"name\":\"a\"}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update name without _id.value",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{department_department_id}}\",\"name\":{\"value\":\"MODEM\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update name with format wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da2711\"},\"name\":{\"value\":\"{{department_departmentName_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update parentDepartment with not exist id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"rc\"] === 60206;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da27111\"},\"name\":{\"value\":\"asdf\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update required field with value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"msg\"][\"name\"][\"rc\"] === 69706;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_1}}\"},\"name\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update name normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData.rc === 0;",
									"",
									"",
									"",
									"tests[\"Body matches string\"] = responseBody.has(environment.department_departmentName_update);",
									"",
									"",
									"// postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_2}}\"},\"name\":{\"value\":\"{{department_departmentName_update}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update parentDepartment with wrong format '1234'",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"parentDepartment\"][\"rc\"] === 10008;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_1}}\"},\"parentDepartment\":{\"value\":\"1234\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update parentDepartment with self _id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 60202;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_1}}\"},\"parentDepartment\":{\"value\":\"{{department_departmentId_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new LTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.department_departmentName_3;",
									"",
									"postman.setEnvironmentVariable(\"department_departmentId_3\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_3}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update parentDepartment with normal ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"empty values\"] = jsonData.rc === 60202;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_1}}\"},\"parentDepartment\":{\"value\":\"{{department_departmentId_3}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL for read name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// postman.clearGlobalVariable(\"department_id\");",
									"// postman.clearGlobalVariable(\"department_update_value\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new MIT",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"MIT insert\"] = result.name === environment.department_departmentName_1;",
									"postman.setEnvironmentVariable(\"department_departmentId_1\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new MODEM with parent MIT",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"MIT insert\"] = result.name === environment.department_departmentName_2;",
									"tests[\"MODEM insert\"] = result.parentDepartmentFields.name === environment.department_departmentName_1;",
									"postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_departmentName_2}}\"},\"parentDepartment\":{\"value\":\"{{department_departmentId_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: update with parentDepartment null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"parent department null\"] = result.parentDepartment === undefined;",
									"tests[\"parentDepartmentFields  null\"] = result.parentDepartmentFields === undefined;",
									"tests[\"department name change to test\"] = result.name === environment.department_departmentName_update;",
									"// postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);",
									"",
									"postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_2}}\"},\"parentDepartment\":{\"value\":null},\"name\":{\"value\":\"{{department_departmentName_update}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: restore",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"restore parent department\"] = result.parentDepartment._id === environment.department_departmentId_1;",
									"tests[\"restore department name\"] = result.name === environment.department_departmentName_2;",
									"// postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);",
									"",
									"// postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_2}}\"},\"parentDepartment\":{\"value\":\"{{department_departmentId_1}}\"},\"name\":{\"value\":\"{{department_departmentName_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read all exist rec",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"MIT created\"] = responseBody.has(\"MIT\");",
									"tests[\"MODEM created\"] = responseBody.has(\"MODEM\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with parentDepartment exceed maxLenght",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"exceed maxLength\"] = jsonData.rc===10004;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentDepartment\":{\"value\":\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with parentDepartment value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"MIT\"] = responseBody.has(environment.department_departmentName_1);",
									"tests[\"MODEM\"] = responseBody.has(environment.department_departmentName_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentDepartment\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with parentDepartment value MI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"MIT\"] = responseBody.has(environment.department_departmentName_1);",
									"// tests[\"MODEM\"] = responseBody.has(environment.department_departmentName_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentDepartment\":{\"value\":\"MI\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with parentDepartment value m",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"MIT\"] = responseBody.has(environment.department_departmentName_1);",
									"tests[\"MODEM\"] = responseBody.has(environment.department_departmentName_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"parentDepartment\":{\"value\":\"m\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: delete one doc with wrong format id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//无法测试null（被postman当成字符处理）和undefined（无法找到指定路由）"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/null",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: delete one doc ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData.rc === 0;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/{{department_departmentId_2}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{department_departmentId_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: check delete doc cant be read",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"check doc delete\"] = jsonData.msg === null;",
									"",
									"",
									"",
									"tests[\"Body matches string\"] = responseBody.has(environment.department_departmentId_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL FINISH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"DELERE ALL OK\"] = jsonData.rc === 0;",
									"",
									"postman.clearEnvironmentVariable(\"department_departmentName_1\");",
									"postman.clearEnvironmentVariable(\"department_departmentName_2\");",
									"postman.clearEnvironmentVariable(\"department_departmentName_3\");",
									"postman.clearEnvironmentVariable(\"department_departmentId_1\");",
									"postman.clearEnvironmentVariable(\"department_departmentId_2\");",
									"postman.clearEnvironmentVariable(\"department_departmentId_3\");",
									"",
									"postman.clearEnvironmentVariable(\"department_departmentName_update\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "employee",
			"description": "",
			"item": [
				{
					"name": "DELETE ALL init",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"employee_name_1\", \"wzhan039\");",
									"postman.setEnvironmentVariable(\"employee_name_2\", \"xubl\");",
									"postman.setEnvironmentVariable(\"employee_name_3\", \"juanw\");",
									"postman.setEnvironmentVariable(\"employee_name_4\", \"wzhan040\");",
									"",
									"postman.setEnvironmentVariable(\"department_name_1\", \"MIT\");",
									"",
									"postman.setEnvironmentVariable(\"currentCat\", \"employee\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with empty values {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69708;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with values null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69704;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":null}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create  with field value null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"name\"][\"rc\"] === 69706;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with name filed {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with not exist field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"rc\"] === 69710;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"ab\"},\"notExist\":{\"value\":1}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.department_name_1;",
									"",
									"postman.setEnvironmentVariable(\"department_departmentId_1\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_name_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: create new with leader null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.employee_name_1;",
									"",
									"",
									"",
									"",
									"tests[\"parentBillType null\"] = result.leader === undefined;",
									"tests[\"parentBillTypeFields null\"] = result.leaderFields === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_1}}\"},\"department\":{\"value\":\"{{department_departmentId_1}}\"},\"leader\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL",
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create new department",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"name\"] === environment.department_name_1;",
									"postman.setEnvironmentVariable(\"department_id_1\", jsonData[\"msg\"][\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_name_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with birthday null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"rc 0\"] = jsonData[\"rc\"] === 0;",
									"tests[\"birthday null delete\"] = jsonData[\"msg\"][\"birthDay\"] === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"ab\"},\"birthDay\":{\"value\":null},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create new with array",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69718;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":[{\"name\":{\"value\":\"{{employee_name_2}}\"},\"name\":{\"value\":\"{{employee_name_1}}\"}}]}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with more field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//超出最大接受字段数",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"input field exceed\"] = jsonData.rc === 69724;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"aaaa\"},\"name1\":{\"value\":\"bbbb\"},\"name2\":{\"value\":\"cccc\"},\"name3\":{\"value\":\"dddd\"},\"name4\":{\"value\":\"bbbb\"},\"name5\":{\"value\":\"cccc\"},\"name6\":{\"value\":\"dddd\"},\"name7\":{\"value\":\"dddd\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create with duplicate field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"empty values\"] = result.name === environment.employee_name_2;",
									"",
									"postman.setEnvironmentVariable(\"employee_id_2\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_1}}\"},\"name\":{\"value\":\"{{employee_name_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: check name unique",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"duplicate name\"] = jsonData.rc === 30002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create  with leader",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"employee 1 wzhan039 created\"] = result.name === environment.employee_name_1;",
									"",
									"postman.setEnvironmentVariable(\"employee_id_1\", result[\"_id\"]);",
									"",
									"//返回的记录有父记录的名字",
									"tests[\"xubol create with leader juanw\"] = responseBody.has(environment.employee_name_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_1}}\"},\"leader\":{\"value\":\"{{employee_id_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update, except id without other field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 60002;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update name with wrong format {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_Id_1}}\"},\"name\":{}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update name with null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"name\"].rc === 69706;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_Id_1}}\"},\"name\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update name with wrong format 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_Id_1}}\"},\"name\":\"a\"}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update id without value",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 69722;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":\"{{employee_Id_1}}\",\"name\":{\"value\":\"wzhan040\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update name with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg'][0]",
									"//tests[\"department MODEM update\"] = result.name === globals.department_update_value;",
									"tests[\"department MODEM update\"] = jsonData[\"rc\"] === 60306;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"7802e46dc19c632c0da27111\"},\"name\":{\"value\":\"{{employee_name_4}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update leader with wrong format '1234'",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"leader\"].rc === 10026;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_1}}\"},\"leader\":{\"value\":\"1234\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update leader with self _id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData.rc === 60304;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_1}}\"},\"leader\":{\"value\":\"{{employee_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: create new- juanw",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//重复的field会在JSON.parse中被消除（后覆盖前）",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"tests[\"create new employee juanw\"] = result.name === environment.employee_name_3;",
									"",
									"postman.setEnvironmentVariable(\"employee_id_3\", result[\"_id\"]);",
									"",
									"// tests[\"duplicate field\"] = result.value === 69726;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_3}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update leader with juanw ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"leader\"][\"name\"] === environment.employee_name_3;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_1}}\"},\"leader\":{\"value\":\"{{employee_id_3}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL for read name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// postman.clearGlobalVariable(\"department_id\");",
									"// postman.clearGlobalVariable(\"department_update_value\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create new department again",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"empty values\"] = jsonData[\"msg\"][\"name\"] === environment.department_name_1;",
									"postman.setEnvironmentVariable(\"department_id_1\", jsonData[\"msg\"][\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{department_name_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create new xubli",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"MIT insert\"] = result.name === environment.employee_name_2;",
									"postman.setEnvironmentVariable(\"employee_id_2\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create new juanw",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"MIT insert\"] = result.name === environment.employee_name_3;",
									"postman.setEnvironmentVariable(\"employee_id_3\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_3}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: create new wzhan039 with leader xubol",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"wzhan039 insert\"] = result.name === environment.employee_name_1;",
									"tests[\"leader xubli insert\"] = result.leaderFields.name === environment.employee_name_2;",
									"postman.setEnvironmentVariable(\"employee_id_1\", result[\"_id\"]);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{employee_name_1}}\"},\"leader\":{\"value\":\"{{employee_id_2}}\"},\"department\":{\"value\":\"{{department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "billtype: search with leader xuboli",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//search返回的结果是个数组",
									"var result=jsonData['msg'][0]",
									"",
									"tests[\"check name wzhan039\"] = result.name === environment.employee_name_1;",
									"tests[\"check leader name xuboli\"] = result.leaderFields.name === environment.employee_name_2;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/search",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":[{\"value\":\"{{employee_name_1}}\"}],\"leader\":{\"name\":[{\"value\":\"{{employee_name_2}}\"}]}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: update wzhan039 with leader null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"leader null\"] = result.leader === undefined;",
									"tests[\"leaderFields null\"] = result.leaderFields === undefined;",
									"tests[\"name wzhan040\"] = result.name === environment.employee_name_4;",
									"// postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);",
									"",
									"// postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_1}}\"},\"leader\":{\"value\":null},\"name\":{\"value\":\"{{employee_name_4}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee:restore",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"tests[\"restore leader\"] = result.leader._id === environment.employee_id_2;",
									"tests[\"restore name\"] = result.name === environment.employee_name_1;",
									"tests[\"restore department\"] = result.department._id === environment.department_id_1;",
									"// postman.setEnvironmentVariable(\"department_departmentId_2\", result[\"_id\"]);",
									"",
									"// postman.clearEnvironmentVariable(\"variable_key\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_1}}\"},\"leader\":{\"value\":\"{{employee_id_2}}\"},\"name\":{\"value\":\"{{employee_name_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: read all exist rec",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"wzhan039  read\"] = responseBody.has(environment.employee_name_1);",
									"tests[\"xubli read\"] = responseBody.has(environment.employee_name_2);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with leader exceed maxLenght",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"exceed maxLength\"] = jsonData.rc===10022;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"leader\":{\"value\":\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with leader null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"wzhan039\"] = responseBody.has(environment.employee_name_1);",
									"tests[\"xub\"] = responseBody.has(environment.employee_name_2);",
									"tests[\"juanw\"] = responseBody.has(environment.employee_name_3);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"leader\":{\"value\":null}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with leader xu",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// tests[\"wzhan039\"] = responseBody.has(environment.employee_name_1);",
									"tests[\"xub\"] = responseBody.has(environment.employee_name_2);",
									"// tests[\"juanw\"] = responseBody.has(environment.employee_name_3);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"leader\":{\"value\":\"xu\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read name with leader w",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"wzhan039\"] = responseBody.has(environment.employee_name_1);",
									"// tests[\"xub\"] = responseBody.has(environment.employee_name_2);",
									"tests[\"juanw\"] = responseBody.has(environment.employee_name_3);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"leader\":{\"value\":\"w\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "department: read department name with value MIT",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"wzhan039\"] = responseBody.has(environment.department_name_1);",
									"// tests[\"xub\"] = responseBody.has(environment.employee_name_2);",
									"// tests[\"juanw\"] = responseBody.has(environment.employee_name_3);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"department\":{\"value\":\"MIT\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: delete one doc with null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData[\"msg\"][\"_id\"][\"rc\"] === 69714;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//无法测试null（被postman当成字符处理）和undefined（无法找到指定路由）"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/{{currentCat}}/null",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: delete xubl",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"delete \"] = jsonData.rc === 0;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/{{employee_id_2}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"_id\":{\"value\":\"{{employee_id_2}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "employee: check deleted  but still show for readName",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"wzhan039\"] = responseBody.has(environment.employee_name_1);",
									"tests[\"xub\"] = responseBody.has(environment.employee_name_2);",
									"tests[\"juanw\"] = responseBody.has(environment.employee_name_3);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee/name",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE ALL FINISH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"wrong input value format\"] = jsonData.rc === 0;",
									"",
									"postman.clearEnvironmentVariable(\"billtype_name_1\");",
									"postman.clearEnvironmentVariable(\"billtype_name_2\");",
									"postman.clearEnvironmentVariable(\"billtype_name_3\");",
									"postman.clearEnvironmentVariable(\"billtype_name_4\");",
									"postman.clearEnvironmentVariable(\"billtype_id_1\");",
									"postman.clearEnvironmentVariable(\"billtype_id_2\");",
									"postman.clearEnvironmentVariable(\"billtype_id_3\");",
									"postman.clearEnvironmentVariable(\"billtype_id_4\");",
									"",
									"postman.clearEnvironmentVariable(\"department_name_1\");",
									"",
									"postman.clearEnvironmentVariable(\"currentCat\");"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "normal",
			"description": "1. create department \"fpga\"\n2. create employee \"zhangwei\"\n3. create billType \"taxi\"\n4. create bill wiht title=\"work_taxi\", amount=10, billType=\"taxi\", remibuser=\"zhangwei\"\n5. check the new created recorder's field name are correct",
			"item": [
				{
					"name": "127.0.0.1:3000",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"normal_department_name\", \"FPGA\");",
									"postman.setEnvironmentVariable(\"normal_employee_name\", \"wzhan039\");",
									"postman.setEnvironmentVariable(\"normal_billType_name\", \"taxi\");",
									"postman.setEnvironmentVariable(\"normal_bill_title\", \"overtime taxi\");",
									"postman.setEnvironmentVariable(\"normal_bill_amount\", 10);",
									"",
									"//for update test",
									"postman.setEnvironmentVariable(\"normal_department_name1\", \"DSP\");",
									"postman.setEnvironmentVariable(\"normal_employee_name1\", \"xubl\");",
									"postman.setEnvironmentVariable(\"normal_billType_name1\", \"lunch\");",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "127.0.0.1:3000/department",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.department_id=result[\"_id\"]",
									"postman.setEnvironmentVariable(\"normal_department_id\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check department create\"] = result.name === environment.normal_department_name;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{normal_department_name}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "127.0.0.1/employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"// postman.setEnvironmentVariable(\"employee_id\", result[\"_id\"]);",
									"",
									"// tests[\"check employee create\"] = result.name === environment.employee_name;",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.employee_id=result[\"_id\"]",
									"postman.setEnvironmentVariable(\"normal_employee_id\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check employee create\"] = result.name === environment.normal_employee_name;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{normal_employee_name}}\"},\"department\":{\"value\":\"{{normal_department_id}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "127.0.0.1:3000/billType",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"// postman.setEnvironmentVariable(\"billType_id\", result[\"_id\"]);",
									"",
									"",
									"// tests[\"check billType create\"] = result.name === environment.billType_name;",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.billType_id=result[\"_id\"]",
									"postman.setEnvironmentVariable(\"normal_billType_id\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check billType create\"] = result.name === environment.normal_billType_name;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/billType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{normal_billType_name}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "127.0.0.1:3000/bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"",
									"tests[\"check bill create:title\"] = result.title === environment.normal_bill_title;",
									"tests[\"check bill create:amount\"] = result.amount.toString() === environment.normal_bill_amount;",
									"tests[\"check bill create:billType\"] = result.billType[\"_id\"] === environment.normal_billType_id;",
									"tests[\"check bill create:reimburser\"] = result.reimburser[\"_id\"] === environment.normal_employee_id;",
									"",
									"",
									"tests[\"Body matches string\"] = responseBody.has(environment.normal_employee_name);",
									"tests[\"Body matches string\"] = responseBody.has(environment.normal_billType_name);"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"title\":{\"value\":\"{{normal_bill_title}}\"},\"amount\":{\"value\":\"{{normal_bill_amount}}\"},\"billType\":{\"value\":\"{{normal_billType_id}}\"},\"reimburser\":{\"value\":\"{{normal_employee_id}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "127.0.0.1:3000/bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg'][0]",
									"",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"",
									"tests[\"check bill create:title\"] = result.title === environment.normal_bill_title;",
									"tests[\"check bill create:amount\"] = result.amount.toString() === environment.normal_bill_amount;",
									"tests[\"check bill create:billType name\"] = result.billType.name === environment.normal_billType_name;",
									"tests[\"check bill create:reimburser name\"] = result.reimburser.name === environment.normal_employee_name;",
									"",
									"",
									"",
									"",
									"// postman.clearEnvironmentVariable(\"normal\");",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create new department  DSP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.department_id=result[\"_id\"]",
									"postman.setEnvironmentVariable(\"normal_department_id_1\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check department create\"] = result.name === environment.normal_department_name1;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/department",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{normal_department_name1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create new employee xubl",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var result=jsonData['msg']",
									"// postman.setEnvironmentVariable(\"employee_id\", result[\"_id\"]);",
									"",
									"// tests[\"check employee create\"] = result.name === environment.employee_name;",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.employee_id=result[\"_id\"]",
									"postman.setEnvironmentVariable(\"normal_employee_id_1\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check employee create\"] = result.name === environment.normal_employee_name1;"
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/employee",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{\"name\":{\"value\":\"{{normal_employee_name1}}\"},\"department\":{\"value\":\"{{normal_department_id_1}}\"}}}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "static",
			"description": "",
			"item": [
				{
					"name": "static: searchParams check : empty {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg']",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.department_id=result[\"_id\"]",
									"//postman.setEnvironmentVariable(\"normal_department_id_1\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check {}\"] = jsonData.rc === 69662;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/static/getGroupCapital",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"values\":{}}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "static: searchParams check : searchParams {}",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//var result=jsonData['msg']",
									"",
									"// var normal=JSON.parse(environment.normal)",
									"// normal.department_id=result[\"_id\"]",
									"//postman.setEnvironmentVariable(\"normal_department_id_1\", result[\"_id\"]);",
									"",
									"",
									"tests[\"check {}\"] = jsonData.rc === 69660;",
									""
								]
							}
						}
					],
					"request": {
						"url": "127.0.0.1:3000/bill/static/getStaticBillType",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}