{"version":3,"sources":["generateClientRuleAttrQryerField.js"],"names":[],"mappings":"AAAA;;;;AAII;;AACJ,QAAQ,gBAAR;AACA,QAAQ,qBAAR;AACA,IAAI,WAAS,QAAQ,gCAAR,EAA0C,IAAvD;AACA,IAAI,aAAW,QAAQ,yCAAR,EAAmD,SAAlE;AACA,IAAI,KAAG,QAAQ,IAAR,CAAP;;AAEA,IAAI,YAAU,EAAd;AACA,IAAI,kBAAgB,EAApB;AACA;;;AAIA,IAAI,QAAM,QAAQ,8BAAR,EAAwC,KAAlD;;AAEA;AACA,IAAI,kBAAgB;AAChB,UAAK,CAAC,MAAD,EAAQ,mBAAR,EAA4B,OAA5B,EAAoC,OAApC,EAA4C,OAA5C,CADW;AAEhB,gBAAW,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB,CAFK;AAGhB,cAAS,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB,CAHO;AAIhB,cAAS,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB,CAJO;AAKhB,UAAK,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB;AALW,CAApB;;AAQA;AACA,IAAI,kBAAgB;AAChB,UAAK,CAAC,MAAD,EAAQ,mBAAR,EAA4B,OAA5B,CADW;AAEhB,gBAAW,CAAC,OAAD,CAFK;AAGhB,cAAS,CAAC,OAAD,CAHO;AAIhB,cAAS,CAAC,OAAD,CAJO;AAKhB,UAAK,CAAC,OAAD;AALW,CAApB;;AAQA,IAAI,YAAU;AACV,gBAAW;AACP,0BAAiB;AADV,KADD;AAIV,cAAS;AACL,gBAAO;AADF,KAJC;AAQV,cAAS;AACL,wBAAe;AADV,KARC;AAWV,UAAK;AACD,kBAAS,eADR;AAED,oBAAW;AAFV;AAXK,CAAd;;AAiBA,SAAS,uBAAT,CAAiC,UAAjC,EAA4C,CAA5C,EAA8C,SAA9C;AACA,QAAQ,GAAR,CAAY,UAAU,YAAV,CAAZ;AACA,SAAS,qBAAT,CAA+B,SAA/B,EAAyC,eAAzC;AACA,QAAQ,GAAR,CAAY,UAAU,YAAV,CAAZ;AACA,SAAS,mBAAT,CAA6B,SAA7B,EAAuC,SAAvC;AACA,GAAG,SAAH,CAAa,eAAb,EAA6B,KAAK,SAAL,CAAe,SAAf,CAA7B;;AAEA,SAAS,kBAAT,CAA4B,UAA5B,EAAuC,CAAvC,EAAyC,eAAzC;AACA,SAAS,qBAAT,CAA+B,eAA/B,EAA+C,eAA/C;AACA,SAAS,mBAAT,CAA6B,eAA7B,EAA6C,SAA7C;AACA,GAAG,SAAH,CAAa,qBAAb,EAAmC,KAAK,SAAL,CAAe,eAAf,CAAnC;;AAEA;AACA,IAAI,qCAAmC,SAAnC,kCAAmC,CAAS,SAAT,EAAmB;AACtD,QAAI,SAAO,EAAX;AACA,SAAI,IAAI,IAAR,IAAgB,SAAhB,EAA0B;AACtB,eAAO,IAAP,IAAa,EAAb;AACA,aAAI,IAAI,KAAR,IAAiB,UAAU,IAAV,CAAjB,EAAiC;AAC7B,gBAAI,YAAU,EAAd;AACA,sBAAU,OAAV,IAAmB,UAAU,IAAV,EAAgB,KAAhB,EAAuB,aAAvB,CAAnB;AACA,sBAAU,KAAV,IAAiB,KAAjB;AACA,mBAAO,IAAP,EAAa,IAAb,CAAkB,SAAlB;AACH;AACJ;AACD,WAAO,MAAP;AACH,CAZD;AAaA,IAAI,SAAO,mCAAmC,SAAnC,CAAX;AACA;AACA,GAAG,SAAH,CAAa,gBAAb,EAA8B,KAAK,SAAL,CAAe,MAAf,CAA9B;;AAEA,QAAQ,GAAR,CAAY,MAAZ","file":"generateClientRuleAttrQryerField-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-09-08.\r\n * dbstructure==>inputRule==>clientInputRule/clientInputAttr==>deleteNonNeededObject==>objectIdToRealField==>最终结果\r\n */\r\n    'use strict'\r\nrequire(\"babel-polyfill\");\r\nrequire(\"babel-core/register\")\r\nvar miscFunc=require(\"../server/assist/misc-compiled\").func\r\nvar ruleDefine=require(\"../server/define/validateRule/inputRule\").inputRule\r\nvar fs=require('fs')\r\n\r\nvar inputAttr={}\r\nvar clientInputRule={}\r\n/*generateClientDefine(ruleDefine,2,inputAttr)\r\n console.log(inputAttr)*/\r\n\r\n\r\nvar regex=require('../server/define/regex/regex').regex\r\n\r\n//根据inputRule产生，不需要在客户端使用的字段\r\nvar skipListForRule={\r\n    user:['salt','encryptedPassword','cDate','uDate','dDate'],\r\n    department:['cDate','uDate','dDate'],\r\n    employee:['cDate','uDate','dDate'],\r\n    billType:['cDate','uDate','dDate'],\r\n    bill:['cDate','uDate','dDate'],\r\n}\r\n\r\n//attr只负责显示，不负责check input\r\nvar skipListForAttr={\r\n    user:['salt','encryptedPassword','dDate'],\r\n    department:['dDate'],\r\n    employee:['dDate'],\r\n    billType:['dDate'],\r\n    bill:['dDate'],\r\n}\r\n\r\nvar matchList={\r\n    department:{\r\n        parentDepartment:'department.name'\r\n    },\r\n    employee:{\r\n        leader:'employee.name',\r\n        //department:'department.name'\r\n    },\r\n    billType:{\r\n        parentBillType:'billType.name'\r\n    },\r\n    bill:{\r\n        billType:'billType.name',\r\n        reimburser:'employee.name'\r\n    }\r\n}\r\n\r\nmiscFunc.generateClientInputAttr(ruleDefine,2,inputAttr)\r\nconsole.log(inputAttr['department'])\r\nmiscFunc.deleteNonNeededObject(inputAttr,skipListForAttr)\r\nconsole.log(inputAttr['department'])\r\nmiscFunc.objectIdToRealField(inputAttr,matchList)\r\nfs.writeFile('inputAttr.txt',JSON.stringify(inputAttr))\r\n\r\nmiscFunc.generateClientRule(ruleDefine,2,clientInputRule)\r\nmiscFunc.deleteNonNeededObject(clientInputRule,skipListForRule)\r\nmiscFunc.objectIdToRealField(clientInputRule,matchList)\r\nfs.writeFile('clientInputRule.txt',JSON.stringify(clientInputRule))\r\n\r\n//从inputAttr提取出用于ng-select(ng-select接受格式为数组，每个元素包含key,value，key为显示在页面上)\r\nvar extractSelectKeyValueFromInputAttr=function(inputAttr){\r\n    let result={}\r\n    for(let coll in inputAttr){\r\n        result[coll]=[]\r\n        for(let field in inputAttr[coll]){\r\n            let tmpResult={}\r\n            tmpResult['value']=inputAttr[coll][field]['chineseName']\r\n            tmpResult['key']=field\r\n            result[coll].push(tmpResult)\r\n        }\r\n    }\r\n    return result\r\n}\r\nvar result=extractSelectKeyValueFromInputAttr(inputAttr)\r\n// console.log(result)\r\nfs.writeFile('queryField.txt',JSON.stringify(result))\r\n\r\nconsole.log('done')"]}