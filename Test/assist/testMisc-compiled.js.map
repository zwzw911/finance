{"version":3,"sources":["testMisc.js"],"names":[],"mappings":"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","file":"testMisc-compiled.js","sourcesContent":["/**\r\n * Created by ada on 2015/7/5.\r\n */\r\n 'use strict'\r\nrequire(\"babel-polyfill\");\r\nrequire(\"babel-core/register\")\r\n\r\nvar testModule=require('../../server/assist/misc').func;\r\nvar miscError=require('../../server/define/error/nodeError').nodeError.assistError.misc\r\nvar gmError=require('../../server/define/error/nodeError').nodeError.assistError.gmImage\r\n/*          for generateRandomString test       */\r\nvar regex=require('../../server/define/regex/regex').regex\r\nvar randomStringTypeEnum=require('../../server/define/enum/node').node.randomStringType\r\n\r\nvar dataTypeCheck=function(test){\r\n\ttest.expect(46);\r\n\t\r\n\tlet func=testModule.dataTypeCheck\r\n    let result,value,tmp\r\n    /*          isSetValue             */\r\n    //undefined variant\r\n    result=func.isSetValue(value)\r\n    test.equal(result,false,'isSetValue: check undefined variant failed')\r\n    //null variant\r\n    value=null\r\n    result=func.isSetValue(value)\r\n    test.equal(result,false,'isSetValue: check null variant failed')\r\n    /*          isEmpty             */\r\n/*    //not exist variant\r\n    result=func.isEmpty(a)\r\n    test.equal(result,true,'isEmpty: check not exist variant failed')*/\r\n\r\n    //string\r\n    value=''\r\n    result=func.isEmpty(value)\r\n    test.equal(result,true,'isEmpty: check empty string failed')\r\n    value='     '\r\n    result=func.isEmpty(value)\r\n    test.equal(result,true,'isEmpty: check whitespace string failed')\r\n    value=[]\r\n    result=func.isEmpty(value)\r\n    test.equal(result,true,'isEmpty: check empty array failed')\r\n    value={}\r\n    result=func.isEmpty(value)\r\n    test.equal(result,true,'isEmpty: check empty object failed')\r\n    value=[1]\r\n    result=func.isEmpty(value)\r\n    test.equal(result,false,'isEmpty: check not empty array failed')\r\n    value={a:1}\r\n    result=func.isEmpty(value)\r\n    test.equal(result,false,'isEmpty: check not empty object failed')\r\n    //isString\r\n    value=''\r\n    result=func.isString(value)\r\n    test.equal(result,true,'isString: check blank string failed')\r\n    value='   '\r\n    result=func.isString(value)\r\n    test.equal(result,true,'isString: check whitespace string failed')\r\n    value=123\r\n    result=func.isString(value)\r\n    test.equal(result,false,'isString: check number failed')\r\n    value=[]\r\n    result=func.isString(value)\r\n    test.equal(result,false,'isString: check array failed')\r\n    value={}\r\n    result=func.isString(value)\r\n    test.equal(result,false,'isString: check object failed')\r\n    //isArray\r\n    value={}\r\n    result=func.isArray(value)\r\n    test.equal(result,false,'isArray: check not array failed')\r\n    value=[]\r\n    result=func.isArray(value)\r\n    test.equal(result,true,'isArray: check array failed')\r\n    //isObject\r\n    value={}\r\n    result=func.isObject(value)\r\n    test.equal(result,true,'isObject: check object failed')\r\n    value=[]    //array和object严格区分（js中，array是object）\r\n    result=func.isObject(value)\r\n    test.equal(result,false,'isObject: check object(array) failed')\r\n    //isDate\r\n    value='2016'        //转换成2016-01-01\r\n    result=func.isDate(value)\r\n    test.equal(result.toLocaleString(),'2016-01-01 08:00:00','isDate: check year only date failed')\r\n    value='2016-02-30'              //toLocaleString会自动转换成合适的日期（2016-03-01 08:00:00，8点是CST）\r\n    result=func.isDate(value)\r\n    test.equal(result.toLocaleString(),'2016-03-01 08:00:00','isDate: check invalid date failed')\r\n    value='2016-02-02 25:30'\r\n    result=func.isDate(value)\r\n    test.equal(result,false,'isDate: check invalid time failed')\r\n    value='2016-02-02 23:30'\r\n    result=func.isDate(value)\r\n    test.equal(result.toLocaleString(),'2016-02-02 23:30:00','isDate: check valid time - failed')\r\n    value='2016/02/02'\r\n    result=func.isDate(value)\r\n    test.equal(result.toLocaleString(),'2016-02-02 00:00:00','isDate: check valid date / failed')\r\n    //isInt\r\n    value=123456789.0\r\n    result=func.isInt(value)\r\n    test.equal(result,123456789,'isInt: check int failed,number float with fraction 0 is int')\r\n    value=123456789.1\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed,number float with fraction not 0 is not int')\r\n    value='123456789.0'\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed,string float with fraction 0 not int')\r\n    value='123456789.1'\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed,string float  with fraction not 0 not int')\r\n    value=123456789123456789123456789123456789123456789123456789\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed,exceed maxim int')\r\n    value=-123\r\n    result=func.isInt(value)\r\n    test.equal(result,-123,'isInt: check valid int failed')\r\n    value='123.0'\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed, value string is float')\r\n    value='123a'\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed, value contain not number char')\r\n    value=[1]\r\n    result=func.isInt(value)\r\n    test.equal(result,false,'isInt: check int failed, value is arry')\r\n    //isNumber\r\n    value=123456789.0\r\n    result=func.isNumber(value)\r\n    test.equal(result,false,'isNumber: check number failed,float not number')\r\n    value='123456789.0'\r\n    result=func.isNumber(value)\r\n    test.equal(result,false,'isNumber: check number failed,string is float')\r\n    value=-123456789123456789123456789123456789123456789123456789\r\n    result=func.isNumber(value)\r\n    test.equal(result,false,'isNumber: check non string negative number failed')\r\n    value='123456789123456789123456789123456789123456789123456789'\r\n    result=func.isNumber(value)\r\n    test.equal(result,true,'isNumber: check string positive number failed')\r\n    value='-123456789123456789123456789123456789123456789123456789'\r\n    result=func.isNumber(value)\r\n    test.equal(result,true,'isNumber: check string negative number failed')\r\n    //isFolat\r\n    value=123456789.0\r\n    result=func.isFloat(value)\r\n    test.equal(result,123456789,'isFloat: check float failed')\r\n    value='123456789.0'\r\n    result=func.isFloat(value)\r\n    test.equal(result,123456789,'isFloat: check string float failed')\r\n    value='-0.123456789'\r\n    result=func.isFloat(value)\r\n    test.equal(result,-0.123456789,'isFloat: check negative string float failed')\r\n    value='0.1.0'\r\n    result=func.isFloat(value)\r\n    test.equal(result,false,'isFloat: check invalid float failed')\r\n    value=123456789123456789123456789123456789123456789123456789\r\n    result=func.isFloat(value)\r\n    test.equal(result,123456789123456789123456789123456789123456789123456789,'isFloat: check large number failed')\r\n    value=-123456789123456789123456789123456789123456789123456789\r\n    result=func.isFloat(value)\r\n    test.equal(result,-123456789123456789123456789123456789123456789123456789,'isFloat: check large negative number failed')\r\n    value=[1]\r\n    result=func.isFloat(value)\r\n    test.equal(result,false,'isFloat: check array failed')\r\n    //isPositive\r\n    value=-123456789123456789123456789123456789123456789123456789\r\n    result=func.isPositive(value)\r\n    test.equal(result,false,'isPositive: check large negative number failed')\r\n    value='-0.1'\r\n    result=func.isPositive(value)\r\n    //console.log(result)\r\n    test.equal(result,false,'isPositive: check invalid float failed')\r\n    value='0.1'\r\n    result=func.isPositive(value)\r\n    test.equal(result,true,'isPositive: check valid float failed')\r\n\r\n    test.done()\r\n}\r\n\r\nvar ruleTypeCheck=function(test){\r\n    let func=testModule.ruleTypeCheck\r\n    test.expect(40)\r\n\r\n    let value,result,tmp\r\n\r\n\r\n    /*          exceedMaxLength         */\r\n    value=123.0\r\n    result=func.exceedMaxLength(value,2)\r\n    test.equal(result,true,'exceedMaxLength: float(number) length exceed failed')\r\n    value=123.0\r\n    result=func.exceedMaxLength(value,5)\r\n    test.equal(result,false,'exceedMaxLength: float(number) length failed')\r\n    value=123\r\n    result=func.exceedMaxLength(value,2)\r\n    test.equal(result,true,'exceedMaxLength: int(number) length exceed failed')\r\n    value=123\r\n    result=func.exceedMaxLength(value,3)\r\n    test.equal(result,false,'exceedMaxLength: int(number) length failed')\r\n    value='123.0'\r\n    result=func.exceedMaxLength(value,4)\r\n    test.equal(result,true,'exceedMaxLength: float(string) length exceed failed')\r\n    value='123.0'\r\n    result=func.exceedMaxLength(value,5)\r\n    test.equal(result,false,'exceedMaxLength: float(string) length failed')\r\n    value=[1]\r\n    result=func.exceedMaxLength(value,0)\r\n    test.equal(result,true,'exceedMaxLength: array length exceed failed')\r\n    value=[1]\r\n    result=func.exceedMaxLength(value,1)\r\n    test.equal(result,false,'exceedMaxLength: array length exceed failed')\r\n    value={}\r\n    result=func.exceedMaxLength(value,0)\r\n    test.equal(result,false,'exceedMaxLength: object length failed')\r\n\r\n    /*          exceedMinLength         */\r\n    value=123.0\r\n    result=func.exceedMinLength(value,4)\r\n    test.equal(result,true,'exceedMinLength: float(number) length exceed failed')\r\n    value=123.0\r\n    result=func.exceedMinLength(value,2)\r\n    test.equal(result,false,'exceedMinLength: float(number) length failed')\r\n    value=123\r\n    result=func.exceedMinLength(value,4)\r\n    test.equal(result,true,'exceedMinLength: int(number) length exceed failed')\r\n    value=123\r\n    result=func.exceedMinLength(value,3)\r\n    test.equal(result,false,'exceedMinLength: int(number) length failed')\r\n    value='123.0'\r\n    result=func.exceedMinLength(value,6)\r\n    test.equal(result,true,'exceedMinLength: float(string) length exceed failed')\r\n    value='123.0'\r\n    result=func.exceedMinLength(value,5)\r\n    test.equal(result,false,'exceedMinLength: float(string) length failed')\r\n    value=[1]\r\n    result=func.exceedMinLength(value,2)\r\n    test.equal(result,true,'exceedMinLength: array length exceed failed')\r\n    value=[1]\r\n    result=func.exceedMinLength(value,1)\r\n    test.equal(result,false,'exceedMinLength: array length exceed failed')\r\n    value={}\r\n    result=func.exceedMinLength(value,0)\r\n    test.equal(result,false,'exceedMinLength: object length failed')\r\n\r\n    /*          exactLength         */\r\n    value=123.0\r\n    result=func.exactLength(value,3)    //js自动去掉小数点为0的位数（123.0实际为123）\r\n    test.equal(result,true,'exactLength: float(number) length exact failed')\r\n    value=123.0\r\n    result=func.exactLength(value,6)\r\n    test.equal(result,false,'exactLength: float(number) length failed')\r\n    value=123\r\n    result=func.exactLength(value,3)\r\n    test.equal(result,true,'exactLength: int(number) length exact failed')\r\n    value=123\r\n    result=func.exactLength(value,4)\r\n    test.equal(result,false,'exactLength: int(number) length failed')\r\n    value='123.0'\r\n    result=func.exactLength(value,5)\r\n    test.equal(result,true,'exactLength: float(string) length exact failed')\r\n    value='123.0'\r\n    result=func.exactLength(value,4)\r\n    test.equal(result,false,'exactLength: float(string) length failed')\r\n    value=[1]\r\n    result=func.exactLength(value,1)\r\n    test.equal(result,true,'exactLength: array length exact failed')\r\n    value=[1]\r\n    result=func.exactLength(value,0)\r\n    test.equal(result,false,'exactLength: array length exact failed')\r\n    value={}\r\n    result=func.exactLength(value,0)\r\n    test.equal(result,false,'exactLength: object length failed')\r\n\r\n    /*          equalTo         */\r\n    value=null\r\n    result=func.equalTo(value,null)\r\n    test.equal(result,true,'equalTo: null equal failed')\r\n    value=undefined\r\n    result=func.equalTo(value,undefined)\r\n    test.equal(result,true,'equalTo: undefined equal failed')\r\n    value={a:1}\r\n    result=func.equalTo(value,{a:1})\r\n    test.equal(result,false,'equalTo: object equal failed')\r\n    value={a:1}\r\n    tmp=value\r\n    result=func.equalTo(value,tmp)\r\n    test.equal(result,true,'equalTo: object reference equal failed')\r\n    value=new Date('2016-02-02')\r\n    tmp=new Date('2016-02-02')\r\n    result=func.equalTo(value,tmp)\r\n    test.equal(result,true,'equalTo: date equal failed')\r\n\r\n    /*          exceedMax           */\r\n    value=1234.0\r\n    result=func.exceedMax(value,1235)\r\n    test.equal(result,false,'exceedMax: exceedMax failed')\r\n    value=1236.0\r\n    result=func.exceedMax(value,1235)\r\n    test.equal(result,true,'exceedMax: exceedMax failed')\r\n\r\n    /*          exceedMin           */\r\n    value=1234.0\r\n    result=func.exceedMin(value,1235)\r\n    test.equal(result,true,'exceedMin: exceedMin failed')\r\n    value=1236.0\r\n    result=func.exceedMin(value,1235)\r\n    test.equal(result,false,'exceedMin: exceedMin failed')\r\n\r\n    /*          ifFileFolderExist           */\r\n    value='C:/Program Files'\r\n    result=func.isFileFolderExist(value)\r\n    test.equal(result,true,'isFileFolderExist: existed folder check failed')\r\n    value='C:/Program Filessssss'\r\n    result=func.isFileFolderExist(value)\r\n    test.equal(result,false,'isFileFolderExist: not existed folder check failed')\r\n    value='C:/Windows/System32/drivers/etc/hosts'\r\n    result=func.isFileFolderExist(value)\r\n    test.equal(result,true,'isFileFolderExist: existed file check failed')\r\n    value='C:/Windows/System32/drivers/etc/hostssssss'\r\n    result=func.isFileFolderExist(value)\r\n    test.equal(result,false,'isFileFolderExist: not existed file check failed')\r\n\r\n    test.done()\r\n}\r\n\r\n\r\nvar generateRandomString=function(test){\r\n    let func=testModule\r\n    let value,result,tmp\r\n    test.expect(4)\r\n\r\n    value=func.generateRandomString()\r\n    result=regex.randomString.normal.test(value)\r\n    test.equal(result,true,'default parameter random string generate failed')\r\n\r\n    value=func.generateRandomString(4,randomStringTypeEnum.basic)\r\n    result=regex.randomString.basic.test(value)\r\n    test.equal(result,true,'basic random string generate failed')\r\n\r\n    value=func.generateRandomString(4,randomStringTypeEnum.normal)\r\n    result=regex.randomString.normal.test(value)\r\n    test.equal(result,true,'normal random string generate failed')\r\n\r\n    value=func.generateRandomString(4,randomStringTypeEnum.complicated)\r\n    result=regex.randomString.complicated.test(value)\r\n    test.equal(result,true,'complicated random string generate failed')\r\n\r\n/*    value=func.generateRandomString(4,randomStringTypeEnum.normal)\r\n    result=regex.randomString.test(value)\r\n    test.equal(result,true,'complicated random string generate failed')*/\r\n\r\n    test.done()\r\n}\r\n\r\n\r\nvar parseGmFileSize=function(test){\r\n    let func=testModule\r\n    let value,result,tmp\r\n    test.expect(8)\r\n\r\n    value='999'\r\n    result=func.parseGmFileSize(value)\r\n    test.equal(result.msg.sizeNum,value,'byte check failed')\r\n\r\n    value='1.8Ki'\r\n    result=func.parseGmFileSize(value)\r\n    test.equal(result.msg.sizeNum,'1.8','Ki float size number check failed')\r\n    test.equal(result.msg.sizeUnit,'Ki','Ki size unit check failed')\r\n\r\n    value='8Ki'\r\n    result=func.parseGmFileSize(value)\r\n    test.equal(result.msg.sizeNum,'8','Ki int size number check failed')\r\n    test.equal(result.msg.sizeUnit,'Ki','Ki size unit check failed')\r\n\r\n    value='1.8Gi'\r\n    result=func.parseGmFileSize(value)\r\n    test.equal(result.rc,gmError.exceedMaxSize.rc,'exceed Max Size check failed')\r\n\r\n    value='999Si'\r\n    result=func.parseGmFileSize(value)\r\n    test.equal(result.rc,gmError.cantParseGmFileSize.rc,'parse gm size failed')\r\n\r\n    value='aKi'\r\n    result=func.parseGmFileSize(value)\r\n    test.equal(result.rc,gmError.cantParseGmFileSize.rc,'parse gm size failed')\r\n\r\n    test.done()\r\n}\r\n\r\n\r\nvar convertImageFileSizeToByte=function (test){\r\n    let func=testModule\r\n    let value,result,tmp\r\n    test.expect(6)\r\n\r\n    result=func.convertImageFileSizeToByte(999)\r\n    test.equal(result.msg,999,'convert byte failed')\r\n\r\n    result=func.convertImageFileSizeToByte(1980)\r\n    test.equal(result.rc,gmError.invalidFileSizeInByte.rc,'convert byte exceed byte failed')\r\n\r\n    result=func.convertImageFileSizeToByte(999,'Si')\r\n    test.equal(result.rc,gmError.invalidSizeUnit.rc,'check invalid size unit failed')\r\n\r\n    result=func.convertImageFileSizeToByte(1.1,'Ki')\r\n    test.equal(result.msg,1126,'convert Ki failed')\r\n\r\n    result=func.convertImageFileSizeToByte(1.1,'Mi')\r\n    test.equal(result.msg,1153433,'convert Mi failed')\r\n\r\n    result=func.convertImageFileSizeToByte(1.1,'Gi')\r\n    test.equal(result.msg,1181116006,'convert Mi failed')\r\n\r\n    test.done()\r\n}\r\n\r\nvar encodeHtml=function(test){\r\n    let func=testModule\r\n    let value,result,tmp\r\n    test.expect(7)\r\n\r\n    result=func.encodeHtml(' ')\r\n    //console.log(result)\r\n    test.equal(result,'&#160;','convert space to html code failed')\r\n\r\n    result=func.encodeHtml('&')\r\n    test.equal(result,'&#38;','convert & to html code failed')\r\n\r\n    result=func.encodeHtml('\"')\r\n    test.equal(result,'&#34;','convert \" to html code failed')\r\n\r\n    result=func.encodeHtml(\"'\")\r\n    test.equal(result,'&#39;',\"convert ' to html code failed\")\r\n\r\n    result=func.encodeHtml(\"<\")\r\n    test.equal(result,'&#60;',\"convert < to html code failed\")\r\n\r\n    result=func.encodeHtml(\">\")\r\n    test.equal(result,'&#62;',\"convert > to html code failed\")\r\n\r\n    result=func.encodeHtml(\"<script>\")\r\n    test.equal(result,'&#60;script&#62;',\"convert > to html code failed\")\r\n\r\n    test.done()\r\n    //\\s\"&'<>\r\n}\r\n\r\nvar formatRc=function(test){\r\n    test.expect(2)\r\n    let func=testModule\r\n\r\n    let rc={rc:1000,msg:{client:'client',server:'server'}}\r\n    func.formatRc(rc)\r\n    test.equal(rc.msg,'client','format client msg failed')\r\n\r\n    rc={rc:1000,msg:{client:'client',server:'server'}}\r\n    func.formatRc(rc,false)\r\n    test.equal(rc.msg,'server','format server msg failed')\r\n\r\n/*    console.log(rc)*/\r\n    test.done()\r\n}\r\nexports.all={\r\n/*    dataTypeCheck:dataTypeCheck,\r\n    ruleTypeCheck:ruleTypeCheck,\r\n    generateRandomString:generateRandomString,\r\n    parseGmFileSize:parseGmFileSize,\r\n    convertImageFileSizeToByte:convertImageFileSizeToByte,\r\n    encodeHtml,*/\r\n    formatRc,\r\n}\r\n\r\n//console.log(testModule.generateRandomString(10,randomStringTypeEnum.complicated))"]}