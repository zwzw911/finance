{"version":3,"sources":["testMisc-compiled.js"],"names":[],"mappings":"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","file":"testMisc-compiled-compiled.js","sourcesContent":["/**\r\n * Created by ada on 2015/7/5.\r\n */\n'use strict';\n\nrequire(\"babel-polyfill\");\nrequire(\"babel-core/register\");\n\nvar testModule = require('../../server/assist/misc').func;\nvar miscError = require('../../server/define/error/nodeError').nodeError.assistError.misc;\nvar gmError = require('../../server/define/error/nodeError').nodeError.assistError.gmImage;\n/*          for generateRandomString test       */\nvar regex = require('../../server/define/regex/regex').regex;\nvar randomStringTypeEnum = require('../../server/define/enum/node').node.randomStringType;\n\nvar dataTypeCheck = function dataTypeCheck(test) {\n    test.expect(46);\n\n    var func = testModule.dataTypeCheck;\n    var result = void 0,\n        value = void 0,\n        tmp = void 0;\n    /*          isSetValue             */\n    //undefined variant\n    result = func.isSetValue(value);\n    test.equal(result, false, 'isSetValue: check undefined variant failed');\n    //null variant\n    value = null;\n    result = func.isSetValue(value);\n    test.equal(result, false, 'isSetValue: check null variant failed');\n    /*          isEmpty             */\n    /*    //not exist variant\r\n        result=func.isEmpty(a)\r\n        test.equal(result,true,'isEmpty: check not exist variant failed')*/\n\n    //string\n    value = '';\n    result = func.isEmpty(value);\n    test.equal(result, true, 'isEmpty: check empty string failed');\n    value = '     ';\n    result = func.isEmpty(value);\n    test.equal(result, true, 'isEmpty: check whitespace string failed');\n    value = [];\n    result = func.isEmpty(value);\n    test.equal(result, true, 'isEmpty: check empty array failed');\n    value = {};\n    result = func.isEmpty(value);\n    test.equal(result, true, 'isEmpty: check empty object failed');\n    value = [1];\n    result = func.isEmpty(value);\n    test.equal(result, false, 'isEmpty: check not empty array failed');\n    value = { a: 1 };\n    result = func.isEmpty(value);\n    test.equal(result, false, 'isEmpty: check not empty object failed');\n    //isString\n    value = '';\n    result = func.isString(value);\n    test.equal(result, true, 'isString: check blank string failed');\n    value = '   ';\n    result = func.isString(value);\n    test.equal(result, true, 'isString: check whitespace string failed');\n    value = 123;\n    result = func.isString(value);\n    test.equal(result, false, 'isString: check number failed');\n    value = [];\n    result = func.isString(value);\n    test.equal(result, false, 'isString: check array failed');\n    value = {};\n    result = func.isString(value);\n    test.equal(result, false, 'isString: check object failed');\n    //isArray\n    value = {};\n    result = func.isArray(value);\n    test.equal(result, false, 'isArray: check not array failed');\n    value = [];\n    result = func.isArray(value);\n    test.equal(result, true, 'isArray: check array failed');\n    //isObject\n    value = {};\n    result = func.isObject(value);\n    test.equal(result, true, 'isObject: check object failed');\n    value = []; //array和object严格区分（js中，array是object）\n    result = func.isObject(value);\n    test.equal(result, false, 'isObject: check object(array) failed');\n    //isDate\n    value = '2016'; //转换成2016-01-01\n    result = func.isDate(value);\n    test.equal(result.toLocaleString(), '2016-01-01 08:00:00', 'isDate: check year only date failed');\n    value = '2016-02-30'; //toLocaleString会自动转换成合适的日期（2016-03-01 08:00:00，8点是CST）\n    result = func.isDate(value);\n    test.equal(result.toLocaleString(), '2016-03-01 08:00:00', 'isDate: check invalid date failed');\n    value = '2016-02-02 25:30';\n    result = func.isDate(value);\n    test.equal(result, false, 'isDate: check invalid time failed');\n    value = '2016-02-02 23:30';\n    result = func.isDate(value);\n    test.equal(result.toLocaleString(), '2016-02-02 23:30:00', 'isDate: check valid time - failed');\n    value = '2016/02/02';\n    result = func.isDate(value);\n    test.equal(result.toLocaleString(), '2016-02-02 00:00:00', 'isDate: check valid date / failed');\n    //isInt\n    value = 123456789.0;\n    result = func.isInt(value);\n    test.equal(result, 123456789, 'isInt: check int failed,number float with fraction 0 is int');\n    value = 123456789.1;\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed,number float with fraction not 0 is not int');\n    value = '123456789.0';\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed,string float with fraction 0 not int');\n    value = '123456789.1';\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed,string float  with fraction not 0 not int');\n    value = 123456789123456789123456789123456789123456789123456789;\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed,exceed maxim int');\n    value = -123;\n    result = func.isInt(value);\n    test.equal(result, -123, 'isInt: check valid int failed');\n    value = '123.0';\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed, value string is float');\n    value = '123a';\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed, value contain not number char');\n    value = [1];\n    result = func.isInt(value);\n    test.equal(result, false, 'isInt: check int failed, value is arry');\n    //isNumber\n    value = 123456789.0;\n    result = func.isNumber(value);\n    test.equal(result, false, 'isNumber: check number failed,float not number');\n    value = '123456789.0';\n    result = func.isNumber(value);\n    test.equal(result, false, 'isNumber: check number failed,string is float');\n    value = -123456789123456789123456789123456789123456789123456789;\n    result = func.isNumber(value);\n    test.equal(result, false, 'isNumber: check non string negative number failed');\n    value = '123456789123456789123456789123456789123456789123456789';\n    result = func.isNumber(value);\n    test.equal(result, true, 'isNumber: check string positive number failed');\n    value = '-123456789123456789123456789123456789123456789123456789';\n    result = func.isNumber(value);\n    test.equal(result, true, 'isNumber: check string negative number failed');\n    //isFolat\n    value = 123456789.0;\n    result = func.isFloat(value);\n    test.equal(result, 123456789, 'isFloat: check float failed');\n    value = '123456789.0';\n    result = func.isFloat(value);\n    test.equal(result, 123456789, 'isFloat: check string float failed');\n    value = '-0.123456789';\n    result = func.isFloat(value);\n    test.equal(result, -0.123456789, 'isFloat: check negative string float failed');\n    value = '0.1.0';\n    result = func.isFloat(value);\n    test.equal(result, false, 'isFloat: check invalid float failed');\n    value = 123456789123456789123456789123456789123456789123456789;\n    result = func.isFloat(value);\n    test.equal(result, 123456789123456789123456789123456789123456789123456789, 'isFloat: check large number failed');\n    value = -123456789123456789123456789123456789123456789123456789;\n    result = func.isFloat(value);\n    test.equal(result, -123456789123456789123456789123456789123456789123456789, 'isFloat: check large negative number failed');\n    value = [1];\n    result = func.isFloat(value);\n    test.equal(result, false, 'isFloat: check array failed');\n    //isPositive\n    value = -123456789123456789123456789123456789123456789123456789;\n    result = func.isPositive(value);\n    test.equal(result, false, 'isPositive: check large negative number failed');\n    value = '-0.1';\n    result = func.isPositive(value);\n    //console.log(result)\n    test.equal(result, false, 'isPositive: check invalid float failed');\n    value = '0.1';\n    result = func.isPositive(value);\n    test.equal(result, true, 'isPositive: check valid float failed');\n\n    test.done();\n};\n\nvar ruleTypeCheck = function ruleTypeCheck(test) {\n    var func = testModule.ruleTypeCheck;\n    test.expect(40);\n\n    var value = void 0,\n        result = void 0,\n        tmp = void 0;\n\n    /*          exceedMaxLength         */\n    value = 123.0;\n    result = func.exceedMaxLength(value, 2);\n    test.equal(result, true, 'exceedMaxLength: float(number) length exceed failed');\n    value = 123.0;\n    result = func.exceedMaxLength(value, 5);\n    test.equal(result, false, 'exceedMaxLength: float(number) length failed');\n    value = 123;\n    result = func.exceedMaxLength(value, 2);\n    test.equal(result, true, 'exceedMaxLength: int(number) length exceed failed');\n    value = 123;\n    result = func.exceedMaxLength(value, 3);\n    test.equal(result, false, 'exceedMaxLength: int(number) length failed');\n    value = '123.0';\n    result = func.exceedMaxLength(value, 4);\n    test.equal(result, true, 'exceedMaxLength: float(string) length exceed failed');\n    value = '123.0';\n    result = func.exceedMaxLength(value, 5);\n    test.equal(result, false, 'exceedMaxLength: float(string) length failed');\n    value = [1];\n    result = func.exceedMaxLength(value, 0);\n    test.equal(result, true, 'exceedMaxLength: array length exceed failed');\n    value = [1];\n    result = func.exceedMaxLength(value, 1);\n    test.equal(result, false, 'exceedMaxLength: array length exceed failed');\n    value = {};\n    result = func.exceedMaxLength(value, 0);\n    test.equal(result, false, 'exceedMaxLength: object length failed');\n\n    /*          exceedMinLength         */\n    value = 123.0;\n    result = func.exceedMinLength(value, 4);\n    test.equal(result, true, 'exceedMinLength: float(number) length exceed failed');\n    value = 123.0;\n    result = func.exceedMinLength(value, 2);\n    test.equal(result, false, 'exceedMinLength: float(number) length failed');\n    value = 123;\n    result = func.exceedMinLength(value, 4);\n    test.equal(result, true, 'exceedMinLength: int(number) length exceed failed');\n    value = 123;\n    result = func.exceedMinLength(value, 3);\n    test.equal(result, false, 'exceedMinLength: int(number) length failed');\n    value = '123.0';\n    result = func.exceedMinLength(value, 6);\n    test.equal(result, true, 'exceedMinLength: float(string) length exceed failed');\n    value = '123.0';\n    result = func.exceedMinLength(value, 5);\n    test.equal(result, false, 'exceedMinLength: float(string) length failed');\n    value = [1];\n    result = func.exceedMinLength(value, 2);\n    test.equal(result, true, 'exceedMinLength: array length exceed failed');\n    value = [1];\n    result = func.exceedMinLength(value, 1);\n    test.equal(result, false, 'exceedMinLength: array length exceed failed');\n    value = {};\n    result = func.exceedMinLength(value, 0);\n    test.equal(result, false, 'exceedMinLength: object length failed');\n\n    /*          exactLength         */\n    value = 123.0;\n    result = func.exactLength(value, 3); //js自动去掉小数点为0的位数（123.0实际为123）\n    test.equal(result, true, 'exactLength: float(number) length exact failed');\n    value = 123.0;\n    result = func.exactLength(value, 6);\n    test.equal(result, false, 'exactLength: float(number) length failed');\n    value = 123;\n    result = func.exactLength(value, 3);\n    test.equal(result, true, 'exactLength: int(number) length exact failed');\n    value = 123;\n    result = func.exactLength(value, 4);\n    test.equal(result, false, 'exactLength: int(number) length failed');\n    value = '123.0';\n    result = func.exactLength(value, 5);\n    test.equal(result, true, 'exactLength: float(string) length exact failed');\n    value = '123.0';\n    result = func.exactLength(value, 4);\n    test.equal(result, false, 'exactLength: float(string) length failed');\n    value = [1];\n    result = func.exactLength(value, 1);\n    test.equal(result, true, 'exactLength: array length exact failed');\n    value = [1];\n    result = func.exactLength(value, 0);\n    test.equal(result, false, 'exactLength: array length exact failed');\n    value = {};\n    result = func.exactLength(value, 0);\n    test.equal(result, false, 'exactLength: object length failed');\n\n    /*          equalTo         */\n    value = null;\n    result = func.equalTo(value, null);\n    test.equal(result, true, 'equalTo: null equal failed');\n    value = undefined;\n    result = func.equalTo(value, undefined);\n    test.equal(result, true, 'equalTo: undefined equal failed');\n    value = { a: 1 };\n    result = func.equalTo(value, { a: 1 });\n    test.equal(result, false, 'equalTo: object equal failed');\n    value = { a: 1 };\n    tmp = value;\n    result = func.equalTo(value, tmp);\n    test.equal(result, true, 'equalTo: object reference equal failed');\n    value = new Date('2016-02-02');\n    tmp = new Date('2016-02-02');\n    result = func.equalTo(value, tmp);\n    test.equal(result, true, 'equalTo: date equal failed');\n\n    /*          exceedMax           */\n    value = 1234.0;\n    result = func.exceedMax(value, 1235);\n    test.equal(result, false, 'exceedMax: exceedMax failed');\n    value = 1236.0;\n    result = func.exceedMax(value, 1235);\n    test.equal(result, true, 'exceedMax: exceedMax failed');\n\n    /*          exceedMin           */\n    value = 1234.0;\n    result = func.exceedMin(value, 1235);\n    test.equal(result, true, 'exceedMin: exceedMin failed');\n    value = 1236.0;\n    result = func.exceedMin(value, 1235);\n    test.equal(result, false, 'exceedMin: exceedMin failed');\n\n    /*          ifFileFolderExist           */\n    value = 'C:/Program Files';\n    result = func.isFileFolderExist(value);\n    test.equal(result, true, 'isFileFolderExist: existed folder check failed');\n    value = 'C:/Program Filessssss';\n    result = func.isFileFolderExist(value);\n    test.equal(result, false, 'isFileFolderExist: not existed folder check failed');\n    value = 'C:/Windows/System32/drivers/etc/hosts';\n    result = func.isFileFolderExist(value);\n    test.equal(result, true, 'isFileFolderExist: existed file check failed');\n    value = 'C:/Windows/System32/drivers/etc/hostssssss';\n    result = func.isFileFolderExist(value);\n    test.equal(result, false, 'isFileFolderExist: not existed file check failed');\n\n    test.done();\n};\n\nvar generateRandomString = function generateRandomString(test) {\n    var func = testModule;\n    var value = void 0,\n        result = void 0,\n        tmp = void 0;\n    test.expect(4);\n\n    value = func.generateRandomString();\n    result = regex.randomString.normal.test(value);\n    test.equal(result, true, 'default parameter random string generate failed');\n\n    value = func.generateRandomString(4, randomStringTypeEnum.basic);\n    result = regex.randomString.basic.test(value);\n    test.equal(result, true, 'basic random string generate failed');\n\n    value = func.generateRandomString(4, randomStringTypeEnum.normal);\n    result = regex.randomString.normal.test(value);\n    test.equal(result, true, 'normal random string generate failed');\n\n    value = func.generateRandomString(4, randomStringTypeEnum.complicated);\n    result = regex.randomString.complicated.test(value);\n    test.equal(result, true, 'complicated random string generate failed');\n\n    /*    value=func.generateRandomString(4,randomStringTypeEnum.normal)\r\n        result=regex.randomString.test(value)\r\n        test.equal(result,true,'complicated random string generate failed')*/\n\n    test.done();\n};\n\nvar parseGmFileSize = function parseGmFileSize(test) {\n    var func = testModule;\n    var value = void 0,\n        result = void 0,\n        tmp = void 0;\n    test.expect(8);\n\n    value = '999';\n    result = func.parseGmFileSize(value);\n    test.equal(result.msg.sizeNum, value, 'byte check failed');\n\n    value = '1.8Ki';\n    result = func.parseGmFileSize(value);\n    test.equal(result.msg.sizeNum, '1.8', 'Ki float size number check failed');\n    test.equal(result.msg.sizeUnit, 'Ki', 'Ki size unit check failed');\n\n    value = '8Ki';\n    result = func.parseGmFileSize(value);\n    test.equal(result.msg.sizeNum, '8', 'Ki int size number check failed');\n    test.equal(result.msg.sizeUnit, 'Ki', 'Ki size unit check failed');\n\n    value = '1.8Gi';\n    result = func.parseGmFileSize(value);\n    test.equal(result.rc, gmError.exceedMaxSize.rc, 'exceed Max Size check failed');\n\n    value = '999Si';\n    result = func.parseGmFileSize(value);\n    test.equal(result.rc, gmError.cantParseGmFileSize.rc, 'parse gm size failed');\n\n    value = 'aKi';\n    result = func.parseGmFileSize(value);\n    test.equal(result.rc, gmError.cantParseGmFileSize.rc, 'parse gm size failed');\n\n    test.done();\n};\n\nvar convertImageFileSizeToByte = function convertImageFileSizeToByte(test) {\n    var func = testModule;\n    var value = void 0,\n        result = void 0,\n        tmp = void 0;\n    test.expect(6);\n\n    result = func.convertImageFileSizeToByte(999);\n    test.equal(result.msg, 999, 'convert byte failed');\n\n    result = func.convertImageFileSizeToByte(1980);\n    test.equal(result.rc, gmError.invalidFileSizeInByte.rc, 'convert byte exceed byte failed');\n\n    result = func.convertImageFileSizeToByte(999, 'Si');\n    test.equal(result.rc, gmError.invalidSizeUnit.rc, 'check invalid size unit failed');\n\n    result = func.convertImageFileSizeToByte(1.1, 'Ki');\n    test.equal(result.msg, 1126, 'convert Ki failed');\n\n    result = func.convertImageFileSizeToByte(1.1, 'Mi');\n    test.equal(result.msg, 1153433, 'convert Mi failed');\n\n    result = func.convertImageFileSizeToByte(1.1, 'Gi');\n    test.equal(result.msg, 1181116006, 'convert Mi failed');\n\n    test.done();\n};\n\nvar encodeHtml = function encodeHtml(test) {\n    var func = testModule;\n    var value = void 0,\n        result = void 0,\n        tmp = void 0;\n    test.expect(7);\n\n    result = func.encodeHtml(' ');\n    //console.log(result)\n    test.equal(result, '&#160;', 'convert space to html code failed');\n\n    result = func.encodeHtml('&');\n    test.equal(result, '&#38;', 'convert & to html code failed');\n\n    result = func.encodeHtml('\"');\n    test.equal(result, '&#34;', 'convert \" to html code failed');\n\n    result = func.encodeHtml(\"'\");\n    test.equal(result, '&#39;', \"convert ' to html code failed\");\n\n    result = func.encodeHtml(\"<\");\n    test.equal(result, '&#60;', \"convert < to html code failed\");\n\n    result = func.encodeHtml(\">\");\n    test.equal(result, '&#62;', \"convert > to html code failed\");\n\n    result = func.encodeHtml(\"<script>\");\n    test.equal(result, '&#60;script&#62;', \"convert > to html code failed\");\n\n    test.done();\n    //\\s\"&'<>\n};\n\nvar formatRc = function formatRc(test) {\n    test.expect(2);\n    var func = testModule;\n\n    var rc = { rc: 1000, msg: { client: 'client', server: 'server' } };\n    func.formatRc(rc);\n    test.equal(rc.msg, 'client', 'format client msg failed');\n\n    rc = { rc: 1000, msg: { client: 'client', server: 'server' } };\n    func.formatRc(rc, false);\n    test.equal(rc.msg, 'server', 'format server msg failed');\n\n    /*    console.log(rc)*/\n    test.done();\n};\nexports.all = {\n    /*    dataTypeCheck:dataTypeCheck,\r\n        ruleTypeCheck:ruleTypeCheck,\r\n        generateRandomString:generateRandomString,\r\n        parseGmFileSize:parseGmFileSize,\r\n        convertImageFileSizeToByte:convertImageFileSizeToByte,\r\n        encodeHtml,*/\n    formatRc: formatRc\n};\n\n//console.log(testModule.generateRandomString(10,randomStringTypeEnum.complicated))\n\n//# sourceMappingURL=testMisc-compiled.js.map"]}