{"version":3,"sources":["testMisc_ValidateInputRule.js"],"names":[],"mappings":"AAAA;;;AAGA;;AACA,QAAQ,gBAAR;AACA,QAAQ,qBAAR;AACA,IAAI,aAAW,QAAQ,0BAAR,EAAoC,IAAnD;AACA,IAAI,YAAU,QAAQ,qCAAR,EAA+C,SAA/C,CAAyD,WAAvE;AACA,IAAI,yBAAuB,UAAU,IAAV,CAAe,mBAA1C;AACA;AACA,IAAI,QAAM,QAAQ,iCAAR,EAA2C,KAArD;AACA,IAAI,WAAS,QAAQ,oCAAR,EAA8C,IAA9C,CAAmD,QAAhE;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,+BAA6B,SAA7B,4BAA6B,CAAS,IAAT,EAAc;AAC3C;AACA,QAAI,OAAK,WAAW,EAAX,CAAc,0BAAvB;AAF2C,QAGtC,IAHsC,GAGpB,UAHoB;AAAA,QAGjC,KAHiC,GAGT,WAHS;AAAA,QAG3B,IAH2B,GAGG,EAHH;;AAI3C,QAAI,eAAJ;AACA,SAAK,MAAL,CAAY,CAAZ;;AAEA;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,sBAAvB,CAA8C,EAAnE,EAAsE,oCAAtE;;AAEA,WAAK,EAAC,eAAc,KAAf,EAAL;AACA;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,sBAAvB,CAA8C,EAAnE,EAAsE,6BAAtE;;AAEA,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,KAArC,EAAL;AACA;AACA;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,sBAAvB,CAA8C,EAAnE,EAAsE,gCAAtE;;AAEA,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,KAArC,EAA2C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAArD,EAAL;AACA;AACA;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,0CAAvB;;AAEA,SAAK,IAAL;AACH,CA9BD;;AAiCA;AACA,IAAI,uBAAqB,SAArB,oBAAqB,CAAS,IAAT,EAAc;AACnC,QAAI,OAAK,WAAW,iBAAX,CAA6B,0BAAtC;AADmC,QAE9B,IAF8B,GAEZ,UAFY;AAAA,QAEzB,KAFyB,GAED,WAFC;AAAA,QAEnB,IAFmB,GAEW,EAFX;;AAGnC,QAAI,eAAJ;AACA,SAAK,MAAL,CAAY,CAAZ;;AAEA,WAAK,EAAC,eAAc,EAAf,EAAkB,QAAO,SAAS,KAAlC,EAAwC,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAlD,EAAL;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,oBAAvB,CAA4C,EAAjE,EAAoE,gDAApE;;AAEA,WAAK,EAAC,eAAc,EAAf,EAAkB,QAAO,SAAS,KAAlC,EAAwC,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAlD,EAAL;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,gBAAvB,CAAwC,EAA7D,EAAgE,gCAAhE;;AAEA,SAAK,IAAL;AACH,CAfD;;AAiBA;AACA,IAAI,oBAAkB,SAAlB,iBAAkB,CAAS,IAAT,EAAc;AAChC,QAAI,OAAK,WAAW,iBAAX,CAA6B,0BAAtC;AADgC,QAE3B,IAF2B,GAET,UAFS;AAAA,QAEtB,KAFsB,GAEE,WAFF;AAAA,QAEhB,IAFgB,GAEc,EAFd;;AAGhC,QAAI,eAAJ;;AAEA,SAAK,MAAL,CAAY,CAAZ;;AAEA,WAAK,EAAC,eAAc,IAAf,EAAoB,QAAO,iBAA3B,EAA6C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAvD,EAAL;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,CAAuC,EAA5D,EAA+D,gCAA/D;;AAIA,SAAK,IAAL;AACH,CAdD;;AAiBA;AACA,IAAI,oBAAkB,SAAlB,iBAAkB,CAAS,IAAT,EAAc;AAChC,QAAI,OAAK,WAAW,iBAAX,CAA6B,0BAAtC;AADgC,QAE3B,IAF2B,GAET,UAFS;AAAA,QAEtB,KAFsB,GAEE,WAFF;AAAA,QAEhB,IAFgB,GAEc,EAFd;;AAGhC,QAAI,eAAJ;;AAEA,SAAK,MAAL,CAAY,CAAZ;;AAEA,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,GAArC,EAAyC,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAnD,EAAL;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,OAAvB,CAA+B,EAApD,EAAuD,yCAAvD;;AAEA,SAAK,GAAL,GAAS,EAAT;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,OAAvB,CAA+B,EAApD,EAAuD,yCAAvD;;AAEA,SAAK,GAAL,GAAS,EAAT;AACA,SAAK,GAAL,GAAS,IAAT;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,OAAvB,CAA+B,EAApD,EAAuD,+CAAvD;;AAIJ;;;;AAMI,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,MAArC,EAA4C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAtD,EAAL;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,aAAvB,CAAqC,EAA1D,EAA6D,kDAA7D;;AAEA,SAAK,MAAL,GAAY,EAAC,QAAO,GAAR,EAAY,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAAlB,EAAZ;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,iEAAvB;;AAEA,WAAO,KAAK,MAAZ;AACA,SAAK,IAAL,GAAU,EAAC,QAAO,CAAC,GAAD,CAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAV;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,+DAAvB;;AAEA,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,QAArC,EAA8C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAApB,EAAxD,EAAL;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,UAAvB,CAAkC,EAAvD,EAA0D,iDAA1D;;AAIA,SAAK,IAAL;AACH,CAhDD;;AAkDA;AACA,IAAI,kBAAgB,SAAhB,eAAgB,CAAS,IAAT,EAAc;AAC9B,QAAI,OAAK,WAAW,iBAAX,CAA6B,0BAAtC;AAD8B,QAEzB,IAFyB,GAEP,UAFO;AAAA,QAEpB,KAFoB,GAEI,WAFJ;AAAA,QAEd,IAFc,GAEgB,EAFhB;;AAG9B,QAAI,eAAJ;;AAEA,SAAK,MAAL,CAAY,CAAZ;AACA,QAAI,QAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAAV;;AAEA,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,MAArC,EAA4C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,KAApB,EAAtD,EAAL;AACA;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,IAAR,EAAa,OAAM,KAAnB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,mBAAvB,CAA2C,EAAhE,EAAmE,oCAAnE;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,SAAR,EAAkB,OAAM,KAAxB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,mBAAvB,CAA2C,EAAhE,EAAmE,yCAAnE;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,EAAR,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,mBAAvB,CAA2C,EAAhE,EAAmE,yCAAnE;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,EAAR,EAAW,OAAM,EAAjB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,gBAAvB,CAAwC,EAA7D,EAAgE,4CAAhE;;AAEA,SAAK,IAAL;AACH,CAxBD;;AA4BA;AACA,IAAI,kBAAgB,SAAhB,eAAgB,CAAS,IAAT,EAAc;AAC9B,QAAI,OAAK,WAAW,iBAAX,CAA6B,0BAAtC;AAD8B,QAEzB,IAFyB,GAEP,UAFO;AAAA,QAEpB,KAFoB,GAEI,WAFJ;AAAA,QAEd,IAFc,GAEgB,EAFhB;;AAG9B,QAAI,eAAJ;AACA,SAAK,MAAL,CAAY,EAAZ;AACA,QAAI,QAAM,EAAC,IAAG,IAAJ,EAAS,KAAI,MAAb,EAAV;;AAEA;AACA,WAAK,EAAC,eAAc,KAAf,EAAqB,QAAO,SAAS,MAArC,EAA4C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,KAApB,EAAtD,EAAL;;AAEA;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,EAAR,EAAW,OAAM,KAAjB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kBAAvB,CAA0C,EAA/D,EAAkE,kCAAlE;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,EAAR,EAAW,OAAM,KAAjB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kBAAvB,CAA0C,EAA/D,EAAkE,oCAAlE;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,GAAR,EAAY,OAAM,KAAlB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kBAAvB,CAA0C,EAA/D,EAAkE,qCAAlE;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,GAAR,EAAY,OAAM,KAAlB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kBAAvB,CAA0C,EAA/D,EAAkE,mCAAlE;;AAEA,SAAK,SAAL,GAAe,EAAC,QAAO,CAAC,CAAT,EAAW,OAAM,KAAjB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,6BAAvB,CAAqD,EAA1E,EAA6E,kCAA7E;AACA,SAAK,SAAL,GAAe,EAAC,QAAO,CAAR,EAAU,OAAM,KAAhB,EAAf;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,6BAAvB,CAAqD,EAA1E,EAA6E,iCAA7E;;AAGA;AACA,WAAK,EAAC,eAAc,IAAf,EAAoB,QAAO,SAAS,MAApC,EAA2C,WAAU,EAAC,QAAO,KAAR,EAAc,OAAM,KAApB,EAArD,EAAgF,WAAU,EAAC,QAAO,EAAR,EAAW,OAAM,KAAjB,EAA1F,EAAL;;AAEA,SAAK,MAAL,IAAa,EAAC,QAAO,CAAR,EAAU,OAAM,KAAhB,EAAb;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kBAAvB,CAA0C,EAA/D,EAAkE,4BAAlE;AACA,SAAK,MAAL,IAAa,EAAC,QAAO,EAAR,EAAW,OAAM,KAAjB,EAAb;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kBAAvB,CAA0C,EAA/D,EAAkE,6BAAlE;AACJ;;;AAGI,SAAK,MAAL,IAAa,EAAC,QAAO,EAAR,EAAW,OAAM,KAAjB,EAAb;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,kCAAvB,CAA0D,EAA/E,EAAkF,+BAAlF;;AAEA,SAAK,MAAL,IAAa,EAAC,QAAO,CAAC,GAAD,EAAK,GAAL,CAAR,EAAkB,OAAM,KAAxB,EAAb;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,wCAAvB;;AAEA,SAAK,IAAL;AACH,CArDD;;AAuDA;AACA,IAAI,mBAAiB,SAAjB,gBAAiB,CAAS,IAAT,EAAe;AAChC,QAAI,OAAO,WAAW,iBAAX,CAA6B,0BAAxC;AADgC,QAE3B,IAF2B,GAET,UAFS;AAAA,QAEtB,KAFsB,GAEG,WAFH;AAAA,QAEhB,IAFgB,GAEgB,EAFhB;;AAGhC,QAAI,eAAJ;AACA,SAAK,MAAL,CAAY,EAAZ;AACA,QAAI,QAAQ,EAAC,IAAI,IAAL,EAAW,KAAK,MAAhB,EAAZ;;AAEA;AACA,WAAO,EAAC,eAAe,KAAhB,EAAuB,QAAQ,SAAS,MAAxC,EAAgD,WAAW,EAAC,QAAQ,KAAT,EAAgB,OAAO,KAAvB,EAA3D,EAAyF,WAAU,EAAC,QAAO,CAAR,EAAU,OAAM,KAAhB,EAAnG,EAAP;;AAEA,SAAK,SAAL,IAAgB,CAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,GAAyC,EAA9D,EAAiE,qCAAjE;AACA,SAAK,SAAL,IAAgB,EAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,wCAAvB;;AAGJ;;;;;;;;;AAUI,WAAO,EAAC,eAAe,KAAhB,EAAuB,QAAQ,SAAS,GAAxC,EAA6C,WAAW,EAAC,QAAQ,KAAT,EAAgB,OAAO,KAAvB,EAAxD,EAAsF,KAAI,EAAC,QAAO,CAAR,EAAU,OAAM,KAAhB,EAA1F,EAAiH,KAAI,EAAC,QAAO,CAAR,EAAU,OAAM,KAAhB,EAArH,EAAP;AACA;AACA,SAAK,SAAL,IAAgB,IAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,qCAAvB;AACA,SAAK,SAAL,IAAgB,SAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,0CAAvB;;AAEA,SAAK,SAAL,IAAgB,EAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,GAAyC,EAA9D,EAAiE,mCAAjE;AACA,SAAK,SAAL,IAAgB,EAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,GAAyC,EAA9D,EAAiE,mCAAjE;AACA,SAAK,SAAL,IAAgB,EAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,GAAyC,EAA9D,EAAiE,qCAAjE;AACA,SAAK,SAAL,IAAgB,GAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,GAAyC,EAA9D,EAAiE,oCAAjE;AACA,SAAK,SAAL,IAAgB,GAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,uBAAuB,eAAvB,GAAyC,EAA9D,EAAiE,sCAAjE;AACA,SAAK,SAAL,IAAgB,CAAhB;AACA,aAAO,KAAK,IAAL,EAAU,KAAV,EAAgB,IAAhB,CAAP;AACA,SAAK,KAAL,CAAW,OAAO,EAAlB,EAAqB,CAArB,EAAuB,kCAAvB;;AAEA;AACA,SAAK,IAAL;AACH,CA1DD;;AA6DA,QAAQ,QAAR,GAAiB;AACb,8DADa;AAEb,8CAFa;AAGb,wCAHa;AAIb,wCAJa;AAKb,oCALa;AAMZ,oCANY;AAOZ;;AAPY,CAAjB","file":"testMisc_ValidateInputRule-compiled.js","sourcesContent":["/**\r\n * Created by wzhan039 on 2016-07-07.\r\n */\r\n'use strict'\r\nrequire(\"babel-polyfill\");\r\nrequire(\"babel-core/register\")\r\nvar testModule=require('../../server/assist/misc').func;\r\nvar miscError=require('../../server/define/error/nodeError').nodeError.assistError\r\nvar validateInputRuleError=miscError.misc.validateInputSearch\r\n/*          for generateRandomString test       */\r\nvar regex=require('../../server/define/regex/regex').regex\r\nvar dataType=require('../../server/define/enum/validEnum').enum.dataType\r\n\r\n/***************************************************************************/\r\n/***************     checkRuleTypeBaseOnTypeDefine      *******************/\r\n/***************************************************************************/\r\n\r\n//1. 检查输入格式\r\nvar checkAllMandatoryFieldsExist=function(test){\r\n    //let a=testModule.validate._private.checkRuleBaseOnRuleDefine\r\n    let func=testModule.va.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl','testField',{}]\r\n    let result\r\n    test.expect(4);\r\n\r\n    /*          */\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.mandatoryFiledNotExist.rc,'chineseName undefined check failed');\r\n\r\n    rule={'chineseName':'用户名'}\r\n    //rule.userName.chineseName=\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.mandatoryFiledNotExist.rc,'type undefined check failed');\r\n\r\n    rule={'chineseName':'用户名','type':dataType.array}\r\n    //rule.userName.\r\n    //console.log(dataType.array)\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.mandatoryFiledNotExist.rc,'require undefined check failed');\r\n\r\n    rule={'chineseName':'用户名','type':dataType.array,'require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    //rule.userName.require=\r\n    //rule.userName.require=\r\n    result=func(coll,field,rule)\r\n    //console.log(`result is ${JSON.stringify(result)}`)\r\n    test.equal(result.rc,0,'all mandatory field defined check failed');\r\n\r\n    test.done()\r\n}\r\n\r\n\r\n//2 检查chineseName是否为字符\r\nvar checkChineseNameRule=function(test){\r\n    let func=testModule.validateInputRule.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl','testField',{}]\r\n    let result\r\n    test.expect(2);\r\n\r\n    rule={'chineseName':[],'type':dataType.array,'require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.chineseNameNotString.rc,'chineseName type should be string check failed');\r\n\r\n    rule={'chineseName':'','type':dataType.array,'require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.chineseNameEmpty.rc,'chineseName empty check failed');\r\n\r\n    test.done()\r\n}\r\n\r\n//3 检查type是否合法（预定义的几种type之一）\r\nvar checkTypeValidate=function(test){\r\n    let func=testModule.validateInputRule.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl','testField',{}]\r\n    let result\r\n\r\n    test.expect(1);\r\n\r\n    rule={'chineseName':'测试','type':'unknownDataType','require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.unknownDataType.rc,'unknown data type check failed');\r\n\r\n\r\n\r\n    test.done()\r\n}\r\n\r\n\r\n//4 检查某种type对应的关联rule是否存在\r\nvar checkRelatedField=function(test){\r\n    let func=testModule.validateInputRule.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl','testField',{}]\r\n    let result\r\n\r\n    test.expect(7);\r\n\r\n    rule={'chineseName':'用户名','type':dataType.int,'require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.needMin.rc,'type int related field min check failed');\r\n\r\n    rule.min={}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.needMax.rc,'type int related field max check failed');\r\n\r\n    rule.max={}\r\n    rule.min=null\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.needMin.rc,'type int related field min1 null check failed');\r\n\r\n\r\n\r\n/*    rule={'chineseName':'用户名','type':dataType.int,'require':{define:false,error:{rc:1234,msg:'1234'}},min:{},max:{}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.needMaxLength.rc,'type int related field maxLength check failed');*/\r\n\r\n\r\n\r\n    rule={'chineseName':'用户名','type':dataType.string,'require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.needMaxLength.rc,'type string related field maxLength check failed');\r\n\r\n    rule.format={define:/a/,error:{rc:1000,msg:'test'}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type string related field format exists, maxLength check failed');\r\n\r\n    delete rule.format\r\n    rule.enum={define:['a'],error:{rc:1000,msg:'test'}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type string related field enum exists, maxLength check failed');\r\n\r\n    rule={'chineseName':'用户名','type':dataType.objectId,'require':{define:false,error:{rc:1234,msg:'1234'}}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.needFormat.rc,'type objectId related field format check failed');\r\n\r\n\r\n\r\n    test.done()\r\n}\r\n\r\n//5 检测rule的格式是否正确（define/error/error.rc）\r\nvar checkRuleFormat=function(test){\r\n    let func=testModule.validateInputRule.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl','testField',{}]\r\n    let result\r\n\r\n    test.expect(4);\r\n    let error={rc:1234,msg:'1111'}\r\n\r\n    rule={'chineseName':'用户名','type':dataType.string,'require':{define:false,error:error}}\r\n    //string,只检查maxLength\r\n    rule.maxLength={define:null,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineNotDefine.rc,'maxLength define null check failed');\r\n    rule.maxLength={define:undefined,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineNotDefine.rc,'maxLength define undefined check failed');\r\n    rule.maxLength={define:{}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.errorFieldNotDefine.rc,'maxLength error not define check failed');\r\n    rule.maxLength={define:{},error:{}}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.rcFieldNotDefine.rc,'maxLength error.rc not define check failed');\r\n\r\n    test.done()\r\n}\r\n\r\n\r\n\r\n//6 检测rule的define\r\nvar checkRuleDefine=function(test){\r\n    let func=testModule.validateInputRule.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl','testField',{}]\r\n    let result\r\n    test.expect(10);\r\n    let error={rc:1234,msg:'1111'}\r\n\r\n    /*      check (max)Length fields    */\r\n    rule={'chineseName':'用户名','type':dataType.string,'require':{define:false,error:error}}\r\n\r\n    //string(或者number),以maxLength为例检查\r\n    rule.maxLength={define:{},error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.lengthDefineNotInt.rc,'maxLength define {} check failed');\r\n    rule.maxLength={define:'',error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.lengthDefineNotInt.rc,'maxLength define \\'\\' check failed');\r\n    rule.maxLength={define:'1',error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.lengthDefineNotInt.rc,'maxLength define \\'1\\' check failed');\r\n    rule.maxLength={define:0.2,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.lengthDefineNotInt.rc,'maxLength define 0.2 check failed');\r\n\r\n    rule.maxLength={define:-1,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.lengthDefineMustLargeThanZero.rc,'maxLength define -1 check failed');\r\n    rule.maxLength={define:0,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.lengthDefineMustLargeThanZero.rc,'maxLength define 0 check failed');\r\n\r\n\r\n    //检查rule:enum\r\n    rule={'chineseName':'性别','type':dataType.string,'require':{define:false,error:error},maxLength:{define:10,error:error}}\r\n\r\n    rule['enum']={define:1,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.enumDefineNotArray.rc,'enum define 1 check failed');\r\n    rule['enum']={define:{},error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.enumDefineNotArray.rc,'enum define {} check failed');\r\n/*    rule['enum']={define:null,error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.enumDefineNotArray.rc,'enum define null check failed');*/\r\n    rule['enum']={define:[],error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.enumDefineLengthMustLargerThanZero.rc,'enum define null check failed');\r\n\r\n    rule['enum']={define:['难','一'],error:error}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'enum define [\\'难\\',\\'一\\'] check failed');\r\n\r\n    test.done()\r\n}\r\n\r\n//7 check default\r\nvar checkDefaultType=function(test) {\r\n    let func = testModule.validateInputRule.checkSingleFieldRuleDefine\r\n    let [coll,field,rule]=['testColl', 'testField', {}]\r\n    let result\r\n    test.expect(10);\r\n    let error = {rc: 1234, msg: '1111'}\r\n\r\n    /*      check (max)Length fields    */\r\n    rule = {'chineseName': '用户名', 'type': dataType.string, 'require': {define: false, error: error},maxLength:{define:2,error:error}}\r\n\r\n    rule['default']=1\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type string, default 1 check failed');\r\n    rule['default']=''\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type string, default \\'\\' check failed');\r\n\r\n\r\n/*    rule = {'chineseName': '用户名', 'type': dataType.string, 'require': {define: false, error: error},maxLength:{define:2,error:error}}\r\n\r\n    rule['default']=1\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type string, default 1 check failed');\r\n    rule['default']=''\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type string, default \\'\\' check failed');*/\r\n\r\n\r\n    rule = {'chineseName': '用户名', 'type': dataType.int, 'require': {define: false, error: error},min:{define:2,error:error},max:{define:4,error:error}}\r\n    //default未设置，则不检查\r\n    rule['default']=null\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type int, default null check failed');\r\n    rule['default']=undefined\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type int, default undefined check failed');\r\n\r\n    rule['default']=[]\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type int, default [] check failed');\r\n    rule['default']={}\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type int, default {} check failed');\r\n    rule['default']=''\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type int, default \\'\\' check failed');\r\n    rule['default']=0.1\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type int, default 0.1 check failed');\r\n    rule['default']='1'\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,validateInputRuleError.ruleDefineWrong().rc,'type int, default \\'1\\' check failed');\r\n    rule['default']=1\r\n    result=func(coll,field,rule)\r\n    test.equal(result.rc,0,'type int, default 1 check failed');\r\n\r\n    //number(偷懒，不测)\r\n    test.done()\r\n}\r\n\r\n\r\nexports.validate={\r\n    checkAllMandatoryFieldsExist,\r\n    checkChineseNameRule,\r\n    checkTypeValidate,\r\n    checkRelatedField,\r\n    checkRuleFormat,\r\n     checkRuleDefine,\r\n     checkDefaultType,\r\n\r\n}"]}